{"version":3,"file":"list.min.js","sources":["../../../apps/frappe/frappe/public/js/frappe/model/indicator.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter_list.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/field_select.js","../../../apps/frappe/frappe/public/js/frappe/ui/tags.js","../../../apps/frappe/frappe/public/js/frappe/ui/tag_editor.js","../../../apps/frappe/frappe/public/js/frappe/ui/like.js","../../../apps/frappe/frappe/public/js/frappe/list/base_list.js","../../../apps/frappe/frappe/public/js/frappe/list/bulk_operations.js","../../../apps/frappe/frappe/public/js/frappe/list/list_settings.js","../../../apps/frappe/frappe/public/js/frappe/list/list_view.js","../../../apps/frappe/frappe/public/js/frappe/list/list_factory.js","../../../apps/frappe/frappe/public/js/frappe/list/list_view_select.js","../../../apps/frappe/frappe/public/js/frappe/list/list_filter.js","../../../apps/frappe/frappe/public/js/frappe/views/file/file_view.js","../../../apps/frappe/frappe/public/js/frappe/views/interaction.js","../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar.js","../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar_group_by.js","../../../apps/frappe/frappe/public/js/frappe/views/gantt/gantt_view.js","../../../apps/frappe/frappe/public/js/frappe/views/calendar/calendar.js","../../../apps/frappe/frappe/public/js/frappe/views/dashboard/dashboard_view.js","../../../apps/frappe/frappe/public/js/frappe/views/image/image_view.js","../../../apps/frappe/frappe/public/js/frappe/views/map/map_view.js","../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_view.js","../../../apps/frappe/frappe/public/js/frappe/views/inbox/inbox_view.js","../../../apps/frappe/frappe/public/js/frappe/views/treeview.js"],"sourcesContent":["// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n\nfrappe.has_indicator = function(doctype) {\n\t// returns true if indicator is present\n\tif(frappe.model.is_submittable(doctype)) {\n\t\treturn true;\n\t} else if((frappe.listview_settings[doctype] || {}).get_indicator\n\t\t|| frappe.workflow.get_state_fieldname(doctype)) {\n\t\treturn true;\n\t} else if(frappe.meta.has_field(doctype, 'enabled')\n\t\t|| frappe.meta.has_field(doctype, 'disabled')) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfrappe.get_indicator = function(doc, doctype) {\n\tif(doc.__unsaved) {\n\t\treturn [__(\"Not Saved\"), \"orange\"];\n\t}\n\n\tif(!doctype) doctype = doc.doctype;\n\n\tvar workflow = frappe.workflow.workflows[doctype];\n\tvar without_workflow = workflow ? workflow['override_status'] : true;\n\n\tvar settings = frappe.listview_settings[doctype] || {};\n\n\tvar is_submittable = frappe.model.is_submittable(doctype),\n\t\tworkflow_fieldname = frappe.workflow.get_state_fieldname(doctype);\n\n\t// workflow\n\tif(workflow_fieldname && !without_workflow) {\n\t\tvar value = doc[workflow_fieldname];\n\t\tif(value) {\n\t\t\tvar colour = \"\";\n\n\t\t\tif(locals[\"Workflow State\"][value] && locals[\"Workflow State\"][value].style) {\n\t\t\t\tvar colour = {\n\t\t\t\t\t\"Success\": \"green\",\n\t\t\t\t\t\"Warning\": \"orange\",\n\t\t\t\t\t\"Danger\": \"red\",\n\t\t\t\t\t\"Primary\": \"blue\",\n\t\t\t\t\t\"Inverse\": \"black\",\n\t\t\t\t\t\"Info\": \"light-blue\",\n\t\t\t\t}[locals[\"Workflow State\"][value].style];\n\t\t\t}\n\t\t\tif (!colour) colour = \"gray\";\n\n\t\t\treturn [__(value), colour, workflow_fieldname + ',=,' + value];\n\t\t}\n\t}\n\n\t// draft if document is submittable\n\tif(is_submittable && doc.docstatus==0 && !settings.has_indicator_for_draft) {\n\t\treturn [__(\"Draft\"), \"red\", \"docstatus,=,0\"];\n\t}\n\n\t// cancelled\n\tif(is_submittable && doc.docstatus==2 && !settings.has_indicator_for_cancelled) {\n\t\treturn [__(\"Cancelled\"), \"red\", \"docstatus,=,2\"];\n\t}\n\n\tif(settings.get_indicator) {\n\t\tvar indicator = settings.get_indicator(doc);\n\t\tif(indicator) return indicator;\n\t}\n\n\t// if submittable\n\tif(is_submittable && doc.docstatus==1) {\n\t\treturn [__(\"Submitted\"), \"blue\", \"docstatus,=,1\"];\n\t}\n\n\t// based on status\n\tif(doc.status) {\n\t\treturn [__(doc.status), frappe.utils.guess_colour(doc.status)];\n\t}\n\n\t// based on enabled\n\tif(frappe.meta.has_field(doctype, 'enabled')) {\n\t\tif(doc.enabled) {\n\t\t\treturn [__('Enabled'), 'blue', 'enabled,=,1'];\n\t\t} else {\n\t\t\treturn [__('Disabled'), 'grey', 'enabled,=,0'];\n\t\t}\n\t}\n\n\t// based on disabled\n\tif(frappe.meta.has_field(doctype, 'disabled')) {\n\t\tif(doc.disabled) {\n\t\t\treturn [__('Disabled'), 'grey', 'disabled,=,1'];\n\t\t} else {\n\t\t\treturn [__('Enabled'), 'blue', 'disabled,=,0'];\n\t\t}\n\t}\n}\n","frappe.ui.Filter = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tif (this.value === null || this.value === undefined) {\n\t\t\tthis.value = '';\n\t\t}\n\n\t\tthis.utils = frappe.ui.filter_utils;\n\t\tthis.set_conditions();\n\t\tthis.set_conditions_from_config();\n\t\tthis.make();\n\t}\n\n\tset_conditions() {\n\t\tthis.conditions = [\n\t\t\t['=', __('Equals')],\n\t\t\t['!=', __('Not Equals')],\n\t\t\t['like', __('Like')],\n\t\t\t['not like', __('Not Like')],\n\t\t\t['in', __('In')],\n\t\t\t['not in', __('Not In')],\n\t\t\t['is', __('Is')],\n\t\t\t['>', '>'],\n\t\t\t['<', '<'],\n\t\t\t['>=', '>='],\n\t\t\t['<=', '<='],\n\t\t\t['Between', __('Between')],\n\t\t\t['Timespan', __('Timespan')],\n\t\t];\n\n\t\tthis.nested_set_conditions = [\n\t\t\t['descendants of', __('Descendants Of')],\n\t\t\t['not descendants of', __('Not Descendants Of')],\n\t\t\t['ancestors of', __('Ancestors Of')],\n\t\t\t['not ancestors of', __('Not Ancestors Of')],\n\t\t];\n\n\t\tthis.conditions.push(...this.nested_set_conditions);\n\n\t\tthis.invalid_condition_map = {\n\t\t\tDate: ['like', 'not like'],\n\t\t\tDatetime: ['like', 'not like'],\n\t\t\tData: ['Between', 'Timespan'],\n\t\t\tSelect: ['like', 'not like', 'Between', 'Timespan'],\n\t\t\tLink: ['Between', 'Timespan', '>', '<', '>=', '<='],\n\t\t\tCurrency: ['Between', 'Timespan'],\n\t\t\tColor: ['Between', 'Timespan'],\n\t\t\tCheck: this.conditions.map((c) => c[0]).filter((c) => c !== '='),\n\t\t};\n\t}\n\n\tset_conditions_from_config() {\n\t\tif (frappe.boot.additional_filters_config) {\n\t\t\tthis.filters_config = frappe.boot.additional_filters_config;\n\t\t\tfor (let key of Object.keys(this.filters_config)) {\n\t\t\t\tconst filter = this.filters_config[key];\n\t\t\t\tthis.conditions.push([key, __(filter.label)]);\n\t\t\t\tfor (let fieldtype of Object.keys(this.invalid_condition_map)) {\n\t\t\t\t\tif (!filter.valid_for_fieldtypes.includes(fieldtype)) {\n\t\t\t\t\t\tthis.invalid_condition_map[fieldtype].push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmake() {\n\t\tthis.filter_edit_area = $(\n\t\t\tfrappe.render_template('edit_filter', {\n\t\t\t\tconditions: this.conditions,\n\t\t\t})\n\t\t);\n\t\tthis.parent && this.filter_edit_area.appendTo(this.parent.find('.filter-edit-area'));\n\t\tthis.make_select();\n\t\tthis.set_events();\n\t\tthis.setup();\n\t}\n\n\tmake_select() {\n\t\tthis.fieldselect = new frappe.ui.FieldSelect({\n\t\t\tparent: this.filter_edit_area.find('.fieldname-select-area'),\n\t\t\tdoctype: this.parent_doctype,\n\t\t\tparent_doctype: this._parent_doctype,\n\t\t\tfilter_fields: this.filter_fields,\n\t\t\tinput_class: 'input-xs',\n\t\t\tselect: (doctype, fieldname) => {\n\t\t\t\tthis.set_field(doctype, fieldname);\n\t\t\t},\n\t\t});\n\n\t\tif (this.fieldname) {\n\t\t\tthis.fieldselect.set_value(this.doctype, this.fieldname);\n\t\t}\n\t}\n\n\tset_events() {\n\t\tthis.filter_edit_area.find('span.remove-filter').on('click', () => {\n\t\t\tthis.remove();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.filter_edit_area.find('.condition').change(() => {\n\t\t\tif (!this.field) return;\n\n\t\t\tlet condition = this.get_condition();\n\t\t\tlet fieldtype = null;\n\n\t\t\tif (['in', 'like', 'not in', 'not like'].includes(condition)) {\n\t\t\t\tfieldtype = 'Data';\n\t\t\t\tthis.add_condition_help(condition);\n\t\t\t} else {\n\t\t\t\tthis.filter_edit_area.find('.filter-description').empty();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t['Select', 'MultiSelect'].includes(this.field.df.fieldtype) &&\n\t\t\t\t['in', 'not in'].includes(condition)\n\t\t\t) {\n\t\t\t\tfieldtype = 'MultiSelect';\n\t\t\t}\n\n\t\t\tthis.set_field(\n\t\t\t\tthis.field.df.parent,\n\t\t\t\tthis.field.df.fieldname,\n\t\t\t\tfieldtype,\n\t\t\t\tcondition\n\t\t\t);\n\t\t});\n\t}\n\n\tsetup() {\n\t\tconst fieldname = this.fieldname || 'name';\n\t\t// set the field\n\t\treturn this.set_values(this.doctype, fieldname, this.condition, this.value);\n\t}\n\n\tsetup_state(is_new) {\n\t\tlet promise = Promise.resolve();\n\t\tif (is_new) {\n\t\t\tthis.filter_edit_area.addClass('new-filter');\n\t\t} else {\n\t\t\tpromise = this.update_filter_tag();\n\t\t}\n\n\t\tif (this.hidden) {\n\t\t\tpromise.then(() => this.$filter_tag.hide());\n\t\t}\n\t}\n\n\tfreeze() {\n\t\tthis.update_filter_tag();\n\t}\n\n\tupdate_filter_tag() {\n\t\tif (this._filter_value_set) {\n\t\t\treturn this._filter_value_set.then(() => {\n\t\t\t\t!this.$filter_tag ? this.make_tag() : this.set_filter_button_text();\n\t\t\t\tthis.filter_edit_area.hide();\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.filter_edit_area.remove();\n\t\tthis.field = null;\n\t\t// this.on_change(true);\n\t}\n\n\tset_values(doctype, fieldname, condition, value) {\n\t\t// presents given (could be via tags!)\n\t\tif (this.set_field(doctype, fieldname) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.field.df.original_type === 'Check') {\n\t\t\tvalue = value == 1 ? 'Yes' : 'No';\n\t\t}\n\t\tif (condition) this.set_condition(condition, true);\n\n\t\t// set value can be asynchronous, so update_filter_tag should happen after field is set\n\t\tthis._filter_value_set = Promise.resolve();\n\n\t\tif (['in', 'not in'].includes(condition) && Array.isArray(value)) {\n\t\t\tvalue = value.join(',');\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tthis._filter_value_set = this.field.set_value(value);\n\t\t} else if (value !== undefined || value !== null) {\n\t\t\tthis._filter_value_set = this.field.set_value((value + '').trim());\n\t\t}\n\t\treturn this._filter_value_set;\n\t}\n\n\tset_field(doctype, fieldname, fieldtype, condition) {\n\t\t// set in fieldname (again)\n\t\tlet cur = {};\n\t\tif (this.field) for (let k in this.field.df) cur[k] = this.field.df[k];\n\n\t\tlet original_docfield = (this.fieldselect.fields_by_name[doctype] || {})[\n\t\t\tfieldname\n\t\t];\n\n\t\tif (!original_docfield) {\n\t\t\tconsole.warn(`Field ${fieldname} is not selectable.`);\n\t\t\tthis.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tlet df = copy_dict(original_docfield);\n\n\t\t// filter field shouldn't be read only or hidden\n\t\tdf.read_only = 0;\n\t\tdf.hidden = 0;\n\t\tdf.is_filter = true;\n\t\tdelete df.hidden_due_to_dependency;\n\n\t\tlet c = condition ? condition : this.utils.get_default_condition(df);\n\t\tthis.set_condition(c);\n\n\t\tthis.utils.set_fieldtype(df, fieldtype, this.get_condition());\n\n\t\t// called when condition is changed,\n\t\t// don't change if all is well\n\t\tif (\n\t\t\tthis.field &&\n\t\t\tcur.fieldname == fieldname &&\n\t\t\tdf.fieldtype == cur.fieldtype &&\n\t\t\tdf.parent == cur.parent &&\n\t\t\tdf.options == cur.options\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// clear field area and make field\n\t\tthis.fieldselect.selected_doctype = doctype;\n\t\tthis.fieldselect.selected_fieldname = fieldname;\n\n\t\tif (\n\t\t\tthis.filters_config &&\n\t\t\tthis.filters_config[condition] &&\n\t\t\tthis.filters_config[condition].valid_for_fieldtypes.includes(df.fieldtype)\n\t\t) {\n\t\t\tlet args = {};\n\t\t\tif (this.filters_config[condition].depends_on) {\n\t\t\t\tconst field_name = this.filters_config[condition].depends_on;\n\t\t\t\tconst filter_value = this.filter_list.get_filter_value(fieldname);\n\t\t\t\targs[field_name] = filter_value;\n\t\t\t}\n\t\t\tfrappe\n\t\t\t\t.xcall(this.filters_config[condition].get_field, args)\n\t\t\t\t.then(field => {\n\t\t\t\t\tdf.fieldtype = field.fieldtype;\n\t\t\t\t\tdf.options = field.options;\n\t\t\t\t\tdf.fieldname = fieldname;\n\t\t\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t}\n\t}\n\n\tmake_field(df, old_fieldtype) {\n\t\tlet old_text = this.field ? this.field.get_value() : null;\n\t\tthis.hide_invalid_conditions(df.fieldtype, df.original_type);\n\t\tthis.toggle_nested_set_conditions(df);\n\t\tlet field_area = this.filter_edit_area\n\t\t\t.find('.filter-field')\n\t\t\t.empty()\n\t\t\t.get(0);\n\t\tdf.input_class = 'input-xs';\n\t\tlet f = frappe.ui.form.make_control({\n\t\t\tdf: df,\n\t\t\tparent: field_area,\n\t\t\tonly_input: true,\n\t\t});\n\t\tf.refresh();\n\n\t\tthis.field = f;\n\t\tif (old_text && f.fieldtype === old_fieldtype) {\n\t\t\tthis.field.set_value(old_text);\n\t\t}\n\n\t\tthis.bind_filter_field_events();\n\t}\n\n\tbind_filter_field_events() {\n\t\t// Apply filter on input focus out\n\t\tthis.field.$input.on('focusout', () => this.on_change());\n\n\t\t// run on enter\n\t\t$(this.field.wrapper)\n\t\t\t.find(':input')\n\t\t\t.keydown(e => {\n\t\t\t\tif (e.which == 13 && this.field.df.fieldtype !== 'MultiSelect') {\n\t\t\t\t\tthis.on_change();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tget_value() {\n\t\treturn [\n\t\t\tthis.fieldselect.selected_doctype,\n\t\t\tthis.field.df.fieldname,\n\t\t\tthis.get_condition(),\n\t\t\tthis.get_selected_value(),\n\t\t\tthis.hidden,\n\t\t];\n\t}\n\n\tget_selected_value() {\n\t\treturn this.utils.get_selected_value(this.field, this.get_condition());\n\t}\n\n\tget_condition() {\n\t\treturn this.filter_edit_area.find('.condition').val();\n\t}\n\n\tset_condition(condition, trigger_change = false) {\n\t\tlet $condition_field = this.filter_edit_area.find('.condition');\n\t\t$condition_field.val(condition);\n\t\tif (trigger_change) $condition_field.change();\n\t}\n\n\tadd_condition_help(condition) {\n\t\tconst description = ['in', 'not in'].includes(condition)\n\t\t\t? __('values separated by commas')\n\t\t\t: __('use % as wildcard');\n\n\t\tthis.filter_edit_area.find('.filter-description').html(description);\n\t}\n\n\tmake_tag() {\n\t\tif (!this.field) return;\n\t\tthis.$filter_tag = this.get_filter_tag_element().insertAfter(\n\t\t\tthis.parent.find('.active-tag-filters .clear-filters')\n\t\t);\n\t\tthis.set_filter_button_text();\n\t\tthis.bind_tag();\n\t}\n\n\tbind_tag() {\n\t\tthis.$filter_tag.find('.remove-filter').on('click', this.remove.bind(this));\n\n\t\tlet filter_button = this.$filter_tag.find('.toggle-filter');\n\t\tfilter_button.on('click', () => {\n\t\t\tfilter_button\n\t\t\t\t.closest('.tag-filters-area')\n\t\t\t\t.find('.filter-edit-area')\n\t\t\t\t.show();\n\t\t\tthis.filter_edit_area.toggle();\n\t\t});\n\t}\n\n\tset_filter_button_text() {\n\t\tthis.$filter_tag.find('.toggle-filter').html(this.get_filter_button_text());\n\t}\n\n\tget_filter_button_text() {\n\t\tlet value = this.utils.get_formatted_value(\n\t\t\tthis.field,\n\t\t\tthis.get_selected_value()\n\t\t);\n\t\treturn `${__(this.field.df.label)} ${__(this.get_condition())} ${__(\n\t\t\tvalue\n\t\t)}`;\n\t}\n\n\tget_filter_tag_element() {\n\t\treturn $(`<div class=\"filter-tag btn-group\">\n\t\t\t<button class=\"btn btn-default btn-xs toggle-filter\"\n\t\t\t\ttitle=\"${__('Edit Filter')}\">\n\t\t\t</button>\n\t\t\t<button class=\"btn btn-default btn-xs remove-filter\"\n\t\t\t\ttitle=\"${__('Remove Filter')}\">\n\t\t\t\t${frappe.utils.icon('close')}\n\t\t\t</button>\n\t\t</div>`);\n\t}\n\n\thide_invalid_conditions(fieldtype, original_type) {\n\t\tlet invalid_conditions =\n\t\t\tthis.invalid_condition_map[original_type] ||\n\t\t\tthis.invalid_condition_map[fieldtype] ||\n\t\t\t[];\n\n\t\tfor (let condition of this.conditions) {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(!invalid_conditions.includes(condition[0]));\n\t\t}\n\t}\n\n\ttoggle_nested_set_conditions(df) {\n\t\tlet show_condition =\n\t\t\tdf.fieldtype === 'Link' &&\n\t\t\tfrappe.boot.nested_set_doctypes.includes(df.options);\n\t\tthis.nested_set_conditions.forEach((condition) => {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(show_condition);\n\t\t});\n\t}\n};\n\nfrappe.ui.filter_utils = {\n\tget_formatted_value(field, value) {\n\t\tif (field.df.fieldname === 'docstatus') {\n\t\t\tvalue = { 0: 'Draft', 1: 'Submitted', 2: 'Cancelled' }[value] || value;\n\t\t} else if (field.df.original_type === 'Check') {\n\t\t\tvalue = { 0: 'No', 1: 'Yes' }[cint(value)];\n\t\t}\n\t\treturn frappe.format(value, field.df, { only_value: 1 });\n\t},\n\n\tget_selected_value(field, condition) {\n\t\tif (!field) return;\n\n\t\tlet val = field.get_value();\n\n\t\tif (typeof val === 'string') {\n\t\t\tval = strip(val);\n\t\t}\n\n\t\tif (condition == 'is' && !val) {\n\t\t\tval = field.df.options[0].value;\n\t\t}\n\n\t\tif (field.df.original_type == 'Check') {\n\t\t\tval = val == 'Yes' ? 1 : 0;\n\t\t}\n\n\t\tif (condition.indexOf('like', 'not like') !== -1) {\n\t\t\t// automatically append wildcards\n\t\t\tif (val && !(val.startsWith('%') || val.endsWith('%'))) {\n\t\t\t\tval = '%' + val + '%';\n\t\t\t}\n\t\t} else if (in_list(['in', 'not in'], condition)) {\n\t\t\tif (val) {\n\t\t\t\tval = val.split(',').map((v) => strip(v));\n\t\t\t}\n\t\t}\n\t\tif (val === '%') {\n\t\t\tval = '';\n\t\t}\n\n\t\treturn val;\n\t},\n\n\tget_default_condition(df) {\n\t\tif (df.fieldtype == 'Data') {\n\t\t\treturn 'like';\n\t\t} else if (df.fieldtype == 'Date' || df.fieldtype == 'Datetime') {\n\t\t\treturn 'Between';\n\t\t} else {\n\t\t\treturn '=';\n\t\t}\n\t},\n\n\tset_fieldtype(df, fieldtype, condition) {\n\t\t// reset\n\t\tif (df.original_type) df.fieldtype = df.original_type;\n\t\telse df.original_type = df.fieldtype;\n\n\t\tdf.description = '';\n\t\tdf.reqd = 0;\n\t\tdf.ignore_link_validation = true;\n\n\t\t// given\n\t\tif (fieldtype) {\n\t\t\tdf.fieldtype = fieldtype;\n\t\t\treturn;\n\t\t}\n\n\t\t// scrub\n\t\tif (df.fieldname == 'docstatus') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ value: 0, label: __('Draft') },\n\t\t\t\t{ value: 1, label: __('Submitted') },\n\t\t\t\t{ value: 2, label: __('Cancelled') },\n\t\t\t];\n\t\t} else if (df.fieldtype == 'Check') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = 'No\\nYes';\n\t\t} else if (\n\t\t\t[\n\t\t\t\t'Text',\n\t\t\t\t'Small Text',\n\t\t\t\t'Text Editor',\n\t\t\t\t'Code',\n\t\t\t\t'Markdown Editor',\n\t\t\t\t'HTML Editor',\n\t\t\t\t'Tag',\n\t\t\t\t'Comments',\n\t\t\t\t'Dynamic Link',\n\t\t\t\t'Read Only',\n\t\t\t\t'Assign',\n\t\t\t\t'Color',\n\t\t\t].indexOf(df.fieldtype) != -1\n\t\t) {\n\t\t\tdf.fieldtype = 'Data';\n\t\t} else if (\n\t\t\tdf.fieldtype == 'Link' &&\n\t\t\t[\n\t\t\t\t'=',\n\t\t\t\t'!=',\n\t\t\t\t'descendants of',\n\t\t\t\t'ancestors of',\n\t\t\t\t'not descendants of',\n\t\t\t\t'not ancestors of',\n\t\t\t].indexOf(condition) == -1\n\t\t) {\n\t\t\tdf.fieldtype = 'Data';\n\t\t}\n\t\tif (\n\t\t\tdf.fieldtype === 'Data' &&\n\t\t\t(df.options || '').toLowerCase() === 'email'\n\t\t) {\n\t\t\tdf.options = null;\n\t\t}\n\t\tif (\n\t\t\tcondition == 'Between' &&\n\t\t\t(df.fieldtype == 'Date' || df.fieldtype == 'Datetime')\n\t\t) {\n\t\t\tdf.fieldtype = 'DateRange';\n\t\t}\n\t\tif (\n\t\t\tcondition == 'Timespan' &&\n\t\t\t['Date', 'Datetime', 'DateRange', 'Select'].includes(df.fieldtype)\n\t\t) {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = this.get_timespan_options(['Last', 'Yesterday', 'Today', 'Tomorrow', 'This', 'Next']);\n\t\t}\n\t\tif (condition === 'is') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ label: __('Set', null, 'Field value is set'), value: 'set' },\n\t\t\t\t{ label: __('Not Set', null, 'Field value is not set'), value: 'not set' },\n\t\t\t];\n\t\t}\n\t\treturn;\n\t},\n\n\tget_timespan_options(periods) {\n\t\tconst period_map = {\n\t\t\tLast: ['Week', 'Month', 'Quarter', '6 months', 'Year'],\n\t\t\tThis: ['Week', 'Month', 'Quarter', 'Year'],\n\t\t\tNext: ['Week', 'Month', 'Quarter', '6 months', 'Year'],\n\t\t};\n\t\tlet options = [];\n\t\tperiods.forEach((period) => {\n\t\t\tif (period_map[period]) {\n\t\t\t\tperiod_map[period].forEach((p) => {\n\t\t\t\t\toptions.push({\n\t\t\t\t\t\tlabel: `${period} ${p}`,\n\t\t\t\t\t\tvalue: `${period.toLowerCase()} ${p.toLowerCase()}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: __(period),\n\t\t\t\t\tvalue: `${period.toLowerCase()}`,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t},\n};\n","frappe.ui.FilterGroup = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.filters = [];\n\t\twindow.fltr = this;\n\t\tif (!this.filter_button) {\n\t\t\tthis.wrapper = this.parent;\n\t\t\tthis.wrapper.append(this.get_filter_area_template());\n\t\t\tthis.set_filter_events();\n\t\t} else {\n\t\t\tthis.make_popover();\n\t\t}\n\t}\n\n\tmake_popover() {\n\t\tthis.init_filter_popover();\n\t\tthis.set_popover_events();\n\t}\n\n\tinit_filter_popover() {\n\t\tthis.filter_button.popover({\n\t\t\tcontent: this.get_filter_area_template(),\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"filter-popover popover\">\n\t\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t\t<div class=\"popover-body popover-content\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t\thtml: true,\n\t\t\ttrigger: 'manual',\n\t\t\tcontainer: 'body',\n\t\t\tplacement: 'bottom',\n\t\t\toffset: '-100px 0'\n\t\t});\n\t}\n\n\ttoggle_empty_filters(show) {\n\t\tthis.wrapper &&\n\t\t\tthis.wrapper.find('.empty-filters').toggle(show);\n\t}\n\n\tset_popover_events() {\n\t\t$(document.body).on('click', (e) => {\n\t\t\tif (this.wrapper && this.wrapper.is(':visible')) {\n\t\t\t\tconst in_datepicker = $(e.target).is('.datepicker--cell')\n\t\t\t\t\t|| $(e.target).closest('.datepicker--nav-title').length !== 0\n\t\t\t\t\t|| $(e.target).parents('.datepicker--nav-action').length !== 0;\n\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).parents('.filter-popover').length === 0\n\t\t\t\t\t&& $(e.target).parents('.filter-box').length === 0\n\t\t\t\t\t&& this.filter_button.find($(e.target)).length === 0\n\t\t\t\t\t&& !$(e.target).is(this.filter_button)\n\t\t\t\t\t&& !in_datepicker\n\t\t\t\t) {\n\t\t\t\t\tthis.wrapper && this.filter_button.popover('hide');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.filter_button.on('click', () => {\n\t\t\tthis.filter_button.popover('toggle');\n\t\t});\n\n\t\tthis.filter_button.on('shown.bs.popover', () => {\n\t\t\tlet hide_empty_filters = this.filters && this.filters.length > 0;\n\n\t\t\tif (!this.wrapper) {\n\t\t\t\tthis.wrapper = $('.filter-popover');\n\t\t\t\tif (hide_empty_filters) {\n\t\t\t\t\tthis.toggle_empty_filters(false);\n\t\t\t\t\tthis.add_filters_to_popover(this.filters);\n\t\t\t\t}\n\t\t\t\tthis.set_filter_events();\n\t\t\t}\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\t!hide_empty_filters && this.add_filter(this.doctype, 'name');\n\t\t});\n\n\t\tthis.filter_button.on('hidden.bs.popover', () => {\n\t\t\tthis.apply();\n\t\t});\n\n\t\t// REDESIGN-TODO: (Temporary) Review and find best solution for this\n\t\tfrappe.router.on('change', () => {\n\t\t\tif (this.wrapper && this.wrapper.is(':visible')) {\n\t\t\t\tthis.filter_button.popover('hide');\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_filters_to_popover(filters) {\n\t\tfilters.forEach(filter => {\n\t\t\tfilter.parent = this.wrapper;\n\t\t\tfilter.field = null;\n\t\t\tfilter.make();\n\t\t});\n\t}\n\n\tapply() {\n\t\tthis.update_filters();\n\t\tthis.on_change();\n\t}\n\n\tupdate_filter_button() {\n\t\tconst filters_applied = this.filters.length > 0;\n\t\tconst button_label = filters_applied\n\t\t\t? this.filters.length > 1\n\t\t\t\t? __(\"{0} filters\", [this.filters.length])\n\t\t\t\t: __(\"{0} filter\", [this.filters.length])\n\t\t\t: __('Filter');\n\n\n\t\tthis.filter_button\n\t\t\t.toggleClass('btn-default', !filters_applied)\n\t\t\t.toggleClass('btn-primary-light', filters_applied);\n\n\t\tthis.filter_button.find('.filter-icon')\n\t\t\t.toggleClass('active', filters_applied);\n\n\t\tthis.filter_button.find('.button-label').html(button_label);\n\t}\n\n\tset_filter_events() {\n\t\tthis.wrapper.find('.add-filter').on('click', () => {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tthis.add_filter(this.doctype, 'name');\n\t\t});\n\n\t\tthis.wrapper.find('.clear-filters').on('click', () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tthis.clear_filters();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.wrapper.find('.apply-filters').on('click', () => {\n\t\t\tthis.filter_button.popover('hide');\n\t\t});\n\t}\n\n\tadd_filters(filters) {\n\t\tlet promises = [];\n\n\t\tfor (const filter of filters) {\n\t\t\tpromises.push(() => this.add_filter(...filter));\n\t\t}\n\n\t\treturn frappe.run_serially(promises).then(() => this.update_filters());\n\t}\n\n\tadd_filter(doctype, fieldname, condition, value, hidden) {\n\t\tif (!fieldname) return Promise.resolve();\n\t\t// adds a new filter, returns true if filter has been added\n\n\t\t// {}: Add in page filter by fieldname if exists ('=' => 'like')\n\n\t\tif (!this.validate_args(doctype, fieldname)) return false;\n\t\tconst is_new_filter = arguments.length < 2;\n\t\tif (is_new_filter && this.wrapper.find('.new-filter:visible').length) {\n\t\t\t// only allow 1 new filter at a time!\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\tlet args = [doctype, fieldname, condition, value, hidden];\n\t\t\tconst promise = this.push_new_filter(args, is_new_filter);\n\t\t\treturn (promise && promise.then) ? promise : Promise.resolve();\n\t\t}\n\t}\n\n\tvalidate_args(doctype, fieldname) {\n\t\tif (doctype && fieldname\n\t\t\t&& !frappe.meta.has_field(doctype, fieldname)\n\t\t\t&& !frappe.model.std_fields_list.includes(fieldname)) {\n\n\t\t\tfrappe.msgprint({\n\t\t\t\tmessage: __('Invalid filter: {0}', [fieldname.bold()]),\n\t\t\t\tindicator: 'red',\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpush_new_filter(args) {\n\t\t// args: [doctype, fieldname, condition, value]\n\t\tif (this.filter_exists(args)) return;\n\n\t\t// {}: Clear page filter fieldname field\n\n\t\tlet filter = this._push_new_filter(...args);\n\n\t\tif (filter && filter.value) {\n\t\t\t// filter.setup_state(is_new_filter);\n\t\t\treturn filter._filter_value_set; // internal promise\n\t\t}\n\t}\n\n\t_push_new_filter(doctype, fieldname, condition, value, hidden = false) {\n\t\tlet args = {\n\t\t\tparent: this.wrapper,\n\t\t\tparent_doctype: this.doctype,\n\t\t\tdoctype: doctype,\n\t\t\t_parent_doctype: this.parent_doctype,\n\t\t\tfieldname: fieldname,\n\t\t\tcondition: condition,\n\t\t\tvalue: value,\n\t\t\thidden: hidden,\n\t\t\tindex: this.filters.length + 1,\n\t\t\ton_change: (update) => {\n\t\t\t\tif (update) this.update_filters();\n\t\t\t\tthis.on_change();\n\t\t\t},\n\t\t\tfilter_items: (doctype, fieldname) => {\n\t\t\t\treturn !this.filter_exists([doctype, fieldname]);\n\t\t\t},\n\t\t\tfilter_list: this.base_list || this,\n\t\t};\n\t\tlet filter = new frappe.ui.Filter(args);\n\t\tthis.filters.push(filter);\n\t\treturn filter;\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tlet filter_obj = this.filters.find(f => f.fieldname == fieldname) || {};\n\t\treturn filter_obj.value;\n\t}\n\n\tfilter_exists(filter_value) {\n\t\t// filter_value of form: [doctype, fieldname, condition, value]\n\t\tlet exists = false;\n\t\tthis.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\tlet f_value = f.get_value();\n\t\t\t\tif (filter_value.length === 2) {\n\t\t\t\t\texists =\n\t\t\t\t\t\tfilter_value[0] === f_value[0] && filter_value[1] === f_value[1];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet value = filter_value[3];\n\t\t\t\tlet equal = frappe.utils.arrays_equal;\n\n\t\t\t\tif (\n\t\t\t\t\tequal(f_value.slice(0, 4), filter_value.slice(0, 4)) ||\n\t\t\t\t\t(Array.isArray(value) && equal(value, f_value[3]))\n\t\t\t\t) {\n\t\t\t\t\texists = true;\n\t\t\t\t}\n\t\t\t});\n\t\treturn exists;\n\t}\n\n\tget_filters() {\n\t\treturn this.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\treturn f.get_value();\n\t\t\t});\n\t\t// {}: this.list.update_standard_filters(values);\n\t}\n\n\tupdate_filters() {\n\t\t// remove hidden filters and undefined filters\n\t\tconst filter_exists = (f) => ![undefined, null].includes(f.get_selected_value());\n\t\tthis.filters.map(f => !filter_exists(f) && f.remove());\n\t\tthis.filters = this.filters.filter(f => filter_exists(f) && f.field);\n\t\tthis.update_filter_button();\n\t\tthis.filters.length === 0 &&\n\t\t\tthis.toggle_empty_filters(true);\n\t}\n\n\tclear_filters() {\n\t\tthis.filters.map((f) => f.remove(true));\n\t\t// {}: Clear page filters, .date-range-picker (called list run())\n\t\tthis.filters = [];\n\t}\n\n\tget_filter(fieldname) {\n\t\treturn this.filters.filter((f) => {\n\t\t\treturn f.field && f.field.df.fieldname == fieldname;\n\t\t})[0];\n\t}\n\n\tget_filter_area_template() {\n\t\t/* eslint-disable indent */\n\t\treturn $(`\n\t\t\t<div class=\"filter-area\">\n\t\t\t\t<div class=\"filter-edit-area\">\n\t\t\t\t\t<div class=\"text-muted empty-filters text-center\">\n\t\t\t\t\t\t${__('No filters selected')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr class=\"divider\"></hr>\n\t\t\t\t<div class=\"filter-action-buttons\">\n\t\t\t\t\t<button class=\"text-muted add-filter btn btn-xs\">\n\t\t\t\t\t\t+ ${__('Add a Filter')}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-xs clear-filters\">\n\t\t\t\t\t\t\t${__('Clear Filters')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t${this.filter_button ?\n\t\t\t\t\t\t\t`<button class=\"btn btn-primary btn-xs apply-filters\">\n\t\t\t\t\t\t\t\t${__('Apply Filters')}\n\t\t\t\t\t\t\t</button>`\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t);\n\t\t/* eslint-disable indent */\n\t}\n\n\tget_filters_as_object() {\n\t\tlet filters = this.get_filters().reduce((acc, filter) => {\n\t\t\treturn Object.assign(acc, {\n\t\t\t\t[filter[1]]: [filter[2], filter[3]],\n\t\t\t});\n\t\t}, {});\n\t\treturn filters;\n\t}\n\n\tadd_filters_to_filter_group(filters) {\n\t\tif (filters.length) {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tfilters.forEach((filter) => {\n\t\t\t\tthis.add_filter(filter[0], filter[1], filter[2], filter[3]);\n\t\t\t});\n\t\t}\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n};\n","// <select> widget with all fields of a doctype as options\nfrappe.ui.FieldSelect = Class.extend({\n\t// opts parent, doctype, filter_fields, with_blank, select\n\tinit(opts) {\n\t\tvar me = this;\n\t\t$.extend(this, opts);\n\t\tthis.fields_by_name = {};\n\t\tthis.options = [];\n\t\tthis.$input = $('<input class=\"form-control\">')\n\t\t\t.appendTo(this.parent)\n\t\t\t.on(\"click\", function () { $(this).select(); });\n\t\tthis.input_class && this.$input.addClass(this.input_class);\n\t\tthis.select_input = this.$input.get(0);\n\t\tthis.awesomplete = new Awesomplete(this.select_input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tautoFirst: true,\n\t\t\tlist: me.options,\n\t\t\titem(item) {\n\t\t\t\treturn $(repl('<li class=\"filter-field-select\"><p>%(label)s</p></li>', item))\n\t\t\t\t\t.data(\"item.autocomplete\", item)\n\t\t\t\t\t.get(0);\n\t\t\t}\n\t\t});\n\t\tthis.$input.on(\"awesomplete-select\", function(e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.selected_doctype = item.doctype;\n\t\t\tme.selected_fieldname = item.fieldname;\n\t\t\tif(me.select) me.select(item.doctype, item.fieldname);\n\t\t});\n\t\tthis.$input.on(\"awesomplete-selectcomplete\", function(e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.$input.val(item.label);\n\t\t});\n\n\t\tif(this.filter_fields) {\n\t\t\tfor(var i in this.filter_fields)\n\t\t\t\tthis.add_field_option(this.filter_fields[i]);\n\t\t} else {\n\t\t\tthis.build_options();\n\t\t}\n\t\tthis.set_value(this.doctype, \"name\");\n\t},\n\tget_value() {\n\t\treturn this.selected_doctype ? this.selected_doctype + \".\" + this.selected_fieldname : null;\n\t},\n\tval(value) {\n\t\tif(value===undefined) {\n\t\t\treturn this.get_value();\n\t\t} else {\n\t\t\tthis.set_value(value);\n\t\t}\n\t},\n\tclear() {\n\t\tthis.selected_doctype = null;\n\t\tthis.selected_fieldname = null;\n\t\tthis.$input.val(\"\");\n\t},\n\tset_value(doctype, fieldname) {\n\t\tvar me = this;\n\t\tthis.clear();\n\t\tif(!doctype) return;\n\n\t\t// old style\n\t\tif(doctype.indexOf(\".\")!==-1) {\n\t\t\tvar parts = doctype.split(\".\");\n\t\t\tdoctype = parts[0];\n\t\t\tfieldname = parts[1];\n\t\t}\n\n\t\t$.each(this.options, function(i, v) {\n\t\t\tif(v.doctype===doctype && v.fieldname===fieldname) {\n\t\t\t\tme.selected_doctype = doctype;\n\t\t\t\tme.selected_fieldname = fieldname;\n\t\t\t\tme.$input.val(v.label);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t},\n\tbuild_options() {\n\t\tvar me = this;\n\t\tme.table_fields = [];\n\t\tvar std_filters = $.map(frappe.model.std_fields, function(d) {\n\t\t\tvar opts = {parent: me.doctype};\n\t\t\tif(d.fieldname==\"name\") opts.options = me.doctype;\n\t\t\treturn $.extend(copy_dict(d), opts);\n\t\t});\n\n\t\t// add parenttype column\n\t\tvar doctype_obj = locals['DocType'][me.doctype];\n\t\tif(doctype_obj && cint(doctype_obj.istable)) {\n\t\t\tstd_filters = std_filters.concat([{\n\t\t\t\tfieldname: 'parent',\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tlabel: 'Parent',\n\t\t\t\tparent: me.doctype,\n\t\t\t}]);\n\t\t}\n\n\t\t// blank\n\t\tif(this.with_blank) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel:\"\",\n\t\t\t\tvalue:\"\",\n\t\t\t});\n\t\t}\n\n\t\t// main table\n\t\tvar main_table_fields = std_filters.concat(frappe.meta.docfield_list[me.doctype]);\n\t\t$.each(frappe.utils.sort(main_table_fields, \"label\", \"string\"), function(i, df) {\n\t\t\tlet doctype = frappe.get_meta(me.doctype).istable && me.parent_doctype ? \n\t\t\t\tme.parent_doctype : me.doctype;\n\t\t\t\n\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\tme.add_field_option(df);\n\t\t});\n\n\t\t// child tables\n\t\t$.each(me.table_fields, function(i, table_df) {\n\t\t\tif(table_df.options) {\n\t\t\t\tlet child_table_fields = [].concat(frappe.meta.docfield_list[table_df.options]);\n\n\t\t\t\tif (table_df.fieldtype === \"Table MultiSelect\") {\n\t\t\t\t\tconst link_field = frappe.meta.get_docfields(table_df.options)\n\t\t\t\t\t\t.find(df => df.fieldtype === 'Link');\n\t\t\t\t\tchild_table_fields = link_field ? [link_field] : [];\n\t\t\t\t}\n\n\t\t\t\t$.each(frappe.utils.sort(child_table_fields, \"label\", \"string\"), function(i, df) {\n\t\t\t\t\tlet doctype = frappe.get_meta(me.doctype).istable && me.parent_doctype ? \n\t\t\t\t\t\tme.parent_doctype : me.doctype;\n\t\t\t\t\t\n\t\t\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\t\t\tme.add_field_option(df);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\tadd_field_option(df) {\n\t\tlet me = this;\n\n\t\tif (df.fieldname == 'docstatus' && !frappe.model.is_submittable(me.doctype))\n\t\t\treturn;\n\n\t\tif (frappe.model.table_fields.includes(df.fieldtype)) {\n\t\t\tme.table_fields.push(df);\n\t\t\treturn;\n\t\t}\n\n\t\tlet label = null;\n\t\tlet table = null;\n\n\t\tif(me.doctype && df.parent==me.doctype) {\n\t\t\tlabel = __(df.label);\n\t\t\ttable = me.doctype;\n\t\t} else {\n\t\t\tlabel = __(df.label) + ' (' + __(df.parent) + ')';\n\t\t\ttable = df.parent;\n\t\t}\n\n\t\tif(frappe.model.no_value_type.indexOf(df.fieldtype) == -1 &&\n\t\t\t!(me.fields_by_name[df.parent] && me.fields_by_name[df.parent][df.fieldname])) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel: label,\n\t\t\t\tvalue: table + \".\" + df.fieldname,\n\t\t\t\tfieldname: df.fieldname,\n\t\t\t\tdoctype: df.parent\n\t\t\t});\n\t\t\tif(!me.fields_by_name[df.parent]) me.fields_by_name[df.parent] = {};\n\t\t\tme.fields_by_name[df.parent][df.fieldname] = df;\n\t\t}\n\t},\n});\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.Tags = class {\n\tconstructor({\n\t\tparent, placeholder, tagsList,\n\t\tonTagAdd,\n\t\tonTagRemove,\n\t\tonTagClick,\n\t\tonChange\n\t}) {\n\t\tthis.tagsList = tagsList || [];\n\t\tthis.onTagAdd = onTagAdd;\n\t\tthis.onTagRemove = onTagRemove;\n\t\tthis.onTagClick = onTagClick;\n\t\tthis.onChange = onChange;\n\n\t\tthis.setup(parent, placeholder);\n\t}\n\n\tsetup(parent, placeholder) {\n\t\tthis.$ul = parent;\n\t\tthis.$input = $(`<input class=\"tags-input form-control\"></input>`);\n\n\t\tthis.$inputWrapper = this.get_list_element(this.$input);\n\t\tthis.$placeholder = this.get_list_element($(`<span class=\"tags-placeholder text-muted\">${placeholder}</span>`));\n\t\tthis.$inputWrapper.appendTo(this.$ul);\n\t\tthis.$placeholder.appendTo(this.$ul);\n\n\t\tthis.deactivate();\n\t\tthis.bind();\n\t\tthis.boot();\n\t}\n\n\tbind() {\n\t\tconst me = this;\n\t\tconst select_tag = function() {\n\t\t\tconst tagValue = frappe.utils.xss_sanitise(me.$input.val());\n\t\t\tme.addTag(tagValue);\n\t\t\tme.$input.val('');\n\t\t};\n\n\t\tthis.$input.keypress((e) => {\n\t\t\tif (e.which == 13 || e.keyCode == 13) select_tag();\n\t\t});\n\t\tthis.$input.focusout(select_tag);\n\n\t\tthis.$input.on('blur', () => {\n\t\t\tthis.deactivate();\n\t\t});\n\n\t\tthis.$placeholder.on('click', () => {\n\t\t\tthis.activate();\n\t\t\tthis.$input.focus(); // focus only when clicked\n\t\t});\n\t}\n\n\tboot() {\n\t\tthis.addTags(this.tagsList);\n\t}\n\n\tactivate() {\n\t\tthis.$placeholder.hide();\n\t\tthis.$inputWrapper.show();\n\t}\n\n\tdeactivate() {\n\t\tthis.$inputWrapper.hide();\n\t\tthis.$placeholder.show();\n\t}\n\n\taddTag(label) {\n\t\tif (label && label!== '' && !this.tagsList.includes(label)) {\n\t\t\tlet $tag = this.get_tag(label);\n\t\t\tlet row = this.get_list_element($tag, 'form-tag-row');\n\t\t\trow.insertBefore(this.$inputWrapper);\n\t\t\tthis.tagsList.push(label);\n\t\t\tthis.onTagAdd && this.onTagAdd(label);\n\t\t}\n\t}\n\n\tremoveTag(label) {\n\t\tlabel = frappe.utils.xss_sanitise(label);\n\t\tif(this.tagsList.includes(label)) {\n\t\t\tthis.tagsList.splice(this.tagsList.indexOf(label), 1);\n\t\t\tthis.onTagRemove && this.onTagRemove(label);\n\t\t}\n\t}\n\n\taddTags(labels) {\n\t\tlabels.map(this.addTag.bind(this));\n\t}\n\n\tclearTags() {\n\t\tthis.$ul.find('.form-tag-row').remove();\n\t\tthis.tagsList = [];\n\t}\n\n\tget_list_element($element, class_name=\"\") {\n\t\tlet $li = $(`<li class=\"${class_name}\"></li>`);\n\t\t$element.appendTo($li);\n\t\treturn $li;\n\t}\n\n\tget_tag(label) {\n\t\tlet $tag = frappe.get_data_pill(label, label, (target, pill_wrapper) => {\n\t\t\tthis.removeTag(target);\n\t\t\tpill_wrapper.closest('.form-tag-row').remove();\n\t\t});\n\n\t\tif (this.onTagClick) {\n\t\t\t$tag.on('click', '.pill-label', () => {\n\t\t\t\tthis.onTagClick(label);\n\t\t\t});\n\t\t}\n\n\t\treturn $tag;\n\t}\n}\n","frappe.ui.TagEditor = Class.extend({\n\tinit: function(opts) {\n\t\t/* docs:\n\t\tArguments\n\n\t\t- parent\n\t\t- user_tags\n\t\t- doctype\n\t\t- docname\n\t\t*/\n\t\t$.extend(this, opts);\n\n\t\tthis.setup_tags();\n\n\t\tif (!this.user_tags) {\n\t\t\tthis.user_tags = \"\";\n\t\t}\n\t\tthis.initialized = true;\n\t\tthis.refresh(this.user_tags);\n\t},\n\tsetup_tags: function() {\n\t\tvar me = this;\n\n\t\t// hidden form, does not have parent\n\t\tif (!this.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.wrapper = this.parent;\n\t\tif (!this.wrapper.length) return;\n\n\t\tthis.tags = new frappe.ui.Tags({\n\t\t\tparent: this.wrapper,\n\t\t\tplaceholder: __(\"Add a tag ...\"),\n\t\t\tonTagAdd: (tag) => {\n\t\t\t\tif(me.initialized && !me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags ? me.user_tags.split(\",\") : [];\n\t\t\t\t\t\t\tuser_tags.push(tag)\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTagRemove: (tag) => {\n\t\t\t\tif(!me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.remove_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags.split(\",\");\n\t\t\t\t\t\t\tuser_tags.splice(user_tags.indexOf(tag), 1);\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.setup_awesomplete();\n\t\tthis.setup_complete = true;\n\t},\n\tsetup_awesomplete: function() {\n\t\tvar me = this;\n\t\tvar $input = this.wrapper.find(\"input.tags-input\");\n\t\tvar input = $input.get(0);\n\t\tthis.awesomplete = new Awesomplete(input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tlist: []\n\t\t});\n\t\t$input.on(\"awesomplete-open\", function(e){\n\t\t\t$input.attr('state', 'open');\n\t\t});\n\t\t$input.on(\"awesomplete-close\", function(e){\n\t\t\t$input.attr('state', 'closed');\n\t\t});\n\t\t$input.on(\"input\", function(e) {\n\t\t\tvar value = e.target.value;\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.get_tags\",\n\t\t\t\targs:{\n\t\t\t\t\tdoctype: me.frm.doctype,\n\t\t\t\t\ttxt: value.toLowerCase(),\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tme.awesomplete.list = r.message;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t$input.on(\"focus\", function(e) {\n\t\t\tif($input.attr('state') != 'open') {\n\t\t\t\t$input.trigger(\"input\");\n\t\t\t}\n\t\t});\n\t},\n\tget_args: function(tag) {\n\t\treturn {\n\t\t\ttag: tag,\n\t\t\tdt: this.frm.doctype,\n\t\t\tdn: this.frm.docname,\n\t\t}\n\t},\n\trefresh: function(user_tags) {\n\t\tvar me = this;\n\t\tif (!this.initialized || !this.setup_complete || this.refreshing) return;\n\n\t\tme.refreshing = true;\n\t\ttry {\n\t\t\tme.tags.clearTags();\n\t\t\tif(user_tags) {\n\t\t\t\tme.user_tags = user_tags;\n\t\t\t\tme.tags.addTags(user_tags.split(','));\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tme.refreshing = false;\n\t\t\t// wtf bug\n\t\t\tsetTimeout( function() { me.refresh(); }, 100);\n\t\t}\n\t\tme.refreshing = false;\n\n\t}\n})\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.is_liked = function(doc) {\n\tvar liked = frappe.ui.get_liked_by(doc);\n\treturn liked.indexOf(frappe.session.user)===-1 ? false : true;\n}\n\nfrappe.ui.get_liked_by = function(doc) {\n\tvar liked = doc._liked_by;\n\tif(liked) {\n\t\tliked = JSON.parse(liked);\n\t}\n\n\treturn liked || [];\n}\n\nfrappe.ui.toggle_like = function($btn, doctype, name, callback) {\n\tvar add = $btn.hasClass(\"not-liked\") ? \"Yes\" : \"No\";\n\t// disable click\n\t$btn.css('pointer-events', 'none');\n\n\tfrappe.call({\n\t\tmethod: \"frappe.desk.like.toggle_like\",\n\t\tquiet: true,\n\t\targs: {\n\t\t\tdoctype: doctype,\n\t\t\tname: name,\n\t\t\tadd: add,\n\t\t},\n\t\tcallback: function(r) {\n\t\t\t// renable click\n\t\t\t$btn.css('pointer-events', 'auto');\n\n\t\t\tif(!r.exc) {\n\t\t\t\t// update in all local-buttons\n\t\t\t\tvar action_buttons = $('.like-action[data-name=\"'+ name.replace(/\"/g, '\\\"')\n\t\t\t\t\t+'\"][data-doctype=\"'+ doctype.replace(/\"/g, '\\\"')+'\"]');\n\n\t\t\t\tif(add===\"Yes\") {\n\t\t\t\t\taction_buttons.removeClass(\"not-liked\").addClass(\"liked\");\n\t\t\t\t} else {\n\t\t\t\t\taction_buttons.addClass(\"not-liked\").removeClass(\"liked\");\n\t\t\t\t}\n\n\t\t\t\t// update in locals (form)\n\t\t\t\tvar doc = locals[doctype] && locals[doctype][name];\n\t\t\t\tif(doc) {\n\t\t\t\t\tvar liked_by = JSON.parse(doc._liked_by || \"[]\"),\n\t\t\t\t\t\tidx = liked_by.indexOf(frappe.session.user);\n\t\t\t\t\tif(add===\"Yes\") {\n\t\t\t\t\t\tif(idx===-1)\n\t\t\t\t\t\t\tliked_by.push(frappe.session.user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(idx!==-1) {\n\t\t\t\t\t\t\tliked_by = liked_by.slice(0,idx).concat(liked_by.slice(idx+1))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdoc._liked_by = JSON.stringify(liked_by);\n\t\t\t\t}\n\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\nfrappe.ui.click_toggle_like = function() {\n\tvar $btn = $(this);\n\tvar $count = $btn.siblings(\".likes-count\");\n\tvar not_liked = $btn.hasClass(\"not-liked\");\n\tvar doctype = $btn.attr(\"data-doctype\");\n\tvar name = $btn.attr(\"data-name\");\n\n\tfrappe.ui.toggle_like($btn, doctype, name, function() {\n\t\tif (not_liked) {\n\t\t\t$count.text(cint($count.text()) + 1);\n\t\t} else {\n\t\t\t$count.text(cint($count.text()) - 1);\n\t\t}\n\t});\n\n\treturn false;\n}\n\nfrappe.ui.setup_like_popover = ($parent, selector, check_not_liked=true) => {\n\tif (frappe.dom.is_touchscreen()) {\n\t\treturn;\n\t}\n\n\t$parent.on('mouseover', selector, function() {\n\t\tconst target_element = $(this);\n\t\ttarget_element.popover({\n\t\t\tanimation: true,\n\t\t\tplacement: 'bottom',\n\t\t\ttrigger: 'manual',\n\t\t\ttemplate: `<div class=\"liked-by-popover popover\">\n\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t<div class=\"popover-body popover-content\"></div>\n\t\t\t</div>`,\n\t\t\tcontent: () => {\n\t\t\t\tlet liked_by = target_element.parents(\".liked-by\").attr('data-liked-by');\n\t\t\t\tliked_by = liked_by ? decodeURI(liked_by) : '[]';\n\t\t\t\tliked_by = JSON.parse(liked_by);\n\n\t\t\t\tconst user = frappe.session.user;\n\t\t\t\t// hack\n\t\t\t\tif (check_not_liked) {\n\t\t\t\t\tif (target_element.parents(\".liked-by\").find(\".not-liked\").length) {\n\t\t\t\t\t\tif (liked_by.indexOf(user)!==-1) {\n\t\t\t\t\t\t\tliked_by.splice(liked_by.indexOf(user), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (liked_by.indexOf(user)===-1) {\n\t\t\t\t\t\t\tliked_by.push(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!liked_by.length) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\tlet liked_by_list = $(`<ul class=\"list-unstyled\"></ul>`);\n\n\t\t\t\t// to show social profile of the user\n\t\t\t\tlet link_base = '/app/user-profile/';\n\n\t\t\t\tliked_by.forEach(user => {\n\t\t\t\t\t// append user list item\n\t\t\t\t\tliked_by_list.append(`\n\t\t\t\t\t\t<li data-user=${user}>${frappe.avatar(user, \"avatar-xs\")}\n\t\t\t\t\t\t\t<span>${frappe.user.full_name(user)}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t`);\n\t\t\t\t});\n\n\t\t\t\tliked_by_list.children('li').click(ev => {\n\t\t\t\t\tlet user = ev.currentTarget.dataset.user;\n\t\t\t\t\ttarget_element.popover('hide');\n\t\t\t\t\tfrappe.set_route(link_base + user);\n\t\t\t\t});\n\n\t\t\t\treturn liked_by_list;\n\t\t\t},\n\t\t\thtml: true,\n\t\t\tcontainer: 'body'\n\t\t});\n\n\t\ttarget_element.popover('show');\n\n\t\t$(\".popover\").on(\"mouseleave\", () => {\n\t\t\ttarget_element.popover('hide');\n\t\t});\n\n\t\ttarget_element.on('mouseout', () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!$('.popover:hover').length) {\n\t\t\t\t\ttarget_element.popover('hide');\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n\n};\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.BaseList = class BaseList {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t}\n\n\tshow() {\n\t\tfrappe.run_serially([\n\t\t\t() => this.init(),\n\t\t\t() => this.before_refresh(),\n\t\t\t() => this.refresh(),\n\t\t]);\n\t}\n\n\tinit() {\n\t\tif (this.init_promise) return this.init_promise;\n\n\t\tlet tasks = [\n\t\t\tthis.setup_defaults,\n\t\t\tthis.set_stats,\n\t\t\tthis.setup_fields,\n\t\t\t// make view\n\t\t\tthis.setup_page,\n\t\t\tthis.setup_side_bar,\n\t\t\tthis.setup_main_section,\n\t\t\tthis.setup_view,\n\t\t\tthis.setup_view_menu,\n\t\t].map((fn) => fn.bind(this));\n\n\t\tthis.init_promise = frappe.run_serially(tasks);\n\t\treturn this.init_promise;\n\t}\n\n\tsetup_defaults() {\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.page_title = this.page_title || frappe.router.doctype_layout || __(this.doctype);\n\t\tthis.meta = frappe.get_meta(this.doctype);\n\t\tthis.settings = frappe.listview_settings[this.doctype] || {};\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\n\t\tthis.start = 0;\n\t\tthis.page_length = 20;\n\t\tthis.data = [];\n\t\tthis.method = \"frappe.desk.reportview.get\";\n\n\t\tthis.can_create = frappe.model.can_create(this.doctype);\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\n\t\tthis.fields = [];\n\t\tthis.filters = [];\n\t\tthis.sort_by = \"modified\";\n\t\tthis.sort_order = \"desc\";\n\n\t\t// Setup buttons\n\t\tthis.primary_action = null;\n\t\tthis.secondary_action = null;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Refresh\"),\n\t\t\t\taction: () => this.refresh(),\n\t\t\t\tclass: \"visible-xs\",\n\t\t\t},\n\t\t];\n\t}\n\n\tsetup_fields() {\n\t\tthis.set_fields();\n\t\tthis.build_fields();\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.meta.title_field\n\t\t);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\t}\n\n\tget_fields_in_list_view() {\n\t\treturn this.meta.fields.filter((df) => {\n\t\t\treturn (\n\t\t\t\t(frappe.model.is_value_type(df.fieldtype) &&\n\t\t\t\t\t(df.in_list_view &&\n\t\t\t\t\t\tfrappe.perm.has_perm(\n\t\t\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\t\tdf.permlevel,\n\t\t\t\t\t\t\t\"read\"\n\t\t\t\t\t\t))) ||\n\t\t\t\t(df.fieldtype === \"Currency\" &&\n\t\t\t\t\tdf.options &&\n\t\t\t\t\t!df.options.includes(\":\")) ||\n\t\t\t\tdf.fieldname === \"status\"\n\t\t\t);\n\t\t});\n\t}\n\n\tbuild_fields() {\n\t\t// fill in missing doctype\n\t\tthis.fields = this.fields.map((f) => {\n\t\t\tif (typeof f === \"string\") {\n\t\t\t\tf = [f, this.doctype];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t\t// remove null or undefined values\n\t\tthis.fields = this.fields.filter(Boolean);\n\t\t//de-duplicate\n\t\tthis.fields = this.fields.uniqBy((f) => f[0] + f[1]);\n\t}\n\n\t_add_field(fieldname, doctype) {\n\t\tif (!fieldname) return;\n\n\t\tif (!doctype) doctype = this.doctype;\n\n\t\tif (typeof fieldname === \"object\") {\n\t\t\t// df is passed\n\t\t\tconst df = fieldname;\n\t\t\tfieldname = df.fieldname;\n\t\t\tdoctype = df.parent;\n\t\t}\n\n\t\tif (!this.fields) this.fields = [];\n\t\tconst is_valid_field =\n\t\t\tfrappe.model.std_fields_list.includes(fieldname) ||\n\t\t\tfrappe.meta.has_field(doctype, fieldname) ||\n\t\t\tfieldname === \"_seen\";\n\n\t\tif (!is_valid_field) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fields.push([fieldname, doctype]);\n\t}\n\n\tset_stats() {\n\t\tthis.stats = [\"_user_tags\"];\n\t\t// add workflow field (as priority)\n\t\tthis.workflow_state_fieldname = frappe.workflow.get_state_fieldname(\n\t\t\tthis.doctype\n\t\t);\n\t\tif (this.workflow_state_fieldname) {\n\t\t\tif (!frappe.workflow.workflows[this.doctype][\"override_status\"]) {\n\t\t\t\tthis._add_field(this.workflow_state_fieldname);\n\t\t\t}\n\t\t\tthis.stats.push(this.workflow_state_fieldname);\n\t\t}\n\t}\n\n\tsetup_page() {\n\t\tthis.page = this.parent.page;\n\t\tthis.$page = $(this.parent);\n\t\t!this.hide_card_layout && this.page.main.addClass('frappe-card');\n\t\tthis.page.page_form.removeClass(\"row\").addClass(\"flex\");\n\t\tthis.hide_page_form && this.page.page_form.hide();\n\t\tthis.hide_sidebar && this.$page.addClass('no-list-sidebar');\n\t\tthis.setup_page_head();\n\t}\n\n\tsetup_page_head() {\n\t\tthis.set_title();\n\t\tthis.set_menu_items();\n\t\tthis.set_breadcrumbs();\n\t}\n\n\tset_title() {\n\t\tthis.page.set_title(this.page_title);\n\t}\n\n\tsetup_view_menu() {\n\t\t// TODO: add all icons\n\t\tconst icon_map = {\n\t\t\t'Image': 'image-view',\n\t\t\t'List': 'list',\n\t\t\t'Report': 'small-file',\n\t\t\t'Calendar': 'calendar',\n\t\t\t'Gantt': 'gantt',\n\t\t\t'Kanban': 'kanban',\n\t\t\t'Dashboard': 'dashboard',\n\t\t\t'Map': 'map',\n\t\t};\n\n\t\tif (frappe.boot.desk_settings.view_switcher) {\n\t\t\t/* @preserve\n\t\t\tfor translation, don't remove\n\t\t\t__(\"List View\") __(\"Report View\") __(\"Dashboard View\") __(\"Gantt View\"),\n\t\t\t__(\"Kanban View\") __(\"Calendar View\") __(\"Image View\") __(\"Inbox View\"),\n\t\t\t__(\"Tree View\") __(\"Map View\") */\n\t\t\tthis.views_menu = this.page.add_custom_button_group(__('{0} View', [this.view_name]),\n\t\t\t\ticon_map[this.view_name] || 'list');\n\t\t\tthis.views_list = new frappe.views.ListViewSelect({\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tparent: this.views_menu,\n\t\t\t\tpage: this.page,\n\t\t\t\tlist_view: this,\n\t\t\t\tsidebar: this.list_sidebar,\n\t\t\t\ticon_map: icon_map\n\t\t\t});\n\t\t}\n\t}\n\n\tset_default_secondary_action() {\n\t\tif (this.secondary_action) {\n\t\t\tconst $secondary_action = this.page.set_secondary_action(\n\t\t\t\tthis.secondary_action.label,\n\t\t\t\tthis.secondary_action.action,\n\t\t\t\tthis.secondary_action.icon\n\t\t\t);\n\t\t\tif (!this.secondary_action.icon) {\n\t\t\t\t$secondary_action.addClass(\"hidden-xs\");\n\t\t\t} else if (!this.secondary_action.label) {\n\t\t\t\t$secondary_action.addClass(\"visible-xs\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.refresh_button = this.page.add_action_icon(\"refresh\", () => {\n\t\t\t\tthis.refresh();\n\t\t\t});\n\t\t}\n\t}\n\n\tset_menu_items() {\n\t\tthis.set_default_secondary_action();\n\n\t\tthis.menu_items && this.menu_items.map((item) => {\n\t\t\tif (item.condition && item.condition() === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst $item = this.page.add_menu_item(\n\t\t\t\titem.label,\n\t\t\t\titem.action,\n\t\t\t\titem.standard,\n\t\t\t\titem.shortcut\n\t\t\t);\n\t\t\tif (item.class) {\n\t\t\t\t$item && $item.addClass(item.class);\n\t\t\t}\n\t\t});\n\t}\n\n\tset_breadcrumbs() {\n\t\tfrappe.breadcrumbs.add(this.meta.module, this.doctype);\n\t}\n\n\tsetup_side_bar() {\n\t\tif (this.hide_sidebar || !frappe.boot.desk_settings.list_sidebar) return;\n\t\tthis.list_sidebar = new frappe.views.ListSidebar({\n\t\t\tdoctype: this.doctype,\n\t\t\tstats: this.stats,\n\t\t\tparent: this.$page.find(\".layout-side-section\"),\n\t\t\t// set_filter: this.set_filter.bind(this),\n\t\t\tpage: this.page,\n\t\t\tlist_view: this,\n\t\t});\n\t}\n\n\ttoggle_side_bar(show) {\n\t\tlet show_sidebar = show || JSON.parse(localStorage.show_sidebar || \"true\");\n\t\tshow_sidebar = !show_sidebar;\n\t\tlocalStorage.show_sidebar = show_sidebar;\n\t\tthis.show_or_hide_sidebar();\n\t\t$(document.body).trigger(\"toggleListSidebar\");\n\t}\n\n\tshow_or_hide_sidebar() {\n\t\tlet show_sidebar = JSON.parse(localStorage.show_sidebar || \"true\");\n\t\t$(document.body).toggleClass(\"no-list-sidebar\", !show_sidebar);\n\t}\n\n\tsetup_main_section() {\n\t\treturn frappe.run_serially(\n\t\t\t[\n\t\t\t\tthis.setup_list_wrapper,\n\t\t\t\tthis.show_or_hide_sidebar,\n\t\t\t\tthis.setup_filter_area,\n\t\t\t\tthis.setup_sort_selector,\n\t\t\t\tthis.setup_result_area,\n\t\t\t\tthis.setup_no_result_area,\n\t\t\t\tthis.setup_freeze_area,\n\t\t\t\tthis.setup_paging_area,\n\t\t\t].map((fn) => fn.bind(this))\n\t\t);\n\t}\n\n\tsetup_list_wrapper() {\n\t\tthis.$frappe_list = $('<div class=\"frappe-list\">').appendTo(\n\t\t\tthis.page.main\n\t\t);\n\t}\n\n\tsetup_filter_area() {\n\t\tif (this.hide_filters) return;\n\t\tthis.filter_area = new FilterArea(this);\n\n\t\tif (this.filters && this.filters.length > 0) {\n\t\t\treturn this.filter_area.set(this.filters);\n\t\t}\n\t}\n\n\tsetup_sort_selector() {\n\t\tif (this.hide_sort_selector) return;\n\t\tthis.sort_selector = new frappe.ui.SortSelector({\n\t\t\tparent: this.$filter_section,\n\t\t\tdoctype: this.doctype,\n\t\t\targs: {\n\t\t\t\tsort_by: this.sort_by,\n\t\t\t\tsort_order: this.sort_order,\n\t\t\t},\n\t\t\tonchange: this.on_sort_change.bind(this),\n\t\t});\n\t}\n\n\ton_sort_change() {\n\t\tthis.refresh();\n\t}\n\n\tsetup_result_area() {\n\t\tthis.$result = $(`<div class=\"result\">`);\n\t\tthis.$frappe_list.append(this.$result);\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $('<div class=\"freeze\"></div>').hide();\n\t\tthis.$frappe_list.append(this.$freeze);\n\t}\n\n\tget_no_result_message() {\n\t\treturn __(\"Nothing to show\");\n\t}\n\n\tsetup_paging_area() {\n\t\tconst paging_values = [20, 100, 500];\n\t\tthis.$paging_area = $(\n\t\t\t`<div class=\"list-paging-area level\">\n\t\t\t\t<div class=\"level-left\">\n\t\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t\t${paging_values.map((value) => `\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-paging\"\n\t\t\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t\t\t${value}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`).join(\"\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">\n\t\t\t\t\t\t${__(\"Load More\")}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$frappe_list.append(this.$paging_area);\n\n\t\t// set default paging btn active\n\t\tthis.$paging_area\n\t\t\t.find(`.btn-paging[data-value=\"${this.page_length}\"]`)\n\t\t\t.addClass(\"btn-info\");\n\n\t\tthis.$paging_area.on(\"click\", \".btn-paging, .btn-more\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\n\t\t\tif ($this.is(\".btn-paging\")) {\n\t\t\t\t// set active button\n\t\t\t\tthis.$paging_area.find(\".btn-paging\").removeClass(\"btn-info\");\n\t\t\t\t$this.addClass(\"btn-info\");\n\n\t\t\t\tthis.start = 0;\n\t\t\t\tthis.page_length = this.selected_page_count = $this.data().value;\n\t\t\t} else if ($this.is(\".btn-more\")) {\n\t\t\t\tthis.start = this.start + this.page_length;\n\t\t\t\tthis.page_length = this.selected_page_count || 20;\n\t\t\t}\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\t// convert [fieldname, Doctype] => tabDoctype.fieldname\n\t\treturn this.fields.map((f) =>\n\t\t\tfrappe.model.get_full_column_name(f[0], f[1])\n\t\t);\n\t}\n\n\tget_group_by() {\n\t\tlet name_field = this.fields && this.fields.find(f => f[0] == 'name');\n\t\tif (name_field) {\n\t\t\treturn frappe.model.get_full_column_name(name_field[0], name_field[1]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetup_view() {\n\t\t// for child classes\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tconst filter = this.get_filters_for_args().filter(f => f[1] == fieldname)[0];\n\t\tif (!filter) return;\n\t\treturn {\n\t\t\t'like': filter[3].replace(/^%?|%$/g, ''),\n\t\t\t'not set': null\n\t\t}[filter[2]] || filter[3];\n\t}\n\n\tget_filters_for_args() {\n\t\t// filters might have a fifth param called hidden,\n\t\t// we don't want to pass that server side\n\t\treturn this.filter_area\n\t\t\t? this.filter_area.get().map((filter) => filter.slice(0, 4))\n\t\t\t: [];\n\t}\n\n\tget_args() {\n\t\treturn {\n\t\t\tdoctype: this.doctype,\n\t\t\tfields: this.get_fields(),\n\t\t\tfilters: this.get_filters_for_args(),\n\t\t\torder_by: this.sort_selector && this.sort_selector.get_sql_string(),\n\t\t\tstart: this.start,\n\t\t\tpage_length: this.page_length,\n\t\t\tview: this.view,\n\t\t\tgroup_by: this.get_group_by()\n\t\t};\n\t}\n\n\tget_call_args() {\n\t\tconst args = this.get_args();\n\t\treturn {\n\t\t\tmethod: this.method,\n\t\t\targs: args,\n\t\t\tfreeze: this.freeze_on_refresh || false,\n\t\t\tfreeze_message: this.freeze_message || __(\"Loading\") + \"...\",\n\t\t};\n\t}\n\n\tbefore_refresh() {\n\t\t// modify args here just before making the request\n\t\t// see list_view.js\n\t}\n\n\trefresh() {\n\t\tthis.freeze(true);\n\t\t// fetch data from server\n\t\treturn frappe.call(this.get_call_args()).then((r) => {\n\t\t\t// render\n\t\t\tthis.prepare_data(r);\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.before_render();\n\t\t\tthis.render();\n\t\t\tthis.after_render();\n\t\t\tthis.freeze(false);\n\t\t\tthis.reset_defaults();\n\t\t\tif (this.settings.refresh) {\n\t\t\t\tthis.settings.refresh(this);\n\t\t\t}\n\t\t});\n\t}\n\n\tprepare_data(r) {\n\t\tlet data = r.message || {};\n\t\tdata = !Array.isArray(data)\n\t\t\t? frappe.utils.dict(data.keys, data.values)\n\t\t\t: data;\n\n\t\tif (this.start === 0) {\n\t\t\tthis.data = data;\n\t\t} else {\n\t\t\tthis.data = this.data.concat(data);\n\t\t}\n\n\t\tthis.data = this.data.uniqBy((d) => d.name);\n\t}\n\n\treset_defaults() {\n\t\tthis.page_length = this.page_length + this.start;\n\t\tthis.start = 0;\n\t}\n\n\tfreeze() {\n\t\t// show a freeze message while data is loading\n\t}\n\n\tbefore_render() {}\n\n\tafter_render() {}\n\n\trender() {\n\t\t// for child classes\n\t}\n\n\ton_filter_change() {\n\t\t// fired when filters are added or removed\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t\tthis.$paging_area.toggle(this.data.length > 0);\n\t\tthis.$no_result.toggle(this.data.length == 0);\n\n\t\tconst show_more = this.start + this.page_length <= this.data.length;\n\t\tthis.$paging_area.find(\".btn-more\").toggle(show_more);\n\t}\n\n\tcall_for_selected_items(method, args = {}) {\n\t\targs.names = this.get_checked_items(true);\n\n\t\tfrappe.call({\n\t\t\tmethod: method,\n\t\t\targs: args,\n\t\t\tfreeze: true,\n\t\t\tcallback: (r) => {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n};\n\nclass FilterArea {\n\tconstructor(list_view) {\n\t\tthis.list_view = list_view;\n\t\tthis.list_view.page.page_form.append(`<div class=\"standard-filter-section flex\"></div>`);\n\n\t\tconst filter_area = this.list_view.hide_page_form\n\t\t\t? this.list_view.page.custom_actions\n\t\t\t: this.list_view.page.page_form;\n\n\t\tthis.list_view.$filter_section = $('<div class=\"filter-section flex\">').appendTo(\n\t\t\tfilter_area\n\t\t);\n\n\t\tthis.$filter_list_wrapper = this.list_view.$filter_section;\n\t\tthis.trigger_refresh = true;\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tif (!this.list_view.hide_page_form) this.make_standard_filters();\n\t\tthis.make_filter_list();\n\t}\n\n\tget() {\n\t\tlet filters = this.filter_list.get_filters();\n\t\tlet standard_filters = this.get_standard_filters();\n\n\t\treturn filters.concat(standard_filters).uniqBy(JSON.stringify);\n\t}\n\n\tset(filters) {\n\t\t// use to method to set filters without triggering refresh\n\t\tthis.trigger_refresh = false;\n\t\treturn this.add(filters, false).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t\tthis.filter_list.update_filter_button();\n\t\t});\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n\n\trefresh_list_view() {\n\t\tif (this.trigger_refresh) {\n\t\t\tthis.list_view.start = 0;\n\t\t\tthis.list_view.refresh();\n\t\t\tthis.list_view.on_filter_change();\n\t\t}\n\t}\n\n\texists(f) {\n\t\tlet exists = false;\n\t\t// check in standard filters\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tif (f[2] === \"=\" && f[1] in fields_dict) {\n\t\t\tconst value = fields_dict[f[1]].get_value();\n\t\t\tif (value) {\n\t\t\t\texists = true;\n\t\t\t}\n\t\t}\n\n\t\t// check in filter area\n\t\tif (!exists) {\n\t\t\texists = this.filter_list.filter_exists(f);\n\t\t}\n\n\t\treturn exists;\n\t}\n\n\tset_standard_filter(filters) {\n\t\tif (filters.length === 0) {\n\t\t\treturn {\n\t\t\t\tnon_standard_filters: [],\n\t\t\t\tpromise: Promise.resolve(),\n\t\t\t};\n\t\t}\n\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tlet out = filters.reduce((out, filter) => {\n\t\t\t// eslint-disable-next-line\n\t\t\tconst [dt, fieldname, condition, value] = filter;\n\t\t\tout.promise = out.promise || Promise.resolve();\n\t\t\tout.non_standard_filters = out.non_standard_filters || [];\n\n\t\t\tif (\n\t\t\t\tfields_dict[fieldname] &&\n\t\t\t\t(condition === \"=\" || condition === \"like\")\n\t\t\t) {\n\t\t\t\t// standard filter\n\t\t\t\tout.promise = out.promise.then(() =>\n\t\t\t\t\tfields_dict[fieldname].set_value(value)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// filter out non standard filters\n\t\t\t\tout.non_standard_filters.push(filter);\n\t\t\t}\n\t\t\treturn out;\n\t\t}, {});\n\n\t\treturn out;\n\t}\n\n\tremove_filters(filters) {\n\t\tfilters.map(f => {\n\t\t\tthis.remove(f[1]);\n\t\t});\n\t}\n\n\tremove(fieldname) {\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tif (fieldname in fields_dict) {\n\t\t\tfields_dict[fieldname].set_value(\"\");\n\t\t}\n\n\t\tlet filter = this.filter_list.get_filter(fieldname);\n\t\tif (filter) filter.remove();\n\t\tthis.filter_list.apply();\n\t\treturn Promise.resolve();\n\t}\n\n\tclear(refresh = true) {\n\t\tif (!refresh) {\n\t\t\tthis.trigger_refresh = false;\n\t\t}\n\n\t\tthis.filter_list.clear_filters();\n\n\t\tconst promises = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tconst field = this.list_view.page.fields_dict[key];\n\t\t\tpromises.push(() => field.set_value(\"\"));\n\t\t}\n\t\treturn frappe.run_serially(promises).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t});\n\t}\n\n\tmake_standard_filters() {\n\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find('.standard-filter-section');\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: \"Name\",\n\t\t\t\tcondition: \"like\",\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t},\n\t\t];\n\n\t\tif (this.list_view.custom_filter_configs) {\n\t\t\tthis.list_view.custom_filter_configs.forEach((config) => {\n\t\t\t\tconfig.onchange = () => this.refresh_list_view();\n\t\t\t});\n\n\t\t\tfields = fields.concat(this.list_view.custom_filter_configs);\n\t\t}\n\n\t\tconst doctype_fields = this.list_view.meta.fields;\n\t\tconst title_field = this.list_view.meta.title_field;\n\n\t\tfields = fields.concat(\n\t\t\tdoctype_fields\n\t\t\t\t.filter(\n\t\t\t\t\t(df) =>\n\t\t\t\t\t\tdf.fieldname === title_field ||\n\t\t\t\t\t\t(df.in_standard_filter &&\n\t\t\t\t\t\t\tfrappe.model.is_value_type(df.fieldtype))\n\t\t\t\t)\n\t\t\t\t.map((df) => {\n\t\t\t\t\tlet options = df.options;\n\t\t\t\t\tlet condition = \"=\";\n\t\t\t\t\tlet fieldtype = df.fieldtype;\n\t\t\t\t\tif (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"Text\",\n\t\t\t\t\t\t\t\"Small Text\",\n\t\t\t\t\t\t\t\"Text Editor\",\n\t\t\t\t\t\t\t\"HTML Editor\",\n\t\t\t\t\t\t\t\"Data\",\n\t\t\t\t\t\t\t\"Code\",\n\t\t\t\t\t\t\t\"Read Only\",\n\t\t\t\t\t\t].includes(fieldtype)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfieldtype = \"Data\";\n\t\t\t\t\t\tcondition = \"like\";\n\t\t\t\t\t}\n\t\t\t\t\tif (df.fieldtype == \"Select\" && df.options) {\n\t\t\t\t\t\toptions = df.options.split(\"\\n\");\n\t\t\t\t\t\tif (options.length > 0 && options[0] != \"\") {\n\t\t\t\t\t\t\toptions.unshift(\"\");\n\t\t\t\t\t\t\toptions = options.join(\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet default_value =\n\t\t\t\t\t\tfieldtype === \"Link\"\n\t\t\t\t\t\t\t? frappe.defaults.get_user_default(options)\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\tif ([\"__default\", \"__global\"].includes(default_value)) {\n\t\t\t\t\t\tdefault_value = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfieldtype: fieldtype,\n\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\toptions: options,\n\t\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\t\tcondition: condition,\n\t\t\t\t\t\tdefault: default_value,\n\t\t\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t\t\t\tignore_link_validation: fieldtype === \"Dynamic Link\",\n\t\t\t\t\t\tis_filter: 1,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t);\n\n\t\tfields.map(df => {\n\t\t\tthis.list_view.page.add_field(df, this.standard_filters_wrapper);\n\t\t});\n\t}\n\n\tget_standard_filters() {\n\t\tconst filters = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tlet field = fields_dict[key];\n\t\t\tlet value = field.get_value();\n\t\t\tif (value) {\n\t\t\t\tif (field.df.condition === \"like\" && !value.includes(\"%\")) {\n\t\t\t\t\tvalue = \"%\" + value + \"%\";\n\t\t\t\t}\n\t\t\t\tfilters.push([\n\t\t\t\t\tthis.list_view.doctype,\n\t\t\t\t\tfield.df.fieldname,\n\t\t\t\t\tfield.df.condition || \"=\",\n\t\t\t\t\tvalue,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tmake_filter_list() {\n\t\t$(`<div class=\"filter-selector\">\n\t\t\t<button class=\"btn btn-default btn-sm filter-button\">\n\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t${frappe.utils.icon('filter')}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t${__(\"Filter\")}\n\t\t\t\t<span>\n\t\t\t</button>\n\t\t</div>`\n\t\t).appendTo(this.$filter_list_wrapper);\n\n\t\tthis.filter_button = this.$filter_list_wrapper.find('.filter-button');\n\t\tthis.filter_list = new frappe.ui.FilterGroup({\n\t\t\tbase_list: this.list_view,\n\t\t\tparent: this.$filter_list_wrapper,\n\t\t\tdoctype: this.list_view.doctype,\n\t\t\tfilter_button: this.filter_button,\n\t\t\tdefault_filters: [],\n\t\t\ton_change: () => this.refresh_list_view(),\n\t\t});\n\t}\n\n\tis_being_edited() {\n\t\t// returns true if user is currently editing filters\n\t\treturn (\n\t\t\tthis.filter_list &&\n\t\t\tthis.filter_list.wrapper &&\n\t\t\tthis.filter_list.wrapper.find(\".filter-box:visible\").length > 0\n\t\t);\n\t}\n}\n\n// utility function to validate view modes\nfrappe.views.view_modes = [\n\t\"List\",\n\t\"Report\",\n\t\"Dashboard\",\n\t\"Gantt\",\n\t\"Kanban\",\n\t\"Calendar\",\n\t\"Image\",\n\t\"Inbox\",\n\t\"Tree\",\n\t\"Map\",\n];\nfrappe.views.is_valid = (view_mode) =>\n\tfrappe.views.view_modes.includes(view_mode);\n","export default class BulkOperations {\n\tconstructor({ doctype }) {\n\t\tif (!doctype) frappe.throw(__('Doctype required'));\n\t\tthis.doctype = doctype;\n\t}\n\n\tprint (docs) {\n\t\tconst print_settings = frappe.model.get_doc(':Print Settings', 'Print Settings');\n\t\tconst allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n\t\tconst is_submittable = frappe.model.is_submittable(this.doctype);\n\t\tconst allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\n\t\tconst valid_docs = docs.filter(doc => {\n\t\t\treturn !is_submittable || doc.docstatus === 1 ||\n\t\t\t\t(allow_print_for_cancelled && doc.docstatus == 2) ||\n\t\t\t\t(allow_print_for_draft && doc.docstatus == 0) ||\n\t\t\t\tfrappe.user.has_role('Administrator');\n\t\t}).map(doc => doc.name);\n\n\t\tconst invalid_docs = docs.filter(doc => !valid_docs.includes(doc.name));\n\n\t\tif (invalid_docs.length > 0) {\n\t\t\tfrappe.msgprint(__('You selected Draft or Cancelled documents'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length === 0) {\n\t\t\tfrappe.msgprint(__('Select atleast 1 record for printing'));\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Print Documents'),\n\t\t\tfields: [{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Letter Head'),\n\t\t\t\tfieldname: 'letter_sel',\n\t\t\t\tdefault: __('No Letterhead'),\n\t\t\t\toptions: this.get_letterhead_options()\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Print Format'),\n\t\t\t\tfieldname: 'print_sel',\n\t\t\t\toptions: frappe.meta.get_print_formats(this.doctype)\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Page Size'),\n\t\t\t\tfieldname: 'page_size',\n\t\t\t\toptions: frappe.meta.get_print_sizes(),\n\t\t\t\tdefault: print_settings.pdf_page_size\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tlabel: __('Page Height (in mm)'),\n\t\t\t\tfieldname: 'page_height',\n\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\tdefault: print_settings.pdf_page_height\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tlabel: __('Page Width (in mm)'),\n\t\t\t\tfieldname: 'page_width',\n\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\tdefault: print_settings.pdf_page_width\n\t\t\t}]\n\t\t});\n\n\t\tdialog.set_primary_action(__('Print'), args => {\n\t\t\tif (!args) return;\n\t\t\tconst default_print_format = frappe.get_meta(this.doctype).default_print_format;\n\t\t\tconst with_letterhead = args.letter_sel == __(\"No Letterhead\") ? 0 : 1;\n\t\t\tconst print_format = args.print_sel ? args.print_sel : default_print_format;\n\t\t\tconst json_string = JSON.stringify(valid_docs);\n\t\t\tconst letterhead = args.letter_sel;\n\n\t\t\tlet pdf_options;\n\t\t\tif (args.page_size === \"Custom\") {\n\t\t\t\tif (args.page_height === 0 || args.page_width === 0) {\n\t\t\t\t\tfrappe.throw(__('Page height and width cannot be zero'));\n\t\t\t\t}\n\t\t\t\tpdf_options = JSON.stringify({ \"page-height\": args.page_height, \"page-width\": args.page_width });\n\t\t\t} else {\n\t\t\t\tpdf_options = JSON.stringify({ \"page-size\": args.page_size });\n\t\t\t}\n\n\t\t\tconst w = window.open(\n\t\t\t\t'/api/method/frappe.utils.print_format.download_multi_pdf?' +\n\t\t\t\t'doctype=' + encodeURIComponent(this.doctype) +\n\t\t\t\t'&name=' + encodeURIComponent(json_string) +\n\t\t\t\t'&format=' + encodeURIComponent(print_format) +\n\t\t\t\t'&no_letterhead=' + (with_letterhead ? '0' : '1') +\n\t\t\t\t'&letterhead=' + encodeURIComponent(letterhead) +\n\t\t\t\t'&options=' + encodeURIComponent(pdf_options)\n\t\t\t);\n\n\t\t\tif (!w) {\n\t\t\t\tfrappe.msgprint(__('Please enable pop-ups'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\t}\n\n\tget_letterhead_options () {\n\t\tconst letterhead_options = [__(\"No Letterhead\")];\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: 'Letter Head',\n\t\t\t\tfields: ['name', 'is_default'],\n\t\t\t\tlimit_page_length: 0\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tr.message.forEach(letterhead => {\n\t\t\t\t\t\tletterhead_options.push(letterhead.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn letterhead_options;\n\t}\n\n\tdelete (docnames, done = null) {\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: 'frappe.desk.reportview.delete_items',\n\t\t\t\tfreeze: true,\n\t\t\t\targs: {\n\t\t\t\t\titems: docnames,\n\t\t\t\t\tdoctype: this.doctype\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(__('Cannot delete {0}', [failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound('delete');\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tassign (docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tconst assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tobj: this,\n\t\t\t\tmethod: 'frappe.desk.form.assign_to.add_multiple',\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocname: docnames,\n\t\t\t\tbulk_assign: true,\n\t\t\t\tre_assign: true,\n\t\t\t\tcallback: done\n\t\t\t});\n\t\t\tassign_to.dialog.clear();\n\t\t\tassign_to.dialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__('Select records for assignment'));\n\t\t}\n\t}\n\n\tapply_assignment_rule (docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe.call('frappe.automation.doctype.assignment_rule.assignment_rule.bulk_apply', {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocnames: docnames\n\t\t\t}).then(() => done());\n\t\t}\n\t}\n\n\tsubmit_or_cancel (docnames, action = 'submit', done = null) {\n\t\taction = action.toLowerCase();\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: 'frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\taction: action,\n\t\t\t\t\tdocnames: docnames\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(__('Cannot {0} {1}', [action, failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(action);\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tedit (docnames, field_mappings, done) {\n\t\tlet field_options = Object.keys(field_mappings).sort();\n\t\tconst status_regex = /status/i;\n\n\t\tconst default_field = field_options.find(value => status_regex.test(value));\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Edit'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\t'fieldtype': 'Select',\n\t\t\t\t\t'options': field_options,\n\t\t\t\t\t'default': default_field,\n\t\t\t\t\t'label': __('Field'),\n\t\t\t\t\t'fieldname': 'field',\n\t\t\t\t\t'reqd': 1,\n\t\t\t\t\t'onchange': () => {\n\t\t\t\t\t\tset_value_field(dialog);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'fieldtype': 'Data',\n\t\t\t\t\t'label': __('Value'),\n\t\t\t\t\t'fieldname': 'value',\n\t\t\t\t\t'reqd': 1\n\t\t\t\t}\n\t\t\t],\n\t\t\tprimary_action: ({ value }) => {\n\t\t\t\tconst fieldname = field_mappings[dialog.get_value('field')].fieldname;\n\t\t\t\tdialog.disable_primary_action();\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs',\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\tdocnames: docnames,\n\t\t\t\t\t\taction: 'update',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t[fieldname]: value\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).then(r => {\n\t\t\t\t\tlet failed = r.message || [];\n\n\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\tdialog.enable_primary_action();\n\t\t\t\t\t\tfrappe.throw(__('Cannot update {0}', [failed.map(f => f.bold ? f.bold() : f).join(', ')]));\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t\tdialog.hide();\n\t\t\t\t\tfrappe.show_alert(__('Updated successfully'));\n\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __('Update')\n\t\t});\n\n\t\tif (default_field) set_value_field(dialog); // to set `Value` df based on default `Field`\n\n\t\tfunction set_value_field (dialogObj) {\n\t\t\tconst new_df = Object.assign({},\n\t\t\t\tfield_mappings[dialogObj.get_value('field')]);\n\t\t\t/* if the field label has status in it and\n\t\t\tif it has select fieldtype with no default value then\n\t\t\tset a default value from the available option. */\n\t\t\tif (new_df.label.match(status_regex) &&\n\t\t\t\tnew_df.fieldtype === 'Select' && !new_df.default) {\n\t\t\t\tlet options = [];\n\t\t\t\tif (typeof new_df.options === \"string\") {\n\t\t\t\t\toptions = new_df.options.split(\"\\n\");\n\t\t\t\t}\n\t\t\t\t//set second option as default if first option is an empty string\n\t\t\t\tnew_df.default = options[0] || options[1];\n\t\t\t}\n\t\t\tnew_df.label = __('Value');\n\t\t\tnew_df.reqd = 1;\n\t\t\tdelete new_df.depends_on;\n\t\t\tdialogObj.replace_field('value', new_df);\n\t\t}\n\n\t\tdialog.refresh();\n\t\tdialog.show();\n\t}\n\n\n\tadd_tags (docnames, done) {\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Add Tags'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'MultiSelectPills',\n\t\t\t\t\tfieldname: 'tags',\n\t\t\t\t\tlabel: __(\"Tags\"),\n\t\t\t\t\treqd: true,\n\t\t\t\t\tget_data: function (txt) {\n\t\t\t\t\t\treturn frappe.db.get_link_options(\"Tag\", txt);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet args = dialog.get_values();\n\t\t\t\tif (args && args.tags) {\n\t\t\t\t\tdialog.set_message(\"Adding Tags...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tags\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t'tags': args.tags,\n\t\t\t\t\t\t\t'dt': this.doctype,\n\t\t\t\t\t\t\t'docs': docnames,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n}","export default class ListSettings {\n\tconstructor({ listview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw('DocType required');\n\t\t}\n\n\t\tthis.listview = listview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields ? JSON.parse(this.settings.fields) : [];\n\t\tthis.subject_field = null;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_listview_fields(meta);\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\n\t\tlet list_view_settings = frappe.get_meta(\"List View Settings\");\n\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(me.doctype)]),\n\t\t\tfields: list_view_settings.fields\n\t\t});\n\t\tme.dialog.set_values(me.settings);\n\t\tme.dialog.set_primary_action(__('Save'), () => {\n\t\t\tlet values = me.dialog.get_values();\n\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\"\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.list_view_settings.list_view_settings.save_listview_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\tlistview_settings: values,\n\t\t\t\t\tremoved_listview_fields: me.removed_fields || []\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.listview.refresh_columns(r.message.meta, r.message.listview_settings);\n\t\t\t\t\tme.dialog.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tme.dialog.fields_dict[\"total_fields\"].df.onchange = () => me.refresh();\n\t}\n\n\trefresh() {\n\t\tlet me = this;\n\n\t\tme.setup_fields();\n\t\tme.add_new_fields();\n\t\tme.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tlet me = this;\n\n\t\tif (!this.settings.fields) {\n\t\t\tme.update_fields();\n\t\t}\n\n\t\tif (!me.dialog.get_value(\"total_fields\")) {\n\t\t\tlet field_count = me.fields.length;\n\n\t\t\tif (field_count < 4) {\n\t\t\t\tfield_count = 4;\n\t\t\t} else if (field_count > 10) {\n\t\t\t\tfield_count = 4;\n\t\t\t}\n\n\t\t\tme.dialog.set_value(\"total_fields\", field_count);\n\t\t}\n\n\t\tme.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tfunction is_status_field(field) {\n\t\t\treturn field.fieldname === \"status_field\";\n\t\t}\n\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\t\tlet fields = ``;\n\t\tlet total_fields = me.dialog.get_values().total_fields || me.settings.total_fields;\n\n\t\tfor (let idx in me.fields) {\n\t\t\tif (idx == parseInt(total_fields)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet is_sortable = (idx == 0) ? `` : `sortable`;\n\t\t\tlet show_sortable_handle = (idx == 0) ? `hide` : ``;\n\t\t\tlet can_remove = (idx == 0 || is_status_field(me.fields[idx])) ? `hide` : ``;\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order ${is_sortable}\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\" data-fieldname=\"${me.fields[idx].fieldname}\"\n\t\t\t\t\tdata-label=\"${me.fields[idx].label}\" data-type=\"${me.fields[idx].type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle \" + show_sortable_handle)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${me.fields[idx].label}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1 ${can_remove}\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${me.fields[idx].fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted hidden-xs\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: '.sortable-handle',\n\t\t\tdraggable: '.sortable',\n\t\t\tonUpdate: () => {\n\t\t\t\tme.update_fields();\n\t\t\t\tme.refresh();\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet add_new_fields = fields_html.$wrapper[0].getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => me.column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet remove_fields = fields_html.$wrapper[0].getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () => me.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tremove_fields(fieldname) {\n\t\tlet me = this;\n\t\tlet existing_fields = me.fields.map(f => f.fieldname);\n\n\t\tfor (let idx in me.fields) {\n\t\t\tlet field = me.fields[idx];\n\n\t\t\tif (field.fieldname == fieldname) {\n\t\t\t\tme.fields.splice(idx, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tme.set_removed_fields(me.get_removed_listview_fields(me.fields.map(f => f.fieldname), existing_fields));\n\t\tme.refresh();\n\t\tme.update_fields();\n\t}\n\n\tupdate_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tme.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tme.fields.push({\n\t\t\t\tfieldname: fields_order.item(idx).getAttribute(\"data-fieldname\"),\n\t\t\t\tlabel: fields_order.item(idx).getAttribute(\"data-label\")\n\t\t\t});\n\t\t}\n\n\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\tme.dialog.get_value(\"fields\");\n\t}\n\n\tcolumn_selector() {\n\t\tlet me = this;\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(me.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Reset Fields\"),\n\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\tfieldname: \"reset_fields\",\n\t\t\t\t\tclick: () => me.reset_listview_fields(d)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: me.get_doctype_fields(me.meta, me.fields.map(f => f.fieldname)),\n\t\t\t\t\tcolumns: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\td.set_primary_action(__('Save'), () => {\n\t\t\tlet values = d.get_values().fields;\n\n\t\t\tme.set_removed_fields(me.get_removed_listview_fields(values, me.fields.map(f => f.fieldname)));\n\n\t\t\tme.fields = [];\n\t\t\tme.set_subject_field(me.meta);\n\t\t\tme.set_status_field();\n\n\t\t\tfor (let idx in values) {\n\t\t\t\tlet value = values[idx];\n\n\t\t\t\tif (me.fields.length === parseInt(me.dialog.get_values().total_fields)) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value != me.subject_field.fieldname) {\n\t\t\t\t\tlet field = frappe.meta.get_docfield(me.doctype, value);\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tme.fields.push({\n\t\t\t\t\t\t\tlabel: field.label,\n\t\t\t\t\t\t\tfieldname: field.fieldname\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.refresh();\n\t\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\t\td.hide();\n\t\t});\n\t\td.show();\n\t}\n\n\treset_listview_fields(dialog) {\n\t\tlet me = this;\n\n\t\tfrappe.xcall(\"frappe.desk.doctype.list_view_settings.list_view_settings.get_default_listview_fields\", {\n\t\t\tdoctype: me.doctype\n\t\t}).then((fields) => {\n\t\t\tlet field = dialog.get_field(\"fields\");\n\t\t\tfield.df.options = me.get_doctype_fields(me.meta, fields);\n\t\t\tdialog.refresh();\n\t\t});\n\n\t}\n\n\tget_listview_fields(meta) {\n\t\tlet me = this;\n\n\t\tif (!me.settings.fields) {\n\t\t\tme.set_list_view_fields(meta);\n\t\t} else {\n\t\t\tme.fields = JSON.parse(this.settings.fields);\n\t\t}\n\n\t\tme.fields.uniqBy(f => f.fieldname);\n\t}\n\n\tset_list_view_fields(meta) {\n\t\tlet me = this;\n\n\t\tme.set_subject_field(meta);\n\t\tme.set_status_field();\n\n\t\tmeta.fields.forEach(field => {\n\t\t\tif (field.in_list_view && !in_list(frappe.model.no_value_type, field.fieldtype) &&\n\t\t\t\tme.subject_field.fieldname != field.fieldname) {\n\n\t\t\t\tme.fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tfieldname: field.fieldname\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_subject_field(meta) {\n\t\tlet me = this;\n\n\t\tme.subject_field = {\n\t\t\tlabel: \"Name\",\n\t\t\tfieldname: \"name\"\n\t\t};\n\n\t\tif (meta.title_field) {\n\t\t\tlet field = frappe.meta.get_docfield(me.doctype, meta.title_field.trim());\n\n\t\t\tme.subject_field = {\n\t\t\t\tlabel: field.label,\n\t\t\t\tfieldname: field.fieldname\n\t\t\t};\n\t\t}\n\n\t\tme.fields.push(me.subject_field);\n\t}\n\n\tset_status_field() {\n\t\tlet me = this;\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tme.fields.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t\tlabel: \"Status\",\n\t\t\t\tfieldname: \"status_field\"\n\t\t\t});\n\t\t}\n\t}\n\n\tget_doctype_fields(meta, fields) {\n\t\tlet multiselect_fields = [];\n\n\t\tmeta.fields.forEach(field => {\n\t\t\tif (!in_list(frappe.model.no_value_type, field.fieldtype)) {\n\t\t\t\tmultiselect_fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: in_list(fields, field.fieldname)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn multiselect_fields;\n\t}\n\n\tget_removed_listview_fields(new_fields, existing_fields) {\n\t\tlet me = this;\n\t\tlet removed_fields = [];\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tnew_fields.push(\"status_field\");\n\t\t}\n\n\t\texisting_fields.forEach(column => {\n\t\t\tif (!in_list(new_fields, column)) {\n\t\t\t\tremoved_fields.push(column);\n\t\t\t}\n\t\t});\n\n\t\treturn removed_fields;\n\t}\n\n\tset_removed_fields(fields) {\n\t\tlet me = this;\n\n\t\tif (me.removed_fields) {\n\t\t\tme.removed_fields.concat(fields);\n\t\t} else {\n\t\t\tme.removed_fields = fields;\n\t\t}\n\t}\n}\n","import BulkOperations from \"./bulk_operations\";\nimport ListSettings from \"./list_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ListView = class ListView extends frappe.views.BaseList {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\n\t\tif (route.length === 2) {\n\t\t\tconst user_settings = frappe.get_user_settings(doctype);\n\t\t\tconst last_view = user_settings.last_view;\n\t\t\tfrappe.set_route(\n\t\t\t\t\"list\",\n\t\t\t\tfrappe.router.doctype_layout || doctype,\n\t\t\t\tfrappe.views.is_valid(last_view) ? last_view.toLowerCase() : \"list\"\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.show();\n\t}\n\n\thas_permissions() {\n\t\tconst can_read = frappe.perm.has_perm(this.doctype, 0, \"read\");\n\t\treturn can_read;\n\t}\n\n\tshow() {\n\t\tthis.parent.disable_scroll_to_top = true;\n\n\t\tif (!this.has_permissions()) {\n\t\t\tfrappe.set_route('');\n\t\t\tfrappe.msgprint(__(\"Not permitted to view {0}\", [this.doctype]));\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.show();\n\t}\n\n\tget view_name() {\n\t\treturn \"List\";\n\t}\n\n\tget view_user_settings() {\n\t\treturn this.user_settings[this.view_name] || {};\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\tthis.view = \"List\";\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || \"modified\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || \"desc\";\n\n\t\t// set filters from user_settings or list_settings\n\t\tif (\n\t\t\tthis.view_user_settings.filters &&\n\t\t\tthis.view_user_settings.filters.length\n\t\t) {\n\t\t\t// Priority 1: user_settings\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\t// build menu items\n\t\tthis.menu_items = this.menu_items.concat(this.get_menu_items());\n\n\t\tif (\n\t\t\tthis.view_user_settings.filters &&\n\t\t\tthis.view_user_settings.filters.length\n\t\t) {\n\t\t\t// Priority 1: saved filters\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\tif (this.view_name == 'List') this.toggle_paging = true;\n\n\t\tthis.patch_refresh_and_load_lib();\n\t\treturn this.get_list_view_settings();\n\t}\n\n\tget_list_view_settings() {\n\t\treturn frappe\n\t\t\t.call(\"frappe.desk.listview.get_list_settings\", {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((doc) => (this.list_view_settings = doc.message || {}));\n\t}\n\n\ton_sort_change(sort_by, sort_order) {\n\t\tthis.sort_by = sort_by;\n\t\tthis.sort_order = sort_order;\n\t\tsuper.on_sort_change();\n\t}\n\n\tvalidate_filters(filters) {\n\t\tlet valid_fields = this.meta.fields.map(df => df.fieldname);\n\t\tvalid_fields = valid_fields.concat(frappe.model.std_fields_list);\n\t\treturn filters\n\t\t\t.filter((f) => valid_fields.includes(f[1]))\n\t\t\t.uniqBy((f) => f[1]);\n\t}\n\n\tsetup_page() {\n\t\tthis.parent.list_view = this;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_page_head() {\n\t\tsuper.setup_page_head();\n\t\tthis.set_primary_action();\n\t\tthis.set_actions_menu_items();\n\t}\n\n\tset_actions_menu_items() {\n\t\tthis.actions_menu_items = this.get_actions_menu_items();\n\t\tthis.workflow_action_menu_items = this.get_workflow_action_menu_items();\n\t\tthis.workflow_action_items = {};\n\n\t\tconst actions = this.actions_menu_items.concat(\n\t\t\tthis.workflow_action_menu_items\n\t\t);\n\t\tactions.map((item) => {\n\t\t\tconst $item = this.page.add_actions_menu_item(\n\t\t\t\titem.label,\n\t\t\t\titem.action,\n\t\t\t\titem.standard\n\t\t\t);\n\t\t\tif (item.class) {\n\t\t\t\t$item.addClass(item.class);\n\t\t\t}\n\t\t\tif (item.is_workflow_action && $item) {\n\t\t\t\t// can be used to dynamically show or hide action\n\t\t\t\tthis.workflow_action_items[item.name] = $item;\n\t\t\t}\n\t\t});\n\t}\n\n\tshow_restricted_list_indicator_if_applicable() {\n\t\tconst match_rules_list = frappe.perm.get_match_rules(this.doctype);\n\t\tif (match_rules_list.length) {\n\t\t\tthis.restricted_list = $(\n\t\t\t\t`<button class=\"btn btn-xs restricted-button flex align-center\">\n\t\t\t\t\t${frappe.utils.icon('restriction', 'xs')}\n\t\t\t\t</button>`\n\t\t\t).click(() => this.show_restrictions(match_rules_list)).appendTo(this.page.page_form);\n\t\t}\n\t}\n\n\tshow_restrictions(match_rules_list = []) {\n\t\tfrappe.msgprint(\n\t\t\tfrappe.render_template(\"list_view_permission_restrictions\", {\n\t\t\t\tcondition_list: match_rules_list,\n\t\t\t}),\n\t\t\t__(\"Restrictions\", null, \"Title of message showing restrictions in list view\")\n\t\t);\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\tthis.settings.add_fields || [],\n\t\t\tthis.meta.track_seen ? \"_seen\" : null,\n\t\t\tthis.sort_by,\n\t\t\t\"enabled\",\n\t\t\t\"disabled\",\n\t\t\t\"color\"\n\t\t);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\n\t\tthis.fields.forEach((f) => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (\n\t\t\t\tdf &&\n\t\t\t\tdf.fieldtype === \"Currency\" &&\n\t\t\t\tdf.options &&\n\t\t\t\t!df.options.includes(\":\")\n\t\t\t) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tpatch_refresh_and_load_lib() {\n\t\t// throttle refresh for 1s\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.refresh = frappe.utils.throttle(this.refresh, 1000);\n\t\tthis.load_lib = new Promise((resolve) => {\n\t\t\tif (this.required_libs) {\n\t\t\t\tfrappe.require(this.required_libs, resolve);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t\t// call refresh every 5 minutes\n\t\tconst interval = 5 * 60 * 1000;\n\t\tsetInterval(() => {\n\t\t\t// don't call if route is different\n\t\t\tif (frappe.get_route_str() === this.page_name) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}, interval);\n\t}\n\n\tset_primary_action() {\n\t\tif (this.can_create) {\n\t\t\tconst doctype_name = __(frappe.router.doctype_layout) || __(this.doctype);\n\n\t\t\t// Better style would be __(\"Add {0}\", [doctype_name], \"Primary action in list view\")\n\t\t\t// Keeping it like this to not disrupt existing translations\n\t\t\tconst label = `${__(\"Add\", null, \"Primary action in list view\")} ${doctype_name}`;\n\t\t\tthis.page.set_primary_action(\n\t\t\t\tlabel,\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settings.primary_action) {\n\t\t\t\t\t\tthis.settings.primary_action();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.make_new_doc();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t} else {\n\t\t\tthis.page.clear_primary_action();\n\t\t}\n\t}\n\n\tmake_new_doc() {\n\t\tconst doctype = this.doctype;\n\t\tconst options = {};\n\t\tthis.filter_area.get().forEach((f) => {\n\t\t\tif (f[2] === \"=\" && frappe.model.is_non_std_field(f[1])) {\n\t\t\t\toptions[f[1]] = f[3];\n\t\t\t}\n\t\t});\n\t\tfrappe.new_doc(doctype, options);\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_skeleton();\n\t\tthis.setup_events();\n\t\tthis.settings.onload && this.settings.onload(this);\n\t\tthis.show_restricted_list_indicator_if_applicable();\n\t}\n\n\trefresh_columns(meta, list_view_settings) {\n\t\tthis.meta = meta;\n\t\tthis.list_view_settings = list_view_settings;\n\n\t\tthis.setup_columns();\n\t\tthis.refresh(true);\n\t}\n\n\trefresh(refresh_header=false) {\n\t\tsuper.refresh().then(() => {\n\t\t\tthis.render_header(refresh_header);\n\t\t\tthis.update_checkbox();\n\t\t});\n\t}\n\n\tupdate_checkbox(target) {\n\t\tif (!this.$checkbox_actions) return;\n\n\t\tlet $check_all_checkbox = this.$checkbox_actions.find(\".list-check-all\");\n\n\t\tif ($check_all_checkbox.prop(\"checked\") && target && !target.prop(\"checked\")) {\n\t\t\t$check_all_checkbox.prop(\"checked\", false); \n\t\t}\n\n\t\t$check_all_checkbox.prop(\"checked\", this.$checks.length === this.data.length);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $(\n\t\t\t`<div class=\"freeze flex justify-center align-center text-muted\">\n\t\t\t\t${__(\"Loading\")}...\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$result.append(this.$freeze);\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\n\t\tconst get_df = frappe.meta.get_docfield.bind(null, this.doctype);\n\n\t\t// 1st column: title_field or name\n\t\tif (this.meta.title_field) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: get_df(this.meta.title_field),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"Name\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\n\t\tthis.columns.push({\n\t\t\ttype: \"Tag\"\n\t\t});\n\n\t\t// 2nd column: Status indicator\n\t\tif (frappe.has_indicator(this.doctype)) {\n\t\t\t// indicator\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t});\n\t\t}\n\n\t\tconst fields_in_list_view = this.get_fields_in_list_view();\n\t\t// Add rest from in_list_view docfields\n\t\tthis.columns = this.columns.concat(\n\t\t\tfields_in_list_view\n\t\t\t\t.filter((df) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tfrappe.has_indicator(this.doctype) &&\n\t\t\t\t\t\tdf.fieldname === \"status\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!df.in_list_view) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn df.fieldname !== this.meta.title_field;\n\t\t\t\t})\n\t\t\t\t.map((df) => ({\n\t\t\t\t\ttype: \"Field\",\n\t\t\t\t\tdf,\n\t\t\t\t}))\n\t\t);\n\n\t\tif (this.list_view_settings.fields) {\n\t\t\tthis.columns = this.reorder_listview_fields();\n\t\t}\n\n\t\t// limit max to 8 columns if no total_fields is set in List View Settings\n\t\t// Screen with low density no of columns 4\n\t\t// Screen with medium density no of columns 6\n\t\t// Screen with high density no of columns 8\n\t\tlet total_fields = 6;\n\n\t\tif (window.innerWidth <= 1366) {\n\t\t\ttotal_fields = 4;\n\t\t} else if (window.innerWidth >= 1920) {\n\t\t\ttotal_fields = 8;\n\t\t}\n\n\t\tthis.columns = this.columns.slice(0, this.list_view_settings.total_fields || total_fields);\n\n\t\tif (\n\t\t\t!this.settings.hide_name_column &&\n\t\t\tthis.meta.title_field &&\n\t\t\tthis.meta.title_field !== 'name'\n\t\t) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Field\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"Name\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\treorder_listview_fields() {\n\t\tlet fields_order = [];\n\t\tlet fields = JSON.parse(this.list_view_settings.fields);\n\n\t\t//title and tags field is fixed\n\t\tfields_order.push(this.columns[0]);\n\t\tfields_order.push(this.columns[1]);\n\t\tthis.columns.splice(0, 2);\n\n\t\tfor (let fld in fields) {\n\t\t\tfor (let col in this.columns) {\n\t\t\t\tlet field = fields[fld];\n\t\t\t\tlet column = this.columns[col];\n\n\t\t\t\tif (column.type == \"Status\" && field.fieldname == \"status_field\") {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (column.type == \"Field\" && field.fieldname === column.df.fieldname) {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fields_order;\n\t}\n\n\tget_documentation_link() {\n\t\tif (this.meta.documentation) {\n\t\t\treturn `<a href=\"${\n\t\t\t\tthis.meta.documentation\n\t\t\t}\" target=\"blank\" class=\"meta-description small text-muted\">Need Help?</a>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_no_result_message() {\n\t\tlet help_link = this.get_documentation_link();\n\t\tlet filters = this.filter_area && this.filter_area.get();\n\t\tlet no_result_message = filters && filters.length\n\t\t\t? __(\"No {0} found\", [__(this.doctype)])\n\t\t\t: __(\"You haven't created a {0} yet\", [__(this.doctype)]);\n\t\tlet new_button_label = filters && filters.length\n\t\t\t? __(\"Create a new {0}\", [__(this.doctype)], \"Create a new document from list view\")\n\t\t\t: __(\"Create your first {0}\", [__(this.doctype)], \"Create a new document from list view\");\n\t\tlet empty_state_image =\n\t\t\tthis.settings.empty_state_image ||\n\t\t\t\"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst new_button = this.can_create\n\t\t\t? `<p><button class=\"btn btn-primary btn-sm btn-new-doc hidden-xs\">\n\t\t\t\t${new_button_label}\n\t\t\t</button> <button class=\"btn btn-primary btn-new-doc visible-xs\">\n\t\t\t\t${__(\"Create New\", null, \"Create a new document from list view\")}\n\t\t\t</button></p>`\n\t\t\t: \"\";\n\n\t\treturn `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${no_result_message}</p>\n\t\t\t${new_button}\n\t\t\t${help_link}\n\t\t</div>`;\n\t}\n\n\tfreeze() {\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_count) {\n\t\t\tthis.$result\n\t\t\t\t.find(\".list-count\")\n\t\t\t\t.html(`<span>${__(\"Refreshing\", null, \"Document count in list view\")}...</span>`);\n\t\t}\n\t}\n\n\tget_args() {\n\t\tconst args = super.get_args();\n\n\t\treturn Object.assign(args, {\n\t\t\twith_comment_count: true,\n\t\t});\n\t}\n\n\tbefore_refresh() {\n\t\tif (frappe.route_options && this.filter_area) {\n\t\t\tthis.filters = this.parse_filters_from_route_options();\n\t\t\tfrappe.route_options = null;\n\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\treturn this.filter_area\n\t\t\t\t\t.clear(false)\n\t\t\t\t\t.then(() => this.filter_area.set(this.filters));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tparse_filters_from_settings() {\n\t\treturn (this.settings.filters || []).map((f) => {\n\t\t\tif (f.length === 3) {\n\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_actions_menu_button(\n\t\t\tthis.$result.find(\".list-row-check:checked\").length > 0\n\t\t);\n\t}\n\n\ttoggle_actions_menu_button(toggle) {\n\t\tif (toggle) {\n\t\t\tthis.page.show_actions_menu();\n\t\t\tthis.page.clear_primary_action();\n\t\t\tthis.toggle_workflow_actions();\n\t\t} else {\n\t\t\tthis.page.hide_actions_menu();\n\t\t\tthis.set_primary_action();\n\t\t}\n\t}\n\n\trender_header(refresh_header=false) {\n\t\tif (refresh_header) {\n\t\t\tthis.$result.find('.list-row-head').remove();\n\t\t}\n\t\tif (this.$result.find(\".list-row-head\").length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_header_html());\n\t\t}\n\t}\n\n\trender_skeleton() {\n\t\tconst $row = this.get_list_row_html_skeleton(\n\t\t\t'<div><input type=\"checkbox\" class=\"render-list-checkbox\"/></div>'\n\t\t);\n\t\tthis.$result.append($row);\n\t}\n\n\tbefore_render() {\n\t\tthis.settings.before_render && this.settings.before_render();\n\t\tfrappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\t\"last_view\",\n\t\t\tthis.view_name\n\t\t);\n\t\tthis.save_view_user_settings({\n\t\t\tfilters: this.filter_area && this.filter_area.get(),\n\t\t\tsort_by: this.sort_selector && this.sort_selector.sort_by,\n\t\t\tsort_order: this.sort_selector && this.sort_selector.sort_order,\n\t\t});\n\t\tthis.toggle_paging && this.$paging_area.toggle(false);\n\t}\n\n\tafter_render() {\n\t\tthis.$no_result.html(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`);\n\t\tthis.setup_new_doc_event();\n\t\tthis.list_sidebar && this.list_sidebar.reload_stats();\n\t\tthis.toggle_paging && this.$paging_area.toggle(true);\n\t}\n\n\trender() {\n\t\tthis.render_list();\n\t\tthis.set_rows_as_checked();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\trender_list() {\n\t\t// clear rows\n\t\tthis.$result.find(\".list-row-container\").remove();\n\t\tif (this.data.length > 0) {\n\t\t\t// append rows\n\t\t\tthis.$result.append(\n\t\t\t\tthis.data\n\t\t\t\t\t.map((doc, i) => {\n\t\t\t\t\t\tdoc._idx = i;\n\t\t\t\t\t\treturn this.get_list_row_html(doc);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\")\n\t\t\t);\n\t\t}\n\t}\n\n\trender_count() {\n\t\tif (!this.list_view_settings.disable_count) {\n\t\t\tthis.get_count_str().then((str) => {\n\t\t\t\tthis.$result.find(\".list-count\").html(`<span>${str}</span>`);\n\t\t\t});\n\t\t}\n\t}\n\n\tget_header_html() {\n\t\tif (!this.columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject_field = this.columns[0].df;\n\t\tlet subject_html = `\n\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t<span class=\"level-item list-liked-by-me hidden-xs\">\n\t\t\t\t<span title=\"${__(\"Likes\")}\">${frappe.utils.icon('heart', 'sm', 'like-icon')}</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item\">${__(subject_field.label)}</span>\n\t\t`;\n\t\tconst $columns = this.columns\n\t\t\t.map(col => {\n\t\t\t\tlet classes = [\n\t\t\t\t\t\"list-row-col ellipsis\",\n\t\t\t\t\tcol.type == \"Subject\" ? \"list-subject level\" : \"hidden-xs\",\n\t\t\t\t\tcol.type == \"Tag\" ? \"tag-col hide\": \"\",\n\t\t\t\t\tfrappe.model.is_numeric_field(col.df) ? \"text-right\" : \"\",\n\t\t\t\t].join(\" \");\n\n\t\t\t\treturn `\n\t\t\t\t<div class=\"${classes}\">\n\t\t\t\t\t${col.type === \"Subject\" ? subject_html : `\n\t\t\t\t\t\t<span>${__((col.df && col.df.label) || col.type)}</span>`}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\treturn this.get_header_html_skeleton(\n\t\t\t$columns,\n\t\t\t'<span class=\"list-count\"></span>'\n\t\t);\n\t}\n\n\tget_header_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<header class=\"level list-row-head text-muted\">\n\t\t\t\t<div class=\"level-left list-header-subject\">\n\t\t\t\t\t${left}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-left checkbox-actions\">\n\t\t\t\t\t<div class=\"level list-subject\">\n\t\t\t\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t\t\t\t<span class=\"level-item list-header-meta\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t${right}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\tget_left_html(doc) {\n\t\treturn this.columns\n\t\t\t.map((col) => this.get_column_html(col, doc))\n\t\t\t.join(\"\");\n\t}\n\n\tget_right_html(doc) {\n\t\treturn this.get_meta_html(doc);\n\t}\n\n\tget_list_row_html(doc) {\n\t\treturn this.get_list_row_html_skeleton(\n\t\t\tthis.get_left_html(doc),\n\t\t\tthis.get_right_html(doc)\n\t\t);\n\t}\n\n\tget_list_row_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<div class=\"list-row-container\" tabindex=\"1\">\n\t\t\t\t<div class=\"level list-row\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_column_html(col, doc) {\n\t\tif (col.type === \"Status\") {\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col hidden-xs ellipsis\">\n\t\t\t\t\t${this.get_indicator_html(doc)}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tif (col.type === \"Tag\") {\n\t\t\tconst tags_display_class = !this.tags_shown ? 'hide' : '';\n\t\t\tlet tags_html = doc._user_tags ? this.get_tags_html(doc._user_tags, 2) : '<div class=\"tags-empty\">-</div>';\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col tag-col ${tags_display_class} hidden-xs ellipsis\">\n\t\t\t\t\t${tags_html}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tconst df = col.df || {};\n\t\tconst label = df.label;\n\t\tconst fieldname = df.fieldname;\n\t\tconst value = doc[fieldname] || \"\";\n\n\t\tconst format = () => {\n\t\t\tif (df.fieldtype === \"Code\") {\n\t\t\t\treturn value;\n\t\t\t} else if (df.fieldtype === \"Percent\") {\n\t\t\t\treturn `<div class=\"progress\" style=\"margin: 0px;\">\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n\t\t\t\t\t\t\taria-valuenow=\"${value}\"\n\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ${Math.round(value)}%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t} else {\n\t\t\t\treturn frappe.format(value, df, null, doc);\n\t\t\t}\n\t\t};\n\n\t\tconst field_html = () => {\n\t\t\tlet html;\n\t\t\tlet _value;\n\t\t\tlet strip_html_required =\n\t\t\t\tdf.fieldtype == \"Text Editor\" ||\n\t\t\t\t(df.fetch_from &&\n\t\t\t\t\t[\"Text\", \"Small Text\"].includes(df.fieldtype));\n\n\t\t\tif (strip_html_required) {\n\t\t\t\t_value = strip_html(value);\n\t\t\t} else {\n\t\t\t\t_value =\n\t\t\t\t\ttypeof value === \"string\"\n\t\t\t\t\t\t? frappe.utils.escape_html(value)\n\t\t\t\t\t\t: value;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Image\") {\n\t\t\t\thtml = df.options ? `<img src=\"${doc[df.options]}\"\n\t\t\t\t\tstyle=\"max-height: 30px; max-width: 100%;\">`\n\t\t\t\t\t: `<div class=\"missing-image small\">\n\t\t\t\t\t\t${frappe.utils.icon('restriction')}\n\t\t\t\t\t</div>`;\n\t\t\t} else if (df.fieldtype === \"Select\") {\n\t\t\t\thtml = `<span class=\"filterable indicator-pill ${frappe.utils.guess_colour(\n\t\t\t\t\t_value\n\t\t\t\t)} ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t<span class=\"ellipsis\"> ${__(_value)} </span>\n\t\t\t\t</span>`;\n\t\t\t} else if (df.fieldtype === \"Link\") {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${_value}\n\t\t\t\t</a>`;\n\t\t\t} else if (\n\t\t\t\t[\"Text Editor\", \"Text\", \"Small Text\", \"HTML Editor\", \"Markdown Editor\"].includes(\n\t\t\t\t\tdf.fieldtype\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\thtml = `<span class=\"ellipsis\">\n\t\t\t\t\t${_value}\n\t\t\t\t</span>`;\n\t\t\t} else {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${frappe.utils.escape_html(value)}\">\n\t\t\t\t\t${format()}\n\t\t\t\t</a>`;\n\t\t\t}\n\n\t\t\treturn `<span class=\"ellipsis\"\n\t\t\t\ttitle=\"${__(label)}: ${frappe.utils.escape_html(_value)}\">\n\t\t\t\t${html}\n\t\t\t</span>`;\n\t\t};\n\n\t\tconst class_map = {\n\t\t\tSubject: \"list-subject level\",\n\t\t\tField: \"hidden-xs\",\n\t\t};\n\t\tconst css_class = [\n\t\t\t\"list-row-col ellipsis\",\n\t\t\tclass_map[col.type],\n\t\t\tfrappe.model.is_numeric_field(df) ? \"text-right\" : \"\",\n\t\t].join(\" \");\n\n\t\tconst html_map = {\n\t\t\tSubject: this.get_subject_html(doc),\n\t\t\tField: field_html(),\n\t\t};\n\t\tlet column_html = html_map[col.type];\n\n\t\t// listview_setting formatter\n\t\tif (\n\t\t\tthis.settings.formatters &&\n\t\t\tthis.settings.formatters[fieldname]\n\t\t) {\n\t\t\tcolumn_html = this.settings.formatters[fieldname](value, df, doc);\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"${css_class}\">\n\t\t\t\t${column_html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_tags_html(user_tags, limit, colored=false) {\n\t\tlet get_tag_html = tag => {\n\t\t\tlet color = '', style = '';\n\t\t\tif (tag) {\n\t\t\t\tif (colored) {\n\t\t\t\t\tcolor = frappe.get_palette(tag);\n\t\t\t\t\tstyle = `background-color: var(${color[0]}); color: var(${color[1]})`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"tag-pill ellipsis\" title=\"${tag}\" style=\"${style}\">${tag}</div>`;\n\t\t\t}\n\t\t};\n\t\treturn user_tags.split(',').slice(1, limit + 1).map(get_tag_html).join('');\n\t}\n\n\tget_meta_html(doc) {\n\t\tlet html = \"\";\n\n\t\tlet settings_button = null;\n\t\tif (this.settings.button && this.settings.button.show(doc)) {\n\t\t\tsettings_button = `\n\t\t\t\t<span class=\"list-actions\">\n\t\t\t\t\t<button class=\"btn btn-action btn-default btn-xs\"\n\t\t\t\t\t\tdata-name=\"${doc.name}\" data-idx=\"${doc._idx}\"\n\t\t\t\t\t\ttitle=\"${this.settings.button.get_description(doc)}\">\n\t\t\t\t\t\t${this.settings.button.get_label(doc)}\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t`;\n\t\t}\n\n\t\tconst modified = comment_when(doc.modified, true);\n\n\t\tlet assigned_to = `<div class=\"list-assignments\">\n\t\t\t<span class=\"avatar avatar-small\">\n\t\t\t<span class=\"avatar-empty\"></span>\n\t\t</div>`;\n\n\t\tlet assigned_users = JSON.parse(doc._assign || \"[]\");\n\t\tif (assigned_users.length) {\n\t\t\tassigned_to = `<div class=\"list-assignments\">\n\t\t\t\t\t${frappe.avatar_group(assigned_users, 3, { filterable: true })[0].outerHTML}\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tconst comment_count = `<span class=\"${\n\t\t\t!doc._comment_count ? \"text-extra-muted\" : \"\"\n\t\t} comment-count\">\n\t\t\t\t${frappe.utils.icon('small-message')}\n\t\t\t\t${doc._comment_count > 99 ? \"99+\" : doc._comment_count}\n\t\t\t</span>`;\n\n\t\thtml += `\n\t\t\t<div class=\"level-item list-row-activity hidden-xs\">\n\t\t\t\t<div class=\"hidden-md hidden-xs\">\n\t\t\t\t\t${settings_button || assigned_to}\n\t\t\t\t</div>\n\t\t\t\t${modified}\n\t\t\t\t${comment_count}\n\t\t\t</div>\n\t\t\t<div class=\"level-item visible-xs text-right\">\n\t\t\t\t${this.get_indicator_dot(doc)}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn html;\n\t}\n\n\tget_count_str() {\n\t\tlet current_count = this.data.length;\n\t\tlet count_without_children = this.data.uniqBy((d) => d.name).length;\n\n\t\treturn frappe.db.count(this.doctype, {\n\t\t\tfilters: this.get_filters_for_args()\n\t\t}).then(total_count => {\n\t\t\tthis.total_count = total_count || current_count;\n\t\t\tthis.count_without_children = count_without_children !== current_count ? count_without_children : undefined;\n\t\t\tlet str = __('{0} of {1}', [current_count, this.total_count]);\n\t\t\tif (this.count_without_children) {\n\t\t\t\tstr = __('{0} of {1} ({2} rows with children)', [count_without_children, this.total_count, current_count]);\n\t\t\t}\n\t\t\treturn str;\n\t\t});\n\t}\n\n\tget_form_link(doc) {\n\t\tif (this.settings.get_form_link) {\n\t\t\treturn this.settings.get_form_link(doc);\n\t\t}\n\n\t\tconst docname = doc.name.match(/[%'\"#\\s]/)\n\t\t\t? encodeURIComponent(doc.name)\n\t\t\t: doc.name;\n\n\t\treturn `/app/${frappe.router.slug(frappe.router.doctype_layout || this.doctype)}/${docname}`;\n\t}\n\n\tget_seen_class(doc) {\n\t\treturn JSON.parse(doc._seen || '[]').includes(frappe.session.user)\n\t\t\t? ''\n\t\t\t: 'bold';\n\t}\n\n\tget_like_html(doc) {\n\t\tconst liked_by = JSON.parse(doc._liked_by || \"[]\");\n\t\tlet heart_class = liked_by.includes(frappe.session.user)\n\t\t\t? \"liked-by liked\"\n\t\t\t: \"not-liked\";\n\n\t\treturn `<span\n\t\t\tclass=\"like-action ${heart_class}\"\n\t\t\tdata-name=\"${doc.name}\" data-doctype=\"${this.doctype}\"\n\t\t\tdata-liked-by=\"${encodeURI(doc._liked_by) || \"[]\"}\"\n\t\t\ttitle=\"${liked_by.map(u => frappe.user_info(u).fullname).join(', ')}\">\n\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t</span>\n\t\t<span class=\"likes-count\">\n\t\t\t${liked_by.length > 99 ? __(\"99\") + \"+\" : __(liked_by.length || \"\")}\n\t\t</span>`;\n\t}\n\n\tget_subject_html(doc) {\n\t\tlet subject_field = this.columns[0].df;\n\t\tlet value = doc[subject_field.fieldname];\n\t\tif (this.settings.formatters && this.settings.formatters[subject_field.fieldname]) {\n\t\t\tlet formatter = this.settings.formatters[subject_field.fieldname];\n\t\t\tvalue = formatter(value, subject_field, doc);\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = doc.name;\n\t\t}\n\t\tlet subject = strip_html(value.toString());\n\t\tlet escaped_subject = frappe.utils.escape_html(subject);\n\n\t\tconst seen = this.get_seen_class(doc);\n\n\t\tlet subject_html = `\n\t\t\t<span class=\"level-item select-like\">\n\t\t\t\t<input class=\"list-row-checkbox\" type=\"checkbox\"\n\t\t\t\t\tdata-name=\"${escape(doc.name)}\">\n\t\t\t\t<span class=\"list-row-like hidden-xs style=\"margin-bottom: 1px;\">\n\t\t\t\t\t${this.get_like_html(doc)}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item ${seen} ellipsis\" title=\"${escaped_subject}\">\n\t\t\t\t<a class=\"ellipsis\"\n\t\t\t\t\thref=\"${this.get_form_link(doc)}\"\n\t\t\t\t\ttitle=\"${escaped_subject}\"\n\t\t\t\t\tdata-doctype=\"${this.doctype}\"\n\t\t\t\t\tdata-name=\"${doc.name}\">\n\t\t\t\t\t${subject}\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t`;\n\n\t\treturn subject_html;\n\t}\n\n\tget_indicator_html(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (indicator) {\n\t\t\treturn `<span class=\"indicator-pill ${indicator[1]} filterable ellipsis\"\n\t\t\t\tdata-filter='${indicator[2]}'>\n\t\t\t\t<span class=\"ellipsis\"> ${__(indicator[0])}</span>\n\t\t\t<span>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_indicator_dot(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (!indicator) return \"\";\n\t\treturn `<span class='indicator ${indicator[1]}' title='${__(\n\t\t\tindicator[0]\n\t\t)}'></span>`;\n\t}\n\n\tget_image_url(doc) {\n\t\tlet url = doc.image ? doc.image : doc[this.meta.image_field];\n\t\t// absolute url for mobile\n\t\tif (window.cordova && !frappe.utils.is_url(url)) {\n\t\t\turl = frappe.base_url + url;\n\t\t}\n\t\treturn url || null;\n\t}\n\n\tsetup_events() {\n\t\tthis.setup_filterable();\n\t\tthis.setup_list_click();\n\t\tthis.setup_tag_event();\n\t\tthis.setup_new_doc_event();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_action_handler();\n\t\tthis.setup_keyboard_navigation();\n\t}\n\n\tsetup_keyboard_navigation() {\n\t\tlet focus_first_row = () => {\n\t\t\tthis.$result.find(\".list-row-container:first\").focus();\n\t\t};\n\t\tlet focus_next = () => {\n\t\t\t$(document.activeElement)\n\t\t\t\t.next()\n\t\t\t\t.focus();\n\t\t};\n\t\tlet focus_prev = () => {\n\t\t\t$(document.activeElement)\n\t\t\t\t.prev()\n\t\t\t\t.focus();\n\t\t};\n\t\tlet list_row_focused = () => {\n\t\t\treturn $(document.activeElement).is(\".list-row-container\");\n\t\t};\n\t\tlet check_row = ($row) => {\n\t\t\tlet $input = $row.find(\"input[type=checkbox]\");\n\t\t\t$input.click();\n\t\t};\n\t\tlet get_list_row_if_focused = () =>\n\t\t\tlist_row_focused() ? $(document.activeElement) : null;\n\n\t\tlet is_current_page = () => this.page.wrapper.is(\":visible\");\n\t\tlet is_input_focused = () => $(document.activeElement).is(\"input\");\n\n\t\tlet handle_navigation = (direction) => {\n\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\n\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\tif ($list_row) {\n\t\t\t\tdirection === \"down\" ? focus_next() : focus_prev();\n\t\t\t} else {\n\t\t\t\tfocus_first_row();\n\t\t\t}\n\t\t};\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"down\",\n\t\t\taction: () => handle_navigation(\"down\"),\n\t\t\tdescription: __(\"Navigate list down\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"up\",\n\t\t\taction: () => handle_navigation(\"up\"),\n\t\t\tdescription: __(\"Navigate list up\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+down\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_next();\n\t\t\t},\n\t\t\tdescription: __(\"Select multiple list items\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+up\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_prev();\n\t\t\t},\n\t\t\tdescription: __(\"Select multiple list items\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"enter\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\t$list_row.find(\"a[data-name]\")[0].click();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Open list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"space\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\tcheck_row($list_row);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Select list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tsetup_filterable() {\n\t\t// filterable events\n\t\tthis.$result.on(\"click\", \".filterable\", (e) => {\n\t\t\tif (e.metaKey || e.ctrlKey) return;\n\t\t\te.stopPropagation();\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\tconst filters = $this.attr(\"data-filter\").split(\"|\");\n\t\t\tconst filters_to_apply = filters.map((f) => {\n\t\t\t\tf = f.split(\",\");\n\t\t\t\tif (f[2] === \"Today\") {\n\t\t\t\t\tf[2] = frappe.datetime.get_today();\n\t\t\t\t} else if (f[2] == \"User\") {\n\t\t\t\t\tf[2] = frappe.session.user;\n\t\t\t\t}\n\t\t\t\tthis.filter_area.remove(f[0]);\n\t\t\t\treturn [this.doctype, f[0], f[1], f.slice(2).join(\",\")];\n\t\t\t});\n\t\t\tthis.filter_area.add(filters_to_apply);\n\t\t});\n\t}\n\n\tsetup_list_click() {\n\t\tthis.$result.on(\"click\", \".list-row, .image-view-header, .file-header\", (e) => {\n\t\t\tconst $target = $(e.target);\n\t\t\t// tick checkbox if Ctrl/Meta key is pressed\n\t\t\tif (e.ctrlKey || (e.metaKey && !$target.is(\"a\"))) {\n\t\t\t\tconst $list_row = $(e.currentTarget);\n\t\t\t\tconst $check = $list_row.find(\".list-row-checkbox\");\n\t\t\t\t$check.prop(\"checked\", !$check.prop(\"checked\"));\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.on_row_checked();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// don't open form when checkbox, like, filterable are clicked\n\t\t\tif (\n\t\t\t\t$target.hasClass(\"filterable\") ||\n\t\t\t\t$target.hasClass(\"select-like\") ||\n\t\t\t\t$target.hasClass(\"file-select\") ||\n\t\t\t\t$target.hasClass(\"list-row-like\") ||\n\t\t\t\t$target.is(\":checkbox\")\n\t\t\t) {\n\t\t\t\te.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// link, let the event be handled via set_route\n\t\t\tif ($target.is(\"a\")) return;\n\n\t\t\t// clicked on the row, open form\n\t\t\tconst $row = $(e.currentTarget);\n\t\t\tconst link = $row.find(\".list-subject a\").get(0);\n\t\t\tif (link) {\n\t\t\t\tfrappe.set_route(link.pathname);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_action_handler() {\n\t\tthis.$result.on(\"click\", \".btn-action\", (e) => {\n\t\t\tconst $button = $(e.currentTarget);\n\t\t\tconst doc = this.data[$button.attr(\"data-idx\")];\n\t\t\tthis.settings.button.action(doc);\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tsetup_check_events() {\n\t\tthis.$result.on(\"change\", \"input[type=checkbox]\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\tif ($target.is(\".list-header-subject .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\n\t\t\t\t\t\".checkbox-actions .list-check-all\"\n\t\t\t\t);\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t\t$check.trigger(\"change\");\n\t\t\t} else if ($target.is(\".checkbox-actions .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\n\t\t\t\t\t\".list-header-subject .list-check-all\"\n\t\t\t\t);\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(\".list-row-checkbox\")\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t} else if ($target.attr('data-parent')) {\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(`.${$target.attr('data-parent')}`)\n\t\t\t\t\t.find('.list-row-checkbox')\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t}\n\n\t\t\tthis.on_row_checked();\n\t\t});\n\n\t\tthis.$result.on(\"click\", \".list-row-checkbox\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\t// shift select checkboxes\n\t\t\tif (\n\t\t\t\te.shiftKey &&\n\t\t\t\tthis.$checkbox_cursor &&\n\t\t\t\t!$target.is(this.$checkbox_cursor)\n\t\t\t) {\n\t\t\t\tconst name_1 = this.$checkbox_cursor.data().name;\n\t\t\t\tconst name_2 = $target.data().name;\n\t\t\t\tconst index_1 = this.data.findIndex((d) => d.name === name_1);\n\t\t\t\tconst index_2 = this.data.findIndex((d) => d.name === name_2);\n\t\t\t\tlet [min_index, max_index] = [index_1, index_2];\n\n\t\t\t\tif (min_index > max_index) {\n\t\t\t\t\t[min_index, max_index] = [max_index, min_index];\n\t\t\t\t}\n\n\t\t\t\tlet docnames = this.data\n\t\t\t\t\t.slice(min_index + 1, max_index)\n\t\t\t\t\t.map((d) => d.name);\n\t\t\t\tconst selector = docnames\n\t\t\t\t\t.map((name) => `.list-row-checkbox[data-name=\"${name}\"]`)\n\t\t\t\t\t.join(\",\");\n\t\t\t\tthis.$result.find(selector).prop(\"checked\", true);\n\t\t\t}\n\n\t\t\tthis.$checkbox_cursor = $target;\n\n\t\t\tthis.update_checkbox($target);\n\t\t});\n\t}\n\n\tsetup_like() {\n\t\tthis.$result.on(\"click\", \".like-action\", frappe.ui.click_toggle_like);\n\t\tthis.$result.on(\"click\", \".list-liked-by-me\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\t$this.toggleClass(\"active\");\n\n\t\t\tif ($this.hasClass(\"active\")) {\n\t\t\t\tthis.filter_area.add(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\"_liked_by\",\n\t\t\t\t\t\"like\",\n\t\t\t\t\t\"%\" + frappe.session.user + \"%\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.filter_area.remove(\"_liked_by\");\n\t\t\t}\n\t\t});\n\n\t}\n\n\tsetup_new_doc_event() {\n\t\tthis.$no_result.find(\".btn-new-doc\").click(() => {\n\t\t\tif (this.settings.primary_action) {\n\t\t\t\tthis.settings.primary_action();\n\t\t\t} else {\n\t\t\t\tthis.make_new_doc();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_tag_event() {\n\t\tthis.tags_shown = false;\n\t\tthis.list_sidebar && this.list_sidebar.parent.on(\"click\", \".list-tag-preview\", () => {\n\t\t\tthis.tags_shown = !this.tags_shown;\n\t\t\tthis.toggle_tags();\n\t\t});\n\t}\n\n\tsetup_realtime_updates() {\n\t\tif (\n\t\t\tthis.list_view_settings &&\n\t\t\tthis.list_view_settings.disable_auto_refresh\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tfrappe.realtime.on(\"list_update\", (data) => {\n\t\t\tif (this.filter_area.is_being_edited()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { doctype, name } = data;\n\t\t\tif (doctype !== this.doctype) return;\n\n\t\t\t// filters to get only the doc with this name\n\t\t\tconst call_args = this.get_call_args();\n\t\t\tcall_args.args.filters.push([this.doctype, \"name\", \"=\", name]);\n\t\t\tcall_args.args.start = 0;\n\n\t\t\tfrappe.call(call_args).then(({ message }) => {\n\t\t\t\tif (!message) return;\n\t\t\t\tconst data = frappe.utils.dict(message.keys, message.values);\n\t\t\t\tif (!(data && data.length)) {\n\t\t\t\t\t// this doc was changed and should not be visible\n\t\t\t\t\t// in the listview according to filters applied\n\t\t\t\t\t// let's remove it manually\n\t\t\t\t\tthis.data = this.data.filter((d) => d.name !== name);\n\t\t\t\t\tthis.render_list();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst datum = data[0];\n\t\t\t\tconst index = this.data.findIndex((d) => d.name === datum.name);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\t// append new data\n\t\t\t\t\tthis.data.push(datum);\n\t\t\t\t} else {\n\t\t\t\t\t// update this data in place\n\t\t\t\t\tthis.data[index] = datum;\n\t\t\t\t}\n\n\t\t\t\tthis.data.sort((a, b) => {\n\t\t\t\t\tconst a_value = a[this.sort_by] || \"\";\n\t\t\t\t\tconst b_value = b[this.sort_by] || \"\";\n\n\t\t\t\t\tlet return_value = 0;\n\t\t\t\t\tif (a_value > b_value) {\n\t\t\t\t\t\treturn_value = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (b_value > a_value) {\n\t\t\t\t\t\treturn_value = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.sort_order === \"desc\") {\n\t\t\t\t\t\treturn_value = -return_value;\n\t\t\t\t\t}\n\t\t\t\t\treturn return_value;\n\t\t\t\t});\n\t\t\t\tthis.toggle_result_area();\n\t\t\t\tthis.render_list();\n\t\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\t\tthis.set_rows_as_checked();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tset_rows_as_checked() {\n\t\t$.each(this.$checks, (i, el) => {\n\t\t\tlet docname = $(el).attr(\"data-name\");\n\t\t\tthis.$result\n\t\t\t\t.find(`.list-row-checkbox[data-name='${docname}']`)\n\t\t\t\t.prop(\"checked\", true);\n\t\t});\n\t\tthis.on_row_checked();\n\t}\n\n\ton_row_checked() {\n\t\tthis.$list_head_subject =\n\t\t\tthis.$list_head_subject ||\n\t\t\tthis.$result.find(\"header .list-header-subject\");\n\t\tthis.$checkbox_actions =\n\t\t\tthis.$checkbox_actions ||\n\t\t\tthis.$result.find(\"header .checkbox-actions\");\n\n\t\tthis.$checks = this.$result.find(\".list-row-checkbox:checked\");\n\n\t\tthis.$list_head_subject.toggle(this.$checks.length === 0);\n\t\tthis.$checkbox_actions.toggle(this.$checks.length > 0);\n\n\t\tif (this.$checks.length === 0) {\n\t\t\tthis.$list_head_subject\n\t\t\t\t.find(\".list-check-all\")\n\t\t\t\t.prop(\"checked\", false);\n\t\t} else {\n\t\t\tthis.$checkbox_actions\n\t\t\t\t.find(\".list-header-meta\")\n\t\t\t\t.html(__(\"{0} items selected\", [this.$checks.length]));\n\t\t\tthis.$checkbox_actions.show();\n\t\t\tthis.$list_head_subject.hide();\n\t\t}\n\t\tthis.update_checkbox();\n\t\tthis.toggle_actions_menu_button(this.$checks.length > 0);\n\t}\n\n\ttoggle_tags() {\n\t\tthis.$result.find('.tag-col').toggleClass(\"hide\");\n\t\tconst preview_label = this.tags_shown ? __(\"Hide Tags\") : __(\"Show Tags\");\n\t\tthis.list_sidebar.parent.find(\".list-tag-preview\").text(preview_label);\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst docnames = Array.from(this.$checks || []).map((check) =>\n\t\t\tcstr(unescape($(check).data().name))\n\t\t);\n\n\t\tif (only_docnames) return docnames;\n\n\t\treturn this.data.filter((d) => docnames.includes(d.name));\n\t}\n\n\tsave_view_user_settings(obj) {\n\t\treturn frappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\tthis.view_name,\n\t\t\tobj\n\t\t);\n\t}\n\n\ton_update() {}\n\n\tget_share_url() {\n\t\tconst query_params = this.get_filters_for_args()\n\t\t\t.map((filter) => {\n\t\t\t\tfilter[3] = encodeURIComponent(filter[3]);\n\t\t\t\tif (filter[2] === \"=\") {\n\t\t\t\t\treturn `${filter[1]}=${filter[3]}`;\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tfilter[1],\n\t\t\t\t\t\"=\",\n\t\t\t\t\tencodeURIComponent(JSON.stringify([filter[2], filter[3]])),\n\t\t\t\t].join(\"\");\n\t\t\t})\n\t\t\t.join(\"&\");\n\n\t\tlet full_url = window.location.href;\n\t\tif (query_params) {\n\t\t\tfull_url += \"?\" + query_params;\n\t\t}\n\t\treturn full_url;\n\t}\n\n\tshare_url() {\n\t\tconst d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Share URL\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\tfieldname: \"url\",\n\t\t\t\t\tlabel: \"URL\",\n\t\t\t\t\tdefault: this.get_share_url(),\n\t\t\t\t\tread_only: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Copy to clipboard\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tfrappe.utils.copy_to_clipboard(this.get_share_url());\n\t\t\t\td.hide();\n\t\t\t},\n\t\t});\n\t\td.show();\n\t}\n\n\tget_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst items = [];\n\n\t\tif (frappe.model.can_import(doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Import\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"data-import\", {\n\t\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.model.can_set_user_permissions(doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"User Permissions\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"user-permission\", {\n\t\t\t\t\t\tallow: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Role Permissions Manager\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"permission-manager\", {\n\t\t\t\t\t\tdoctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Customize\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tif (!this.meta) return;\n\t\t\t\t\tif (this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"doctype\", doctype);\n\t\t\t\t\t} else if (!this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"customize-form\", {\n\t\t\t\t\t\t\tdoc_type: doctype,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t\tshortcut: \"Ctrl+J\",\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: __(\"Toggle Sidebar\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.toggle_side_bar(),\n\t\t\tcondition: () => !this.hide_sidebar,\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+K\",\n\t\t});\n\n\t\titems.push({\n\t\t\tlabel: __(\"Share URL\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.share_url(),\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+L\",\n\t\t});\n\n\t\tif (\n\t\t\tfrappe.user.has_role(\"System Manager\") &&\n\t\t\tfrappe.boot.developer_mode === 1\n\t\t) {\n\t\t\t// edit doctype\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Edit DocType\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => frappe.set_route(\"form\", \"doctype\", doctype),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"List Settings\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => this.show_list_settings(),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\t\treturn items;\n\t}\n\n\tshow_list_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew ListSettings({\n\t\t\t\tlistview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.list_view_settings,\n\t\t\t\tmeta: frappe.get_meta(this.doctype)\n\t\t\t});\n\t\t});\n\t}\n\n\tget_workflow_action_menu_items() {\n\t\tconst workflow_actions = [];\n\t\tif (frappe.model.has_workflow(this.doctype)) {\n\t\t\tconst actions = frappe.workflow.get_all_transition_actions(\n\t\t\t\tthis.doctype\n\t\t\t);\n\t\t\tactions.forEach((action) => {\n\t\t\t\tworkflow_actions.push({\n\t\t\t\t\tlabel: __(action),\n\t\t\t\t\tname: action,\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tfrappe.xcall(\n\t\t\t\t\t\t\t\"frappe.model.workflow.bulk_workflow_approval\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdocnames: this.get_checked_items(true),\n\t\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tis_workflow_action: true,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn workflow_actions;\n\t}\n\n\ttoggle_workflow_actions() {\n\t\tif (!frappe.model.has_workflow(this.doctype)) return;\n\t\tconst checked_items = this.get_checked_items();\n\t\tfrappe\n\t\t\t.xcall(\"frappe.model.workflow.get_common_transition_actions\", {\n\t\t\t\tdocs: checked_items,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((actions) => {\n\t\t\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\t\t\tthis.workflow_action_items[key].toggle(\n\t\t\t\t\t\tactions.includes(key)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tget_actions_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst actions_menu_items = [];\n\t\tconst bulk_operations = new BulkOperations({ doctype: this.doctype });\n\n\t\tconst is_field_editable = (field_doc) => {\n\t\t\treturn (\n\t\t\t\tfield_doc.fieldname &&\n\t\t\t\tfrappe.model.is_value_type(field_doc) &&\n\t\t\t\tfield_doc.fieldtype !== \"Read Only\" &&\n\t\t\t\t!field_doc.hidden &&\n\t\t\t\t!field_doc.read_only\n\t\t\t);\n\t\t};\n\n\t\tconst has_editable_fields = (doctype) => {\n\t\t\treturn frappe.meta\n\t\t\t\t.get_docfields(doctype)\n\t\t\t\t.some((field_doc) => is_field_editable(field_doc));\n\t\t};\n\n\t\tconst has_submit_permission = (doctype) => {\n\t\t\treturn frappe.perm.has_perm(doctype, 0, \"submit\");\n\t\t};\n\n\t\t// utility\n\t\tconst bulk_assignment = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Assign To\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.assign(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_rule = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Apply Assignment Rule\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.apply_assignment_rule(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_add_tags = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Add Tags\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.add_tags(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_printing = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Print\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => bulk_operations.print(this.get_checked_items()),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Delete\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map(\n\t\t\t\t\t\t(docname) => docname.toString()\n\t\t\t\t\t);\n\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t__(\"Delete {0} items permanently?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t() => bulk_operations.delete(docnames, this.refresh)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_cancel = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Cancel\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\"Cancel {0} documents?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(\n\t\t\t\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\t\t\t\t\"cancel\",\n\t\t\t\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_submit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Submit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\"Submit {0} documents?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(\n\t\t\t\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\t\t\t\t\"submit\",\n\t\t\t\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_edit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Edit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet field_mappings = {};\n\n\t\t\t\t\tfrappe.meta.get_docfields(doctype).forEach((field_doc) => {\n\t\t\t\t\t\tif (is_field_editable(field_doc)) {\n\t\t\t\t\t\t\tfield_mappings[field_doc.label] = Object.assign(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tfield_doc\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\n\t\t\t\t\tbulk_operations.edit(\n\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\tfield_mappings,\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\t// bulk edit\n\t\tif (has_editable_fields(doctype)) {\n\t\t\tactions_menu_items.push(bulk_edit());\n\t\t}\n\n\t\t// bulk assignment\n\t\tactions_menu_items.push(bulk_assignment());\n\n\t\tactions_menu_items.push(bulk_assignment_rule());\n\n\t\tactions_menu_items.push(bulk_add_tags());\n\n\t\t// bulk printing\n\t\tif (frappe.model.can_print(doctype)) {\n\t\t\tactions_menu_items.push(bulk_printing());\n\t\t}\n\n\t\t// bulk submit\n\t\tif (\n\t\t\tfrappe.model.is_submittable(doctype) &&\n\t\t\thas_submit_permission(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_submit());\n\t\t}\n\n\t\t// bulk cancel\n\t\tif (\n\t\t\tfrappe.model.can_cancel(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_cancel());\n\t\t}\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype)) {\n\t\t\tactions_menu_items.push(bulk_delete());\n\t\t}\n\n\t\treturn actions_menu_items;\n\t}\n\n\tparse_filters_from_route_options() {\n\t\tconst filters = [];\n\n\t\tfor (let field in frappe.route_options) {\n\t\t\tlet doctype = null;\n\t\t\tlet value = frappe.route_options[field];\n\n\t\t\tlet value_array;\n\t\t\tif (\n\t\t\t\t$.isArray(value) &&\n\t\t\t\tvalue[0].startsWith(\"[\") &&\n\t\t\t\tvalue[0].endsWith(\"]\")\n\t\t\t) {\n\t\t\t\tvalue_array = [];\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tvalue_array.push(JSON.parse(value[i]));\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\ttypeof value === \"string\" &&\n\t\t\t\tvalue.startsWith(\"[\") &&\n\t\t\t\tvalue.endsWith(\"]\")\n\t\t\t) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t}\n\n\t\t\t// if `Child DocType.fieldname`\n\t\t\tif (field.includes(\".\")) {\n\t\t\t\tdoctype = field.split(\".\")[0];\n\t\t\t\tfield = field.split(\".\")[1];\n\t\t\t}\n\n\t\t\t// find the table in which the key exists\n\t\t\t// for example the filter could be {\"item_code\": \"X\"}\n\t\t\t// where item_code is in the child table.\n\n\t\t\t// we can search all tables for mapping the doctype\n\t\t\tif (!doctype) {\n\t\t\t\tdoctype = frappe.meta.get_doctype_for_field(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\tfield\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (doctype) {\n\t\t\t\tif (value_array) {\n\t\t\t\t\tfor (var j = 0; j < value_array.length; j++) {\n\t\t\t\t\t\tif ($.isArray(value_array[j])) {\n\t\t\t\t\t\t\tfilters.push([\n\t\t\t\t\t\t\t\tdoctype,\n\t\t\t\t\t\t\t\tfield,\n\t\t\t\t\t\t\t\tvalue_array[j][0],\n\t\t\t\t\t\t\t\tvalue_array[j][1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.push([doctype, field, \"=\", value_array[j]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ($.isArray(value)) {\n\t\t\t\t\tfilters.push([doctype, field, value[0], value[1]]);\n\t\t\t\t} else {\n\t\t\t\t\tfilters.push([doctype, field, \"=\", value]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tstatic trigger_list_update(data) {\n\t\tconst doctype = data.doctype;\n\t\tif (!doctype) return;\n\t\tfrappe.provide(\"frappe.views.trees\");\n\n\t\t// refresh list view\n\t\tconst page_name = frappe.get_route_str();\n\t\tconst list_view = frappe.views.list_view[page_name];\n\t\tlist_view && list_view.on_update(data);\n\t}\n};\n\n$(document).on(\"save\", (event, doc) => {\n\tfrappe.views.ListView.trigger_list_update(doc);\n});\n\nfrappe.get_list_view = (doctype) => {\n\tlet route = `List/${doctype}/List`;\n\treturn frappe.views.list_view[route];\n};\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide('frappe.views.list_view');\n\nwindow.cur_list = null;\nfrappe.views.ListFactory = class ListFactory extends frappe.views.Factory {\n\tmake (route) {\n\t\tvar me = this;\n\t\tvar doctype = route[1];\n\n\t\tfrappe.model.with_doctype(doctype, function () {\n\t\t\tif (locals['DocType'][doctype].issingle) {\n\t\t\t\tfrappe.set_re_route('Form', doctype);\n\t\t\t} else {\n\t\t\t\t// List / Gantt / Kanban / etc\n\t\t\t\t// File is a special view\n\t\t\t\tconst view_name = doctype !== 'File' ? frappe.utils.to_title_case(route[2] || 'List') : 'File';\n\t\t\t\tlet view_class = frappe.views[view_name + 'View'];\n\t\t\t\tif (!view_class) view_class = frappe.views.ListView;\n\n\t\t\t\tif (view_class && view_class.load_last_view && view_class.load_last_view()) {\n\t\t\t\t\t// view can have custom routing logic\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfrappe.provide('frappe.views.list_view.' + doctype);\n\t\t\t\tconst page_name = frappe.get_route_str();\n\n\t\t\t\tif (!frappe.views.list_view[page_name]) {\n\t\t\t\t\tfrappe.views.list_view[page_name] = new view_class({\n\t\t\t\t\t\tdoctype: doctype,\n\t\t\t\t\t\tparent: me.make_page(true, page_name)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.container.change_to(page_name);\n\t\t\t\t}\n\t\t\t\tme.set_cur_list();\n\t\t\t}\n\t\t});\n\t}\n\n\tshow() {\n\t\tif (this.re_route_to_view()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.set_module_breadcrumb();\n\t\tsuper.show();\n\t\tthis.set_cur_list();\n\t\tcur_list && cur_list.show();\n\t}\n\n\tre_route_to_view() {\n\t\tvar route = frappe.get_route();\n\t\tvar doctype = route[1];\n\t\tvar last_route = frappe.route_history.slice(-2)[0];\n\t\tif (route[0] === 'List' && route.length === 2 && frappe.views.list_view[doctype]) {\n\t\t\tif(last_route && last_route[0]==='List' && last_route[1]===doctype) {\n\t\t\t\t// last route same as this route, so going back.\n\t\t\t\t// this happens because /app/List/Item will redirect to /app/List/Item/List\n\t\t\t\t// while coming from back button, the last 2 routes will be same, so\n\t\t\t\t// we know user is coming in the reverse direction (via back button)\n\n\t\t\t\t// example:\n\t\t\t\t// Step 1: /app/List/Item redirects to /app/List/Item/List\n\t\t\t\t// Step 2: User hits \"back\" comes back to /app/List/Item\n\t\t\t\t// Step 3: Now we cannot send the user back to /app/List/Item/List so go back one more step\n\t\t\t\twindow.history.go(-1);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tset_module_breadcrumb() {\n\t\tif (frappe.route_history.length > 1) {\n\t\t\tvar prev_route = frappe.route_history[frappe.route_history.length - 2];\n\t\t\tif (prev_route[0] === 'modules') {\n\t\t\t\tvar doctype = frappe.get_route()[1],\n\t\t\t\t\tmodule = prev_route[1];\n\t\t\t\tif (frappe.module_links[module] && frappe.module_links[module].includes(doctype)) {\n\t\t\t\t\t// save the last page from the breadcrumb was accessed\n\t\t\t\t\tfrappe.breadcrumbs.set_doctype_module(doctype, module);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_cur_list() {\n\t\tvar route = frappe.get_route();\n\t\tvar page_name = frappe.get_route_str();\n\t\tcur_list = frappe.views.list_view[page_name];\n\t\tif (cur_list && cur_list.doctype !== route[1]) {\n\t\t\t// changing...\n\t\t\twindow.cur_list = null;\n\t\t}\n\t}\n}\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.ListViewSelect = class ListViewSelect {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.set_current_view();\n\t\tthis.setup_views();\n\t}\n\n\tadd_view_to_menu(view, action) {\n\t\tlet $el = this.page.add_custom_menu_item(\n\t\t\tthis.parent,\n\t\t\t__(view),\n\t\t\taction,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\tthis.icon_map[view] || \"list\"\n\t\t);\n\t\t$el.parent().attr(\"data-view\", view);\n\t}\n\n\tset_current_view() {\n\t\tthis.current_view = \"List\";\n\t\tconst route = frappe.get_route();\n\t\tconst view_name = frappe.utils.to_title_case(route[2] || \"\");\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(view_name)) {\n\t\t\tthis.current_view = view_name;\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\t}\n\n\tset_route(view, calendar_name) {\n\t\tconst route = [this.slug(), \"view\", view];\n\t\tif (calendar_name) route.push(calendar_name);\n\t\tfrappe.set_route(route);\n\t}\n\n\tsetup_views() {\n\t\tconst views = {\n\t\t\tList: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"list\")\n\t\t\t},\n\t\t\tReport: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst reports = this.get_reports();\n\t\t\t\t\tlet default_action = {};\n\t\t\t\t\t// Only add action if current route is not report builder\n\t\t\t\t\tif (frappe.get_route().length > 3) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"Report Builder\"),\n\t\t\t\t\t\t\taction: () => this.set_route(\"report\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Report\", reports, default_action);\n\t\t\t\t}\n\t\t\t},\n\t\t\tDashboard: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"dashboard\")\n\t\t\t},\n\t\t\tCalendar: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"calendar\", \"default\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tthis.get_calendars().then(calendars => {\n\t\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Calendar\", calendars);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tGantt: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"gantt\")\n\t\t\t},\n\t\t\tInbox: {\n\t\t\t\tcondition:\n\t\t\t\t\tthis.doctype === \"Communication\" &&\n\t\t\t\t\tfrappe.boot.email_accounts.length,\n\t\t\t\taction: () => this.set_route(\"inbox\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst accounts = this.get_email_accounts();\n\t\t\t\t\tlet default_action;\n\t\t\t\t\tif (\n\t\t\t\t\t\thas_common(frappe.user_roles, [\n\t\t\t\t\t\t\t\"System Manager\",\n\t\t\t\t\t\t\t\"Administrator\"\n\t\t\t\t\t\t])\n\t\t\t\t\t) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t\t\t\t\taction: () => frappe.new_doc(\"Email Account\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\n\t\t\t\t\t\t\"Inbox\",\n\t\t\t\t\t\taccounts,\n\t\t\t\t\t\tdefault_action\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tImage: {\n\t\t\t\tcondition: this.list_view.meta.image_field,\n\t\t\t\taction: () => this.set_route(\"image\")\n\t\t\t},\n\t\t\tTree: {\n\t\t\t\tcondition:\n\t\t\t\t\tfrappe.treeview_settings[this.doctype] ||\n\t\t\t\t\tfrappe.get_meta(this.doctype).is_tree,\n\t\t\t\taction: () => this.set_route(\"tree\")\n\t\t\t},\n\t\t\tKanban: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then(\n\t\t\t\t\t\tkanbans => this.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tMap: {\n\t\t\t\tcondition: this.list_view.settings.get_coords_method ||\n\t\t\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\t\t\tthis.list_view.meta.fields.find(i => i.fieldname === \"longitude\")) ||\n\t\t\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype == 'Geolocation')),\n\t\t\t\taction: () => this.set_route(\"map\")\n\t\t\t},\n\t\t};\n\n\t\tfrappe.views.view_modes.forEach(view => {\n\t\t\tif (this.current_view !== view && views[view].condition) {\n\t\t\t\tthis.add_view_to_menu(view, views[view].action);\n\t\t\t}\n\n\t\t\tif (this.current_view == view) {\n\t\t\t\tviews[view].current_view_handler &&\n\t\t\t\t\tviews[view].current_view_handler();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_dropdown_in_sidebar(view, items, default_action) {\n\t\tif (!this.sidebar) return;\n\t\tconst views_wrapper = this.sidebar.sidebar.find(\".views-section\");\n\t\tviews_wrapper.find(\".sidebar-label\").html(`${__(view)}`);\n\t\tconst $dropdown = views_wrapper.find(\".views-dropdown\");\n\t\t\n\t\tlet placeholder = `${__(\"Select {0}\", [__(view)])}`;\n\t\tlet html = ``;\n\n\t\tif (!items || !items.length) {\n\t\t\thtml = `<div class=\"empty-state\">\n\t\t\t\t\t\t${__(\"No {0} Found\", [__(view)])}\n\t\t\t\t</div>`;\n\t\t} else {\n\t\t\tconst page_name = this.get_page_name();\n\t\t\titems.map(item => {\n\t\t\t\tif (item.name.toLowerCase() == page_name.toLowerCase()) {\n\t\t\t\t\tplaceholder = item.name;\n\t\t\t\t} else {\n\t\t\t\t\thtml += `<li><a class=\"dropdown-item\" href=\"${item.route}\">${\n\t\t\t\t\t\titem.name\n\t\t\t\t\t}</a></li>`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tviews_wrapper.find(\".selected-view\").html(placeholder);\n\n\t\tif (default_action) {\n\t\t\tviews_wrapper.find(\".sidebar-action a\").html(default_action.label);\n\t\t\tviews_wrapper\n\t\t\t\t.find(\".sidebar-action a\")\n\t\t\t\t.click(() => default_action.action());\n\t\t}\n\n\t\t$dropdown.html(html);\n\n\t\tviews_wrapper.removeClass(\"hide\");\n\t}\n\n\tsetup_kanban_switcher(kanbans) {\n\t\tconst kanban_switcher = this.page.add_custom_button_group(\n\t\t\t__(\"Select Kanban\"),\n\t\t\tnull,\n\t\t\tthis.list_view.$filter_section\n\t\t);\n\n\t\tkanbans.map(k => {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\tk.name,\n\t\t\t\t() => this.set_route(\"kanban\", k.name),\n\t\t\t\tfalse\n\t\t\t);\n\t\t});\n\n\t\tthis.page.add_custom_menu_item(\n\t\t\tkanban_switcher,\n\t\t\t__(\"Create New Kanban Board\"),\n\t\t\t() => frappe.views.KanbanView.show_kanban_dialog(this.doctype),\n\t\t\ttrue\n\t\t);\n\t}\n\n\tget_page_name() {\n\t\treturn frappe.utils.to_title_case(\n\t\t\tfrappe.get_route().slice(-1)[0] || \"\"\n\t\t);\n\t}\n\n\tget_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tlet added = [];\n\t\tlet reports_to_add = [];\n\n\t\tlet add_reports = reports => {\n\t\t\treports.map(r => {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == this.doctype) {\n\t\t\t\t\tconst report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `/app/list/${r.ref_doctype}/report`\n\t\t\t\t\t\t\t: \"/app/query-report\";\n\n\t\t\t\t\tconst route =\n\t\t\t\t\t\tr.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\t\t\t\t\t\treports_to_add.push({\n\t\t\t\t\t\t\tname: r.title || r.name,\n\t\t\t\t\t\t\troute: route\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\n\t\treturn reports_to_add;\n\t}\n\n\tsetup_kanban_boards() {\n\t\tconst last_opened_kanban =\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"] &&\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"]\n\t\t\t\t.last_kanban_board;\n\t\tif (last_opened_kanban) {\n\t\t\tfrappe.set_route(\n\t\t\t\t\"list\",\n\t\t\t\tthis.doctype,\n\t\t\t\t\"kanban\",\n\t\t\t\tlast_opened_kanban\n\t\t\t);\n\t\t} else {\n\t\t\tfrappe.views.KanbanView.show_kanban_dialog(this.doctype, true);\n\t\t}\n\t}\n\n\tget_calendars() {\n\t\tconst doctype = this.doctype;\n\t\tlet calendars = [];\n\n\t\treturn frappe.db\n\t\t\t.get_list(\"Calendar View\", {\n\t\t\t\tfilters: {\n\t\t\t\t\treference_doctype: doctype\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\tif (!(result && Array.isArray(result) && result.length)) return;\n\n\t\t\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\t\t\t// has standard calendar view\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: \"Default\",\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/default`\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresult.map(calendar => {\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: calendar.name,\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/${\n\t\t\t\t\t\t\tcalendar.name\n\t\t\t\t\t\t}`\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn calendars;\n\t\t\t});\n\t}\n\n\tget_email_accounts() {\n\t\tlet accounts_to_add = [];\n\t\tlet accounts = frappe.boot.email_accounts;\n\t\taccounts.forEach(account => {\n\t\t\tlet email_account =\n\t\t\t\taccount.email_id == \"All Accounts\"\n\t\t\t\t\t? \"All Accounts\"\n\t\t\t\t\t: account.email_account;\n\t\t\tlet route = `/app/communication/inbox/${email_account}`;\n\t\t\tlet display_name = [\n\t\t\t\t\"All Accounts\",\n\t\t\t\t\"Sent Mail\",\n\t\t\t\t\"Spam\",\n\t\t\t\t\"Trash\"\n\t\t\t].includes(account.email_id)\n\t\t\t\t? __(account.email_id)\n\t\t\t\t: account.email_account;\n\n\t\t\taccounts_to_add.push({\n\t\t\t\tname: display_name,\n\t\t\t\troute: route\n\t\t\t});\n\t\t});\n\n\t\treturn accounts_to_add;\n\t}\n\n\tslug() {\n\t\treturn frappe.router.slug(frappe.router.doctype_layout || this.doctype);\n\t}\n};\n","frappe.provide('frappe.ui');\n\nexport default class ListFilter {\n\tconstructor({ wrapper, doctype }) {\n\t\tObject.assign(this, arguments[0]);\n\t\tthis.can_add_global = frappe.user.has_role([\n\t\t\t'System Manager',\n\t\t\t'Administrator',\n\t\t]);\n\t\tthis.filters = [];\n\t\tthis.make();\n\t\tthis.bind();\n\t\tthis.refresh();\n\t}\n\n\tmake() {\n\t\t// init dom\n\t\tthis.wrapper.html(`\n\t\t\t<li class=\"input-area\"></li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"saved-filters-preview\">${__('Show Saved')}</a>\n\t\t\t</li>\n\t\t\t<div class=\"saved-filters\"></div>\n\t\t`);\n\n\t\tthis.$input_area = this.wrapper.find('.input-area');\n\t\tthis.$list_filters = this.wrapper.find('.list-filters');\n\t\tthis.$saved_filters = this.wrapper.find('.saved-filters').hide();\n\t\tthis.$saved_filters_preview = this.wrapper.find('.saved-filters-preview');\n\t\tthis.saved_filters_hidden = true;\n\n\t\tthis.filter_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tplaceholder: __('Filter Name'),\n\t\t\t\tinput_class: 'input-xs',\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\n\t\tthis.is_global_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Check',\n\t\t\t\tlabel: __('Is Global'),\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\t}\n\n\tbind() {\n\t\tthis.bind_save_filter();\n\t\tthis.bind_toggle_saved_filters();\n\t\tthis.bind_click_filter();\n\t\tthis.bind_remove_filter();\n\t}\n\n\trefresh() {\n\t\tthis.get_list_filters().then(() => {\n\t\t\tthis.filters.length ? this.$saved_filters_preview.show() : this.$saved_filters_preview.hide();\n\t\t\tconst html = this.filters.map((filter) => this.filter_template(filter));\n\t\t\tthis.wrapper.find('.filter-pill').remove();\n\t\t\tthis.$saved_filters.append(html);\n\t\t});\n\t\tthis.is_global_input.toggle(false);\n\t\tthis.filter_input.set_description('');\n\t}\n\n\tfilter_template(filter) {\n\t\treturn `<div class=\"list-link filter-pill list-sidebar-button btn btn-default\" data-name=\"${\n\t\t\tfilter.name\n\t\t}\">\n\t\t\t<a class=\"ellipsis filter-name\">${filter.filter_name}</a>\n\t\t\t<a class=\"remove\">${frappe.utils.icon('close')}</a>\n\t\t</div>`;\n\t}\n\n\tbind_toggle_saved_filters() {\n\t\tthis.wrapper.find('.saved-filters-preview').click(() => {\n\t\t\tthis.toggle_saved_filters(this.saved_filters_hidden);\n\t\t});\n\t}\n\n\ttoggle_saved_filters(show) {\n\t\tthis.$saved_filters.toggle(show);\n\t\tconst label = show ? __('Hide Saved') : __('Show Saved');\n\t\tthis.wrapper.find('.saved-filters-preview').text(label);\n\t\tthis.saved_filters_hidden = !this.saved_filters_hidden;\n\t}\n\n\tbind_click_filter() {\n\t\tthis.wrapper.on('click', '.filter-pill .filter-name', (e) => {\n\t\t\tlet $filter = $(e.currentTarget).parent('.filter-pill');\n\t\t\tthis.set_applied_filter($filter);\n\t\t\tconst name = $filter.attr('data-name');\n\t\t\tthis.list_view.filter_area.clear().then(() => {\n\t\t\t\tthis.list_view.filter_area.add(this.get_filters_values(name));\n\t\t\t});\n\t\t});\n\t}\n\n\tbind_remove_filter() {\n\t\tthis.wrapper.on('click', '.filter-pill .remove', (e) => {\n\t\t\tconst $li = $(e.currentTarget).closest('.filter-pill');\n\t\t\tconst name = $li.attr('data-name');\n\t\t\tconst applied_filters = this.get_filters_values(name);\n\t\t\t$li.remove();\n\t\t\tthis.remove_filter(name).then(() => this.refresh());\n\t\t\tthis.list_view.filter_area.remove_filters(applied_filters);\n\t\t});\n\t}\n\n\tbind_save_filter() {\n\t\tthis.filter_input.$input.keydown(\n\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\tconst value = this.filter_input.get_value();\n\t\t\t\tconst has_value = Boolean(value);\n\n\t\t\t\tif (e.which === frappe.ui.keyCode['ENTER']) {\n\t\t\t\t\tif (!has_value || this.filter_name_exists(value)) return;\n\n\t\t\t\t\tthis.filter_input.set_value('');\n\t\t\t\t\tthis.save_filter(value).then(() => this.refresh());\n\t\t\t\t\tthis.toggle_saved_filters(true);\n\t\t\t\t} else {\n\t\t\t\t\tlet help_text = __('Press Enter to save');\n\n\t\t\t\t\tif (this.filter_name_exists(value)) {\n\t\t\t\t\t\thelp_text = __('Duplicate Filter Name');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.filter_input.set_description(has_value ? help_text : '');\n\n\t\t\t\t\tif (this.can_add_global) {\n\t\t\t\t\t\tthis.is_global_input.toggle(has_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 300)\n\t\t);\n\t}\n\n\tsave_filter(filter_name) {\n\t\treturn frappe.db.insert({\n\t\t\tdoctype: 'List Filter',\n\t\t\treference_doctype: this.list_view.doctype,\n\t\t\tfilter_name,\n\t\t\tfor_user: this.is_global_input.get_value() ? '' : frappe.session.user,\n\t\t\tfilters: JSON.stringify(this.get_current_filters()),\n\t\t});\n\t}\n\n\tremove_filter(name) {\n\t\tif (!name) return;\n\t\treturn frappe.db.delete_doc('List Filter', name);\n\t}\n\n\tget_filters_values(name) {\n\t\tconst filter = this.filters.find((filter) => filter.name === name);\n\t\treturn JSON.parse(filter.filters || '[]');\n\t}\n\n\tget_current_filters() {\n\t\treturn this.list_view.filter_area.get();\n\t}\n\n\tfilter_name_exists(filter_name) {\n\t\treturn (this.filters || []).find((f) => f.filter_name === filter_name);\n\t}\n\n\tget_list_filters() {\n\t\tif (frappe.session.user === 'Guest') return Promise.resolve();\n\t\treturn frappe.db\n\t\t\t.get_list('List Filter', {\n\t\t\t\tfields: ['name', 'filter_name', 'for_user', 'filters'],\n\t\t\t\tfilters: { reference_doctype: this.list_view.doctype },\n\t\t\t\tor_filters: [\n\t\t\t\t\t['for_user', '=', frappe.session.user],\n\t\t\t\t\t['for_user', '=', ''],\n\t\t\t\t],\n\t\t\t})\n\t\t\t.then((filters) => {\n\t\t\t\tthis.filters = filters || [];\n\t\t\t});\n\t}\n\n\tset_applied_filter($filter) {\n\t\tthis.$saved_filters\n\t\t\t.find('.btn-primary-light')\n\t\t\t.toggleClass('btn-primary-light btn-default');\n\t\t$filter.toggleClass('btn-default btn-primary-light');\n\t}\n}\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.FileView = class FileView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 2) {\n\t\t\tconst view_user_settings = frappe.get_user_settings(\"File\", \"File\");\n\t\t\tfrappe.set_route(\n\t\t\t\t\"List\",\n\t\t\t\t\"File\",\n\t\t\t\tview_user_settings.last_folder || frappe.boot.home_folder\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn redirect_to_home_if_invalid_route();\n\t}\n\n\tget view_name() {\n\t\treturn \"File\";\n\t}\n\n\tshow() {\n\t\tif (!redirect_to_home_if_invalid_route()) {\n\t\t\tsuper.show();\n\t\t}\n\t}\n\n\tsetup_view() {\n\t\tthis.render_header();\n\t\tthis.setup_events();\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"file-view\");\n\t\tthis.add_file_action_buttons();\n\t\tthis.page.add_button(__(\"Toggle Grid View\"), () => {\n\t\t\tfrappe.views.FileView.grid_view = !frappe.views.FileView.grid_view;\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`<div class=\"no-result\">\n\t\t\t<div class=\"breadcrumbs\">${this.get_breadcrumbs_html()}</div>\n\t\t\t<div class=\"text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t</div>`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tget_args() {\n\t\tlet args = super.get_args();\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tObject.assign(args, {\n\t\t\t\torder_by: `is_folder desc, ${this.sort_by} ${this.sort_order}`\n\t\t\t});\n\t\t}\n\t\treturn args;\n\t}\n\n\tset_breadcrumbs() {\n\t\tconst route = frappe.get_route();\n\t\troute.splice(-1);\n\t\tconst last_folder = route[route.length - 1];\n\t\tif (last_folder === \"File\") return;\n\n\t\tfrappe.breadcrumbs.add({\n\t\t\ttype: \"Custom\",\n\t\t\tlabel: __(\"Home\"),\n\t\t\troute: \"/app/List/File/Home\"\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"File Manager\");\n\n\t\t\tconst route = frappe.get_route();\n\t\t\tthis.current_folder = route.slice(2).join(\"/\");\n\t\t\tthis.filters = [[\"File\", \"folder\", \"=\", this.current_folder, true]];\n\t\t\tthis.order_by = this.view_user_settings.order_by || \"file_name asc\";\n\n\t\t\tthis.menu_items = this.menu_items.concat(this.file_menu_items());\n\t\t});\n\t}\n\n\tfile_menu_items() {\n\t\tconst items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Home\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"New Folder\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.prompt(\n\t\t\t\t\t\t__(\"Name\"),\n\t\t\t\t\t\tvalues => {\n\t\t\t\t\t\t\tif (values.value.indexOf(\"/\") > -1) {\n\t\t\t\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\"Folder name should not include '/' (slash)\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\tfile_name: values.value,\n\t\t\t\t\t\t\t\tfolder: this.current_folder\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod:\n\t\t\t\t\t\t\t\t\t\"frappe.core.doctype.file.file.create_new_folder\",\n\t\t\t\t\t\t\t\targs: data\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t__(\"Enter folder name\"),\n\t\t\t\t\t\t__(\"Create\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Import Zip\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t\t\trestrictions: {\n\t\t\t\t\t\t\tallowed_file_types: [\".zip\"]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton_success: file => {\n\t\t\t\t\t\t\tfrappe.show_alert(__(\"Unzipping files...\"));\n\t\t\t\t\t\t\tfrappe\n\t\t\t\t\t\t\t\t.call(\n\t\t\t\t\t\t\t\t\t\"frappe.core.doctype.file.file.unzip_file\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: file.name\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.then(r => {\n\t\t\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t\t\t\t\t\t__(\"Unzipped {0} files\", [\n\t\t\t\t\t\t\t\t\t\t\t\tr.message\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\treturn items;\n\t}\n\n\tadd_file_action_buttons() {\n\t\tthis.$cut_button = this.page\n\t\t\t.add_button(__(\"Cut\"), () => {\n\t\t\t\tfrappe.file_manager.cut(\n\t\t\t\t\tthis.get_checked_items(),\n\t\t\t\t\tthis.current_folder\n\t\t\t\t);\n\t\t\t\tthis.$checks.parents(\".file-wrapper\").addClass(\"cut\");\n\t\t\t})\n\t\t\t.hide();\n\n\t\tthis.$paste_btn = this.page\n\t\t\t.add_button(__(\"Paste\"), () =>\n\t\t\t\tfrappe.file_manager.paste(this.current_folder)\n\t\t\t)\n\t\t\t.hide();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = this.meta.fields\n\t\t\t.filter(\n\t\t\t\tdf => frappe.model.is_value_type(df.fieldtype) && !df.hidden\n\t\t\t)\n\t\t\t.map(df => df.fieldname)\n\t\t\t.concat([\"name\", \"modified\", \"creation\"]);\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\n\t\tthis.data = this.data.map(d => this.prepare_datum(d));\n\n\t\t// Bring folders to the top\n\t\tconst { sort_by } = this.sort_selector;\n\t\tif (sort_by === \"file_name\") {\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tif (a.is_folder && !b.is_folder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (!a.is_folder && b.is_folder) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tprepare_datum(d) {\n\t\tlet icon_class = \"\";\n\t\tlet type = \"\";\n\t\tif (d.is_folder) {\n\t\t\ticon_class = \"folder-normal\";\n\t\t\ttype = \"folder\";\n\t\t} else if (frappe.utils.is_image_file(d.file_name)) {\n\t\t\ticon_class = \"image\";\n\t\t\ttype = \"image\";\n\t\t} else {\n\t\t\ticon_class = \"file\";\n\t\t\ttype = \"file\";\n\t\t}\n\n\t\tlet title = d.file_name || d.file_url;\n\t\ttitle = title.slice(0, 60);\n\t\td._title = title;\n\t\td.icon_class = icon_class;\n\t\td._type = type;\n\n\t\td.subject_html = `\n\t\t\t${frappe.utils.icon(icon_class)}\n\t\t\t<span>${title}</span>\n\t\t\t${d.is_private ? '<i class=\"fa fa-lock fa-fw text-warning\"></i>' : \"\"}\n\t\t`;\n\t\treturn d;\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tfrappe.model.user_settings.save(\n\t\t\t\"File\",\n\t\t\t\"grid_view\",\n\t\t\tfrappe.views.FileView.grid_view\n\t\t);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_folder: this.current_folder\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.$result.empty().removeClass(\"file-grid-view\");\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render();\n\t\t\tthis.render_header();\n\t\t}\n\t}\n\n\tafter_render() {}\n\n\trender_list() {\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render_list();\n\t\t}\n\t}\n\n\trender_grid_view() {\n\t\tlet html = this.data\n\t\t\t.map(d => {\n\t\t\t\tconst icon_class = d.icon_class + \"-large\";\n\t\t\t\tlet file_body_html =\n\t\t\t\t\td._type == \"image\"\n\t\t\t\t\t\t? `<div class=\"file-image\"><img src=\"${\n\t\t\t\t\t\t\td.file_url\n\t\t\t\t\t\t}\" alt=\"${d.file_name}\"></div>`\n\t\t\t\t\t\t: frappe.utils.icon(icon_class, {\n\t\t\t\t\t\t\twidth: \"40px\",\n\t\t\t\t\t\t\theight: \"45px\"\n\t\t\t\t\t\t});\n\t\t\t\tconst name = escape(d.name);\n\t\t\t\tconst draggable = d.type == \"Folder\" ? false : true;\n\t\t\t\treturn `\n\t\t\t\t<a href=\"${this.get_route_url(d)}\"\n\t\t\t\t\tdraggable=\"${draggable}\" class=\"file-wrapper ellipsis\" data-name=\"${name}\">\n\t\t\t\t\t<div class=\"file-header\">\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\" type=\"checkbox\" data-name=\"${name}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-body\">\n\t\t\t\t\t\t${file_body_html}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-footer\">\n\t\t\t\t\t\t<div class=\"file-title ellipsis\">${d._title}</div>\n\t\t\t\t\t\t<div class=\"file-creation\">${this.get_creation_date(d)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tthis.$result.addClass(\"file-grid-view\");\n\t\tthis.$result.empty().html(\n\t\t\t`<div class=\"file-grid\">\n\t\t\t\t${html}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tget_breadcrumbs_html() {\n\t\tconst route = frappe.router.parse();\n\t\tconst folders = route.slice(2);\n\n\t\treturn folders\n\t\t\t.map((folder, i) => {\n\t\t\t\tif (i === folders.length - 1) {\n\t\t\t\t\treturn `<span>${folder}</span>`;\n\t\t\t\t}\n\t\t\t\tconst route = folders.reduce((acc, curr, j) => {\n\t\t\t\t\tif (j <= i) {\n\t\t\t\t\t\tacc += \"/\" + curr;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, \"/app/file/view\");\n\n\t\t\t\treturn `<a href=\"${route}\">${folder}</a>`;\n\t\t\t})\n\t\t\t.join(\"&nbsp;/&nbsp;\");\n\t}\n\n\tget_header_html() {\n\t\tconst breadcrumbs_html = this.get_breadcrumbs_html();\n\n\t\tlet header_selector_html = !frappe.views.FileView.grid_view\n\t\t\t? `<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"${__(\n\t\t\t\t\"Select All\"\n\t\t\t)}\">`\n\t\t\t: \"\";\n\n\t\tlet header_columns_html = !frappe.views.FileView.grid_view\n\t\t\t? `<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Size\")}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Created\")}</span>\n\t\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\tlet subject_html = `\n\t\t\t<div class=\"list-row-col list-subject level\">\n\t\t\t\t${header_selector_html}\n\t\t\t\t<span class=\"level-item\">${breadcrumbs_html}</span>\n\t\t\t</div>\n\t\t\t${header_columns_html}\n\t\t`;\n\n\t\treturn this.get_header_html_skeleton(\n\t\t\tsubject_html,\n\t\t\t'<span class=\"list-count\"></span>'\n\t\t);\n\t}\n\n\tget_route_url(file) {\n\t\treturn file.is_folder\n\t\t\t? \"/app/List/File/\" + file.name\n\t\t\t: this.get_form_link(file);\n\t}\n\n\tget_creation_date(file) {\n\t\tconst [date] = file.creation.split(\" \");\n\t\tlet created_on;\n\t\tif (date === frappe.datetime.now_date()) {\n\t\t\tcreated_on = comment_when(file.creation);\n\t\t} else {\n\t\t\tcreated_on = frappe.datetime.str_to_user(date);\n\t\t}\n\t\treturn created_on;\n\t}\n\n\tget_left_html(file) {\n\t\tfile = this.prepare_datum(file);\n\t\tconst file_size = file.file_size\n\t\t\t? frappe.form.formatters.FileSize(file.file_size)\n\t\t\t: \"\";\n\t\tconst route_url = this.get_route_url(file);\n\n\t\treturn `\n\t\t\t<div class=\"list-row-col ellipsis list-subject level\">\n\t\t\t\t<span class=\"level-item file-select\">\n\t\t\t\t\t<input class=\"list-row-checkbox hidden-xs\"\n\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${file.name}\">\n\t\t\t\t</span>\n\t\t\t\t<span class=\"level-item  ellipsis\" title=\"${file.file_name}\">\n\t\t\t\t\t<a class=\"ellipsis\" href=\"${route_url}\" title=\"${file.file_name}\">\n\t\t\t\t\t\t${file.subject_html}\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${file_size}</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${this.get_creation_date(file)}</span>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_right_html(file) {\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${comment_when(file.modified)}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tsetup_events() {\n\t\tsuper.setup_events();\n\t\tthis.setup_drag_events();\n\t}\n\n\tsetup_drag_events() {\n\t\tthis.$result.on(\"dragstart\", \".files .file-wrapper\", e => {\n\t\t\te.stopPropagation();\n\t\t\te.originalEvent.dataTransfer.setData(\n\t\t\t\t\"Text\",\n\t\t\t\t$(e.currentTarget).attr(\"data-name\")\n\t\t\t);\n\t\t\te.target.style.opacity = \"0.4\";\n\t\t\tfrappe.file_manager.cut(\n\t\t\t\t[{ name: $(e.currentTarget).attr(\"data-name\") }],\n\t\t\t\tthis.current_folder\n\t\t\t);\n\t\t});\n\n\t\tthis.$result.on(\n\t\t\t\"dragover\",\n\t\t\te => {\n\t\t\t\te.preventDefault();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis.$result.on(\"dragend\", \".files .file-wrapper\", e => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.target.style.opacity = \"1\";\n\t\t});\n\n\t\tthis.$result.on(\"drop\", e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconst $el = $(e.target).parents(\".file-wrapper\");\n\n\t\t\tlet dataTransfer = e.originalEvent.dataTransfer;\n\t\t\tif (!dataTransfer) return;\n\n\t\t\tif (dataTransfer.files && dataTransfer.files.length > 0) {\n\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\tfiles: dataTransfer.files,\n\t\t\t\t\tfolder: this.current_folder\n\t\t\t\t});\n\t\t\t} else if (dataTransfer.getData(\"Text\")) {\n\t\t\t\tif ($el.parents(\".folders\").length !== 0) {\n\t\t\t\t\tconst file_name = dataTransfer.getData(\"Text\");\n\t\t\t\t\tconst folder_name = decodeURIComponent(\n\t\t\t\t\t\t$el.attr(\"data-name\")\n\t\t\t\t\t);\n\t\t\t\t\tfrappe.file_manager.paste(folder_name);\n\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t`File ${file_name} moved to ${folder_name}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ton_row_checked() {\n\t\tsuper.on_row_checked();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ttoggle_cut_paste_buttons() {\n\t\tconst hide_paste_btn =\n\t\t\t!frappe.file_manager.can_paste ||\n\t\t\tfrappe.file_manager.old_folder === this.current_folder;\n\t\tconst hide_cut_btn = !(this.$checks && this.$checks.length > 0);\n\n\t\tthis.$paste_btn.toggle(!hide_paste_btn);\n\t\tthis.$cut_button.toggle(!hide_cut_btn);\n\t}\n};\n\nfrappe.views.FileView.grid_view =\n\tfrappe.get_user_settings(\"File\").grid_view || false;\n\nfunction redirect_to_home_if_invalid_route() {\n\tconst route = frappe.get_route();\n\tif (route[2] === \"List\") {\n\t\t// if the user somehow redirects to List/File/List\n\t\t// redirect back to Home\n\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\treturn true;\n\t}\n\treturn false;\n}\n","// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nfrappe.provide('frappe.views');\nfrappe.provide(\"frappe.interaction_settings\");\n\nfrappe.views.InteractionComposer = class InteractionComposer {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: (me.title || me.subject || __(\"New Activity\")),\n\t\t\tno_submit_on_enter: true,\n\t\t\tfields: me.get_fields(),\n\t\t\tprimary_action_label: __('Create'),\n\t\t\tprimary_action: function() {\n\t\t\t\tme.create_action();\n\t\t\t}\n\t\t});\n\n\t\t$(document).on(\"upload_complete\", function(event, attachment) {\n\t\t\tif(me.dialog.display) {\n\t\t\t\tlet wrapper = $(me.dialog.fields_dict.select_attachments.wrapper);\n\n\t\t\t\t// find already checked items\n\t\t\t\tlet checked_items = wrapper.find('[data-file-name]:checked').map(function() {\n\t\t\t\t\treturn $(this).attr(\"data-file-name\");\n\t\t\t\t});\n\n\t\t\t\t// reset attachment list\n\t\t\t\tme.render_attach();\n\n\t\t\t\t// check latest added\n\t\t\t\tchecked_items.push(attachment.name);\n\n\t\t\t\t$.each(checked_items, function(i, filename) {\n\t\t\t\t\twrapper.find('[data-file-name=\"'+ filename +'\"]').prop(\"checked\", true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tme.prepare();\n\t\tme.dialog.show();\n\t}\n\n\tget_fields() {\n\t\tlet me = this;\n\t\tlet interaction_docs = Object.keys(get_doc_mappings());\n\n\t\tlet fields = [\n\t\t\t{label:__(\"Reference\"), fieldtype:\"Select\",\n\t\t\t\tfieldname:\"interaction_type\", options: interaction_docs,\n\t\t\t\treqd: 1,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet values = me.get_values();\n\t\t\t\t\tme.get_fields().forEach(field => {\n\t\t\t\t\t\tif (field.fieldname != \"interaction_type\") {\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"reqd\", 0);\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"hidden\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tme.set_reqd_hidden_fields(values);\n\t\t\t\t\tme.get_event_categories();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{label:__(\"Category\"), fieldtype:\"Select\",\n\t\t\t\tfieldname:\"category\", options: \"\", hidden: 1},\n\t\t\t{label:__(\"Public\"), fieldtype:\"Check\",\n\t\t\t\tfieldname:\"public\", default: \"1\"},\n\t\t\t{fieldtype: \"Column Break\"},\n\t\t\t{label:__(\"Date\"), fieldtype:\"Datetime\",\n\t\t\t\tfieldname:\"due_date\"},\n\t\t\t{label:__(\"Assigned To\"), fieldtype:\"Link\",\n\t\t\t\tfieldname:\"assigned_to\", options:\"User\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Summary\"), fieldtype:\"Data\",\n\t\t\t\tfieldname:\"summary\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{fieldtype:\"Text Editor\", fieldname:\"description\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Select Attachments\"), fieldtype:\"HTML\",\n\t\t\t\tfieldname:\"select_attachments\"}\n\t\t];\n\n\t\treturn fields;\n\n\t}\n\n\tget_event_categories() {\n\t\tlet me = this;\n\t\tfrappe.model.with_doctype('Event', () => {\n\t\t\tlet categories = frappe.meta.get_docfield(\"Event\", \"event_category\").options.split(\"\\n\");\n\t\t\tme.dialog.get_input(\"category\").empty().add_options(categories);\n\t\t});\n\t}\n\n\tprepare() {\n\t\tthis.setup_attach();\n\t}\n\n\tset_reqd_hidden_fields(values) {\n\t\tlet me = this;\n\t\tif (values&&\"interaction_type\" in values) {\n\t\t\tlet doc_mapping = get_doc_mappings();\n\t\t\tdoc_mapping[values.interaction_type][\"reqd_fields\"].forEach(value => {\n\t\t\t\tme.dialog.set_df_property(value, 'reqd', 1);\n\t\t\t});\n\n\t\t\tdoc_mapping[values.interaction_type][\"hidden_fields\"].forEach(value => {\n\t\t\t\tme.dialog.set_df_property(value, 'hidden', 1);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_attach() {\n\t\tvar fields = this.dialog.fields_dict;\n\t\tvar attach = $(fields.select_attachments.wrapper);\n\n\t\tif (!this.attachments) {\n\t\t\tthis.attachments = [];\n\t\t}\n\n\t\tlet args = {\n\t\t\tfolder: 'Home/Attachments',\n\t\t\ton_success: attachment => this.attachments.push(attachment)\n\t\t};\n\n\t\tif (this.frm) {\n\t\t\targs = {\n\t\t\t\tdoctype: this.frm.doctype,\n\t\t\t\tdocname: this.frm.docname,\n\t\t\t\tfolder: 'Home/Attachments',\n\t\t\t\ton_success: attachment => {\n\t\t\t\t\tthis.frm.attachments.attachment_uploaded(attachment);\n\t\t\t\t\tthis.render_attach();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t$(\"<h6 class='text-muted add-attachment' style='margin-top: 12px; cursor:pointer;'>\"\n\t\t\t+__(\"Select Attachments\")+\"</h6><div class='attach-list'></div>\\\n\t\t\t<p class='add-more-attachments'>\\\n\t\t\t<a class='text-muted small'><i class='octicon octicon-plus' style='font-size: 12px'></i> \"\n\t\t\t+__(\"Add Attachment\")+\"</a></p>\").appendTo(attach.empty());\n\t\tattach\n\t\t\t.find(\".add-more-attachments a\")\n\t\t\t.on('click',() => new frappe.ui.FileUploader(args));\n\t\tthis.render_attach();\n\t}\n\n\trender_attach(){\n\t\tlet fields = this.dialog.fields_dict;\n\t\tlet attach = $(fields.select_attachments.wrapper).find(\".attach-list\").empty();\n\n\t\tlet files = [];\n\t\tif (this.attachments && this.attachments.length) {\n\t\t\tfiles = files.concat(this.attachments);\n\t\t}\n\t\tif (cur_frm) {\n\t\t\tfiles = files.concat(cur_frm.get_files());\n\t\t}\n\n\t\tif(files.length) {\n\t\t\t$.each(files, function(i, f) {\n\t\t\t\tif (!f.file_name) return;\n\t\t\t\tf.file_url = frappe.urllib.get_full_url(f.file_url);\n\n\t\t\t\t$(repl('<p class=\"checkbox\">'\n\t\t\t\t\t+\t'<label><span><input type=\"checkbox\" data-file-name=\"%(name)s\"></input></span>'\n\t\t\t\t\t+\t\t'<span class=\"small\">%(file_name)s</span>'\n\t\t\t\t\t+\t' <a href=\"%(file_url)s\" target=\"_blank\" class=\"text-muted small\">'\n\t\t\t\t\t+\t\t'<i class=\"fa fa-share\" style=\"vertical-align: middle; margin-left: 3px;\"></i>'\n\t\t\t\t\t+ '</label></p>', f))\n\t\t\t\t\t.appendTo(attach);\n\t\t\t});\n\t\t}\n\t}\n\n\tcreate_action() {\n\t\tlet me = this;\n\t\tlet btn = me.dialog.get_primary_btn();\n\n\t\tlet form_values = this.get_values();\n\t\tif(!form_values) return;\n\n\t\tlet selected_attachments =\n\t\t\t$.map($(me.dialog.wrapper).find(\"[data-file-name]:checked\"), function(element){\n\t\t\t\treturn $(element).attr(\"data-file-name\");\n\t\t\t});\n\n\t\tme.create_interaction(btn, form_values, selected_attachments);\n\t}\n\n\tget_values() {\n\t\tlet me = this;\n\t\tlet values = this.dialog.get_values(true);\n\t\tif (values) {\n\t\t\tvalues[\"reference_doctype\"] = me.frm.doc.doctype;\n\t\t\tvalues[\"reference_document\"] = me.frm.doc.name;\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tcreate_interaction(btn, form_values, selected_attachments) {\n\t\tlet me = this;\n\t\tme.dialog.hide();\n\n\t\tlet field_map = get_doc_mappings();\n\t\tlet interaction_values = {};\n\t\tObject.keys(form_values).forEach(value => {\n\t\t\tinteraction_values[field_map[form_values.interaction_type][\"field_map\"][value]] = form_values[value];\n\t\t});\n\n\t\tif (\"event_type\" in interaction_values){\n\t\t\tinteraction_values[\"event_type\"] = (form_values.public == 1) ? \"Public\" : \"Private\";\n\t\t}\n\t\tif (interaction_values[\"doctype\"] == \"Event\") {\n\t\t\tinteraction_values[\"event_participants\"] = [{\"reference_doctype\": form_values.reference_doctype,\n\t\t\t\t\"reference_docname\": form_values.reference_document}];\n\t\t}\n\t\tif (!(\"owner\" in interaction_values)){\n\t\t\tinteraction_values[\"owner\"] = frappe.session.user;\n\t\t}\n\t\tif (!(\"assigned_by\" in interaction_values) && interaction_values[\"doctype\"] == \"ToDo\") {\n\t\t\tinteraction_values[\"assigned_by\"] = frappe.session.user;\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod:\"frappe.client.insert\",\n\t\t\targs: { doc: interaction_values},\n\t\t\tbtn: btn,\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"{0} created successfully\", [form_values.interaction_type]),\n\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t});\n\t\t\t\t\tif (\"assigned_to\" in form_values) {\n\t\t\t\t\t\tme.assign_document(r.message, form_values[\"assigned_to\"]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selected_attachments) {\n\t\t\t\t\t\tme.add_attachments(r.message, selected_attachments);\n\t\t\t\t\t}\n\t\t\t\t\tif (cur_frm) {\n\t\t\t\t\t\tcur_frm.reload_doc();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(__(\"There were errors while creating the document. Please try again.\"));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tassign_document(doc, assignee) {\n\t\tif (doc.doctype != \"ToDo\") {\n\t\t\tfrappe.call({\n\t\t\t\tmethod:'frappe.desk.form.assign_to.add',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: doc.doctype,\n\t\t\t\t\tname: doc.name,\n\t\t\t\t\tassign_to: JSON.stringify([assignee]),\n\t\t\t\t},\n\t\t\t\tcallback:function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document has been assigned to {0}\", [assignee]),\n\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document could not be correctly assigned\"),\n\t\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n\n\tadd_attachments(doc, attachments) {\n\t\tfrappe.call({\n\t\t\tmethod:'frappe.utils.file_manager.add_attachments',\n\t\t\targs: {\n\t\t\t\tdoctype: doc.doctype,\n\t\t\t\tname: doc.name,\n\t\t\t\tattachments: JSON.stringify(attachments)\n\t\t\t},\n\t\t\tcallback:function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"The attachments could not be correctly linked to the new document\"),\n\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n};\n\nfunction get_doc_mappings() {\n\tconst doc_map = {\n\t\t\"Event\": {\n\t\t\t\"field_map\": {\n\t\t\t\t\"interaction_type\": \"doctype\",\n\t\t\t\t\"summary\": \"subject\",\n\t\t\t\t\"description\": \"description\",\n\t\t\t\t\"category\": \"event_category\",\n\t\t\t\t\"due_date\": \"starts_on\",\n\t\t\t\t\"public\": \"event_type\"\n\t\t\t},\n\t\t\t\"reqd_fields\": [\"summary\", \"due_date\"],\n\t\t\t\"hidden_fields\": []\n\t\t} ,\n\t\t\"ToDo\": {\n\t\t\t\"field_map\": {\n\t\t\t\t\"interaction_type\": \"doctype\",\n\t\t\t\t\"description\": \"description\",\n\t\t\t\t\"due_date\": \"date\",\n\t\t\t\t\"reference_doctype\": \"reference_type\",\n\t\t\t\t\"reference_document\": \"reference_name\",\n\t\t\t\t\"assigned_to\": \"owner\"\n\t\t\t},\n\t\t\t\"reqd_fields\": [\"description\"],\n\t\t\t\"hidden_fields\": [\"public\", \"category\"]\n\t\t}\n\t};\n\n\treturn doc_map;\n}\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nimport ListFilter from './list_filter';\nfrappe.provide('frappe.views');\n\n// opts:\n// stats = list of fields\n// doctype\n// parent\n// set_filter = function called on click\n\nfrappe.views.ListSidebar = class ListSidebar {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tvar sidebar_content = frappe.render_template(\"list_sidebar\", { doctype: this.doctype });\n\n\t\tthis.sidebar = $('<div class=\"list-sidebar overlay-sidebar hidden-xs hidden-sm\"></div>')\n\t\t\t.html(sidebar_content)\n\t\t\t.appendTo(this.page.sidebar.empty());\n\n\t\tthis.setup_list_filter();\n\t\tthis.setup_list_group_by();\n\n\t\t// do not remove\n\t\t// used to trigger custom scripts\n\t\t$(document).trigger('list_sidebar_setup');\n\n\t\tif (this.list_view.list_view_settings && this.list_view.list_view_settings.disable_sidebar_stats) {\n\t\t\tthis.sidebar.find('.list-tags').remove();\n\t\t} else {\n\t\t\tthis.sidebar.find('.list-stats').on('click', (e) => {\n\t\t\t\tthis.reload_stats();\n\t\t\t});\n\t\t}\n\n\t}\n\n\tsetup_views() {\n\t\tvar show_list_link = false;\n\n\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Calendar\"]').removeClass(\"hide\");\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Gantt\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\t\t//show link for kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"]').removeClass('hide');\n\t\tif (this.doctype === \"Communication\" && frappe.boot.email_accounts.length) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Inbox\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (frappe.treeview_settings[this.doctype] || frappe.get_meta(this.doctype).is_tree) {\n\t\t\tthis.sidebar.find(\".tree-link\").removeClass(\"hide\");\n\t\t}\n\n\t\tthis.current_view = 'List';\n\t\tvar route = frappe.get_route();\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(route[2])) {\n\t\t\tthis.current_view = route[2];\n\n\t\t\tif (this.current_view === 'Kanban') {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === 'Inbox') {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\n\t\t// disable link for current view\n\t\tthis.sidebar.find('.list-link[data-view=\"' + this.current_view + '\"] a')\n\t\t\t.attr('disabled', 'disabled').addClass('disabled');\n\n\t\t//enable link for Kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"] a, .list-link[data-view=\"Inbox\"] a')\n\t\t\t.attr('disabled', null).removeClass('disabled');\n\n\t\t// show image link if image_view\n\t\tif (this.list_view.meta.image_field) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Image\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (this.list_view.settings.get_coords_method ||\n\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\tthis.list_view.meta.fields.find(i => i.fieldname === \"longitude\")) ||\n\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype == 'Geolocation'))) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Map\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (show_list_link) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"List\"]').removeClass('hide');\n\t\t}\n\t}\n\n\tsetup_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tvar me = this;\n\t\tvar added = [];\n\t\tvar dropdown = this.page.sidebar.find('.reports-dropdown');\n\t\tvar divider = false;\n\n\t\tvar add_reports = function(reports) {\n\t\t\t$.each(reports, function(name, r) {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == me.doctype) {\n\t\t\t\t\tvar report_type = r.report_type === 'Report Builder' ?\n\t\t\t\t\t\t`List/${r.ref_doctype}/Report` : 'query-report';\n\n\t\t\t\t\tvar route = r.route || report_type + '/' + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\n\t\t\t\t\t\tif (!divider) {\n\t\t\t\t\t\t\tme.get_divider().appendTo(dropdown);\n\t\t\t\t\t\t\tdivider = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$('<li><a href=\"#' + route + '\">' +\n\t\t\t\t\t\t\t__(r.title || r.name) + '</a></li>').appendTo(dropdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports = Object.values(frappe.boot.user.all_reports).sort((a,b) => a.title.localeCompare(b.title)) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\t}\n\n\tsetup_list_filter() {\n\t\tthis.list_filter = new ListFilter({\n\t\t\twrapper: this.page.sidebar.find('.list-filters'),\n\t\t\tdoctype: this.doctype,\n\t\t\tlist_view: this.list_view\n\t\t});\n\t}\n\n\tsetup_kanban_boards() {\n\t\tconst $dropdown = this.page.sidebar.find('.kanban-dropdown');\n\t\tfrappe.views.KanbanView.setup_dropdown_in_sidebar(this.doctype, $dropdown);\n\t}\n\n\n\tsetup_keyboard_shortcuts() {\n\t\tthis.sidebar.find('.list-link > a, .list-link > .btn-group > a').each((i, el) => {\n\t\t\tfrappe.ui.keys\n\t\t\t\t.get_shortcut_group(this.page)\n\t\t\t\t.add($(el));\n\t\t});\n\t}\n\n\tsetup_list_group_by() {\n\t\tthis.list_group_by = new frappe.views.ListGroupBy({\n\t\t\tdoctype: this.doctype,\n\t\t\tsidebar: this,\n\t\t\tlist_view: this.list_view,\n\t\t\tpage: this.page\n\t\t});\n\t}\n\n\tget_stats() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.desk.reportview.get_sidebar_stats',\n\t\t\ttype: 'GET',\n\t\t\targs: {\n\t\t\t\tstats: me.stats,\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\t// wait for list filter area to be generated before getting filters, or fallback to default filters\n\t\t\t\tfilters: (me.list_view.filter_area ? me.list_view.get_filters_for_args() : me.default_filters) || []\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tlet stats = (r.message.stats || {})[\"_user_tags\"] || [];\n\t\t\t\tme.render_stat(stats);\n\t\t\t\tlet stats_dropdown = me.sidebar.find('.list-stats-dropdown');\n\t\t\t\tfrappe.utils.setup_search(stats_dropdown, '.stat-link', '.stat-label');\n\t\t\t}\n\t\t});\n\t}\n\n\trender_stat(stats) {\n\t\tlet args = {\n\t\t\tstats: stats,\n\t\t\tlabel: __(\"Tags\")\n\t\t};\n\n\t\tlet tag_list = $(frappe.render_template(\"list_sidebar_stat\", args)).on(\"click\", \".stat-link\", (e) => {\n\t\t\tlet fieldname = $(e.currentTarget).attr('data-field');\n\t\t\tlet label = $(e.currentTarget).attr('data-label');\n\t\t\tlet condition = \"like\";\n\t\t\tlet existing = this.list_view.filter_area.filter_list.get_filter(fieldname);\n\t\t\tif (existing) {\n\t\t\t\texisting.remove();\n\t\t\t}\n\t\t\tif (label == \"No Tags\") {\n\t\t\t\tlabel = \"%,%\";\n\t\t\t\tcondition = \"not like\";\n\t\t\t}\n\t\t\tthis.list_view.filter_area.add(\n\t\t\t\tthis.doctype,\n\t\t\t\tfieldname,\n\t\t\t\tcondition,\n\t\t\t\tlabel\n\t\t\t);\n\t\t});\n\n\t\tthis.sidebar.find(\".list-stats-dropdown .stat-result\").html(tag_list);\n\t}\n\n\treload_stats() {\n\t\tthis.sidebar.find(\".stat-link\").remove();\n\t\tthis.sidebar.find(\".stat-no-records\").remove();\n\t\tthis.get_stats();\n\t}\n};\n","frappe.provide('frappe.views');\n\nfrappe.views.ListGroupBy = class ListGroupBy {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make_wrapper();\n\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\t\tthis.group_by_fields = ['assigned_to', 'owner'];\n\t\tif (this.user_settings.group_by_fields) {\n\t\t\tthis.group_by_fields = this.group_by_fields.concat(\n\t\t\t\tthis.user_settings.group_by_fields\n\t\t\t);\n\t\t}\n\t\tthis.render_group_by_items();\n\t\tthis.make_group_by_fields_modal();\n\t\tthis.setup_dropdown();\n\t\tthis.setup_filter_by();\n\t}\n\n\tmake_group_by_fields_modal() {\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __('Select Filters'),\n\t\t\tfields: this.get_group_by_dropdown_fields(),\n\t\t});\n\n\t\td.set_primary_action(__(\"Save\"), ({ group_by_fields }) => {\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype,\n\t\t\t\t'group_by_fields',\n\t\t\t\tgroup_by_fields || null\n\t\t\t);\n\t\t\tthis.group_by_fields = group_by_fields\n\t\t\t\t? ['assigned_to', 'owner', ...group_by_fields]\n\t\t\t\t: ['assigned_to', 'owner'];\n\t\t\tthis.render_group_by_items();\n\t\t\tthis.setup_dropdown();\n\t\t\td.hide();\n\t\t});\n\n\t\td.$body.prepend(`\n\t\t\t<div class=\"filters-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__('Search')}\"\n\t\t\t\t\tdata-element=\"search\" class=\"form-control input-xs\">\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.page.sidebar.find('.add-list-group-by a').on('click', () => {\n\t\t\tfrappe.utils.setup_search(d.$body, '.unit-checkbox', '.label-area');\n\t\t\td.show();\n\t\t});\n\t}\n\n\tmake_wrapper() {\n\t\tthis.$wrapper = this.sidebar.sidebar.find('.list-group-by');\n\t\tlet html = `\n\t\t\t<div class=\"list-group-by-fields\">\n\t\t\t</div>\n\t\t\t<li class=\"add-list-group-by sidebar-action\">\n\t\t\t\t<a class=\"add-group-by\">\n\t\t\t\t\t${__('Edit Filters')}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`;\n\t\tthis.$wrapper.html(html);\n\t}\n\n\trender_group_by_items() {\n\t\tlet get_item_html = (fieldname) => {\n\t\t\tlet label, fieldtype;\n\t\t\tif (fieldname === 'assigned_to') {\n\t\t\t\tlabel = __('Assigned To');\n\t\t\t} else if (fieldname === 'owner') {\n\t\t\t\tlabel = __('Created By');\n\t\t\t} else {\n\t\t\t\tlabel = frappe.meta.get_label(this.doctype, fieldname);\n\t\t\t\tlet docfield = frappe.meta.get_docfield(this.doctype, fieldname);\n\t\t\t\tif (!docfield) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfieldtype = docfield.fieldtype;\n\t\t\t}\n\n\t\t\treturn `<li class=\"group-by-field list-link\">\n\t\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\" data-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\" aria-expanded=\"false\"\n\t\t\t\t\tdata-label=\"${label}\" data-fieldname=\"${fieldname}\" data-fieldtype=\"${fieldtype}\"\n\t\t\t\t\thref=\"#\" onclick=\"return false;\">\n\t\t\t\t\t\t<span class=\"ellipsis\">${__(label)}</span>\n\t\t\t\t\t\t<span>${frappe.utils.icon('select', 'xs')}</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul class=\"dropdown-menu group-by-dropdown\" role=\"menu\">\n\t\t\t\t\t</ul>\n\t\t\t</li>`;\n\t\t};\n\t\tlet html = this.group_by_fields.map(get_item_html).join('');\n\t\tthis.$wrapper.find('.list-group-by-fields').html(html);\n\t}\n\n\tsetup_dropdown() {\n\t\tthis.$wrapper.find('.group-by-field').on('show.bs.dropdown', (e) => {\n\t\t\tlet $dropdown = $(e.currentTarget).find('.group-by-dropdown');\n\t\t\tthis.set_loading_state($dropdown);\n\t\t\tlet fieldname = $(e.currentTarget).find('a')\n\t\t\t\t.attr('data-fieldname');\n\t\t\tlet fieldtype = $(e.currentTarget)\n\t\t\t\t.find('a')\n\t\t\t\t.attr('data-fieldtype');\n\t\t\tthis.get_group_by_count(fieldname).then((field_count_list) => {\n\t\t\t\tif (field_count_list.length) {\n\t\t\t\t\tlet applied_filter = this.list_view.get_filter_value(\n\t\t\t\t\t\tfieldname == 'assigned_to' ? '_assign' : fieldname\n\t\t\t\t\t);\n\t\t\t\t\tthis.render_dropdown_items(\n\t\t\t\t\t\tfield_count_list,\n\t\t\t\t\t\tfieldtype,\n\t\t\t\t\t\t$dropdown,\n\t\t\t\t\t\tapplied_filter\n\t\t\t\t\t);\n\t\t\t\t\tthis.setup_search($dropdown);\n\t\t\t\t} else {\n\t\t\t\t\tthis.set_empty_state($dropdown);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tset_loading_state($dropdown) {\n\t\t$dropdown.html(`<li>\n\t\t\t<div class=\"empty-state group-by-loading\">\n\t\t\t\t${__('Loading...')}\n\t\t\t</div>\n\t\t</li>`);\n\t}\n\n\tset_empty_state($dropdown) {\n\t\t$dropdown.html(\n\t\t\t`<div class=\"empty-state group-by-empty\">\n\t\t\t\t${__('No filters found')}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tsetup_search($dropdown) {\n\t\tfrappe.utils.setup_search(\n\t\t\t$dropdown,\n\t\t\t'.group-by-item',\n\t\t\t'.group-by-value',\n\t\t\t'data-name'\n\t\t);\n\t}\n\n\tget_group_by_dropdown_fields() {\n\t\tlet group_by_fields = [];\n\t\tlet fields = this.list_view.meta.fields.filter((f) =>\n\t\t\t['Select', 'Link', 'Data', 'Int', 'Check'].includes(f.fieldtype)\n\t\t);\n\t\tgroup_by_fields.push({\n\t\t\tlabel: __(this.doctype),\n\t\t\tfieldname: 'group_by_fields',\n\t\t\tfieldtype: 'MultiCheck',\n\t\t\tcolumns: 2,\n\t\t\toptions: fields.map((df) => ({\n\t\t\t\tlabel: __(df.label),\n\t\t\t\tvalue: df.fieldname,\n\t\t\t\tchecked: this.group_by_fields.includes(df.fieldname),\n\t\t\t})),\n\t\t});\n\t\treturn group_by_fields;\n\t}\n\n\tget_group_by_count(field) {\n\t\tlet current_filters = this.list_view.get_filters_for_args();\n\n\t\t// remove filter of the current field\n\t\tcurrent_filters = current_filters.filter(\n\t\t\t(f_arr) => !f_arr.includes(field === 'assigned_to' ? '_assign' : field)\n\t\t);\n\n\t\tlet args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tcurrent_filters: current_filters,\n\t\t\tfield: field,\n\t\t};\n\n\t\treturn frappe\n\t\t\t.call('frappe.desk.listview.get_group_by_count', args)\n\t\t\t.then((r) => {\n\t\t\t\tlet field_counts = r.message || [];\n\t\t\t\tfield_counts = field_counts.filter((f) => f.count !== 0);\n\t\t\t\tlet current_user = field_counts.find(\n\t\t\t\t\t(f) => f.name === frappe.session.user\n\t\t\t\t);\n\t\t\t\tfield_counts = field_counts.filter(\n\t\t\t\t\t(f) =>\n\t\t\t\t\t\t!['Guest', 'Administrator', frappe.session.user].includes(f.name)\n\t\t\t\t);\n\t\t\t\t// Set frappe.session.user on top of the list\n\t\t\t\tif (current_user) field_counts.unshift(current_user);\n\t\t\t\treturn field_counts;\n\t\t\t});\n\t}\n\n\trender_dropdown_items(fields, fieldtype, $dropdown, applied_filter) {\n\t\tlet standard_html = `\n\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__('Search')}\"\n\t\t\t\t\tdata-element=\"search\"\n\t\t\t\t\tclass=\"dropdown-search-input form-control input-xs\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t`;\n\t\tlet applied_filter_html='';\n\t\tlet dropdown_items_html = '';\n\n\t\tfields.map(field => {\n\t\t\tif (field.name === applied_filter) {\n\t\t\t\tapplied_filter_html = this.get_dropdown_html(field, fieldtype, true);\n\t\t\t} else {\n\t\t\t\tdropdown_items_html += this.get_dropdown_html(field, fieldtype);\n\t\t\t}\n\t\t});\n\n\t\tlet dropdown_html = standard_html + applied_filter_html + dropdown_items_html;\n\t\t$dropdown.toggleClass('has-selected', Boolean(applied_filter_html));\n\t\t$dropdown.html(dropdown_html);\n\t}\n\n\tget_dropdown_html(field, fieldtype, applied=false) {\n\t\tlet label = field.name == null ? __('Not Set') : field.name;\n\t\tif (label === frappe.session.user) {\n\t\t\tlabel = __('Me');\n\t\t} else if (fieldtype && fieldtype == 'Check') {\n\t\t\tlabel = label == '0' ? __('No') : __('Yes');\n\t\t}\n\t\tlet value = field.name == null ? '' : encodeURIComponent(field.name);\n\n\t\tlet applied_html = applied ? `<span class=\"applied\"> ${frappe.utils.icon('tick', 'xs')} </span>` : '';\n\t\treturn `<li class=\"group-by-item ${applied ? 'selected': ''}\" data-value=\"${value}\">\n\t\t\t<a class=\"dropdown-item\" href=\"#\" onclick=\"return false;\">\n\t\t\t\t${applied_html}\n\t\t\t\t<span class=\"group-by-value ellipsis\" data-name=\"${field.name}\">${label}</span>\n\t\t\t\t<span class=\"group-by-count\">${field.count}</span>\n\t\t\t</a>\n\t\t</li>`;\n\t}\n\n\tsetup_filter_by() {\n\t\tthis.$wrapper.on('click', '.group-by-item', (e) => {\n\t\t\tlet $target = $(e.currentTarget);\n\t\t\tlet is_selected = $target.hasClass('selected');\n\n\t\t\tlet fieldname = $target\n\t\t\t\t.parents('.group-by-field')\n\t\t\t\t.find('a')\n\t\t\t\t.data('fieldname');\n\t\t\tlet value =\n\t\t\t\ttypeof $target.data('value') === 'string'\n\t\t\t\t\t? decodeURIComponent($target.data('value').trim())\n\t\t\t\t\t: $target.data('value');\n\t\t\tfieldname = fieldname === 'assigned_to' ? '_assign' : fieldname;\n\n\t\t\treturn this.list_view.filter_area.remove(fieldname).then(() => {\n\t\t\t\tif (is_selected) return;\n\t\t\t\treturn this.apply_filter(fieldname, value);\n\t\t\t});\n\t\t});\n\t}\n\n\tapply_filter(fieldname, value) {\n\t\tlet operator = '=';\n\t\tif (value === '') {\n\t\t\toperator = 'is';\n\t\t\tvalue = 'not set';\n\t\t}\n\t\tif (fieldname === '_assign') {\n\t\t\toperator = 'like';\n\t\t\tvalue = `%${value}%`;\n\t\t}\n\t\treturn this.list_view.filter_area.add(\n\t\t\tthis.doctype,\n\t\t\tfieldname,\n\t\t\toperator,\n\t\t\tvalue\n\t\t);\n\t}\n};\n","frappe.provide('frappe.views');\n\nfrappe.views.GanttView = class GanttView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Gantt';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = this.page_title + ' ' + __('Gantt');\n\t\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\n\t\t\t\tif (typeof this.calendar_settings.gantt == 'object') {\n\t\t\t\t\tObject.assign(this.calendar_settings, this.calendar_settings.gantt);\n\t\t\t\t}\n\n\t\t\t\tif (this.calendar_settings.order_by) {\n\t\t\t\t\tthis.sort_by = this.calendar_settings.order_by;\n\t\t\t\t\tthis.sort_order = 'asc';\n\t\t\t\t} else {\n\t\t\t\t\tthis.sort_by = this.view_user_settings.sort_by || this.calendar_settings.field_map.start;\n\t\t\t\t\tthis.sort_order = this.view_user_settings.sort_order || 'asc';\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tsetup_view() {\n\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.prepare_tasks();\n\t}\n\n\tprepare_tasks() {\n\t\tvar me = this;\n\t\tvar meta = this.meta;\n\t\tvar field_map = this.calendar_settings.field_map;\n\n\t\tthis.tasks = this.data.map(function (item) {\n\t\t\t// set progress\n\t\t\tvar progress = 0;\n\t\t\tif (field_map.progress && $.isFunction(field_map.progress)) {\n\t\t\t\tprogress = field_map.progress(item);\n\t\t\t} else if (field_map.progress) {\n\t\t\t\tprogress = item[field_map.progress];\n\t\t\t}\n\n\t\t\t// title\n\t\t\tvar label;\n\t\t\tif (meta.title_field) {\n\t\t\t\tlabel = item.progress\n\t\t\t\t\t? __(\"{0} ({1}) - {2}%\", [item[meta.title_field], item.name, item.progress])\n\t\t\t\t\t: __(\"{0} ({1})\", [item[meta.title_field], item.name]);\n\t\t\t} else {\n\t\t\t\tlabel = item[field_map.title];\n\t\t\t}\n\n\t\t\tvar r = {\n\t\t\t\tstart: item[field_map.start],\n\t\t\t\tend: item[field_map.end],\n\t\t\t\tname: label,\n\t\t\t\tid: item[field_map.id || 'name'],\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\tprogress: progress,\n\t\t\t\tdependencies: item.depends_on_tasks || \"\"\n\t\t\t};\n\n\t\t\tif (item.color && frappe.ui.color.validate_hex(item.color)) {\n\t\t\t\tr['custom_class'] = 'color-' + item.color.substr(1);\n\t\t\t}\n\n\t\t\tif (item.is_milestone) {\n\t\t\t\tr['custom_class'] = 'bar-milestone';\n\t\t\t}\n\n\t\t\treturn r;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.load_lib.then(() => {\n\t\t\tthis.render_gantt();\n\t\t});\n\t}\n\n\trender_header() {\n\n\t}\n\n\trender_gantt() {\n\t\tconst me = this;\n\t\tconst gantt_view_mode = this.view_user_settings.gantt_view_mode || 'Day';\n\t\tconst field_map = this.calendar_settings.field_map;\n\t\tconst date_format = 'YYYY-MM-DD';\n\n\t\tthis.$result.empty();\n\t\tthis.$result.addClass('gantt-modern');\n\n\t\tthis.gantt = new Gantt(this.$result[0], this.tasks, {\n\t\t\tbar_height: 35,\n\t\t\tbar_corner_radius: 4,\n\t\t\tresize_handle_width: 8,\n\t\t\tresize_handle_height: 28,\n\t\t\tresize_handle_corner_radius: 3,\n\t\t\tresize_handle_offset: 4,\n\t\t\tview_mode: gantt_view_mode,\n\t\t\tdate_format: \"YYYY-MM-DD\",\n\t\t\ton_click: task => {\n\t\t\t\tfrappe.set_route('Form', task.doctype, task.id);\n\t\t\t},\n\t\t\ton_date_change: (task, start, end) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t[field_map.start]: moment(start).format(date_format),\n\t\t\t\t\t[field_map.end]: moment(end).format(date_format)\n\t\t\t\t});\n\t\t\t},\n\t\t\ton_progress_change: (task, progress) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tvar progress_fieldname = 'progress';\n\n\t\t\t\tif ($.isFunction(field_map.progress)) {\n\t\t\t\t\tprogress_fieldname = null;\n\t\t\t\t} else if (field_map.progress) {\n\t\t\t\t\tprogress_fieldname = field_map.progress;\n\t\t\t\t}\n\n\t\t\t\tif (progress_fieldname) {\n\t\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t\t[progress_fieldname]: parseInt(progress)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\ton_view_change: mode => {\n\t\t\t\t// save view mode\n\t\t\t\tme.save_view_user_settings({\n\t\t\t\t\tgantt_view_mode: mode\n\t\t\t\t});\n\t\t\t},\n\t\t\tcustom_popup_html: task => {\n\t\t\t\tvar item = me.get_item(task.id);\n\n\t\t\t\tvar html =\n\t\t\t\t\t`<div class=\"title\">${task.name}</div>\n\t\t\t\t\t<div class=\"subtitle\">${moment(task._start).format('MMM D')} - ${moment(task._end).format('MMM D')}</div>`;\n\n\t\t\t\t// custom html in doctype settings\n\t\t\t\tvar custom = me.settings.gantt_custom_popup_html;\n\t\t\t\tif (custom && $.isFunction(custom)) {\n\t\t\t\t\tvar ganttobj = task;\n\t\t\t\t\thtml = custom(ganttobj, item);\n\t\t\t\t}\n\t\t\t\treturn '<div class=\"details-container\">' + html + '</div>';\n\t\t\t}\n\t\t});\n\t\tthis.setup_view_mode_buttons();\n\t\tthis.set_colors();\n\t}\n\n\tsetup_view_mode_buttons() {\n\t\t// view modes (for translation) __(\"Day\"), __(\"Week\"), __(\"Month\"),\n\t\t//__(\"Half Day\"), __(\"Quarter Day\")\n\n\t\tlet $btn_group = this.$paging_area.find('.gantt-view-mode');\n\t\tif ($btn_group.length > 0) return;\n\n\t\tconst view_modes = this.gantt.options.view_modes || [];\n\t\tconst active_class = view_mode => this.gantt.view_is(view_mode) ? 'btn-info' : '';\n\t\tconst html =\n\t\t\t`<div class=\"btn-group gantt-view-mode\">\n\t\t\t\t${view_modes.map(value => `<button type=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-default btn-sm btn-view-mode ${active_class(value)}\"\n\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t${__(value)}\n\t\t\t\t\t</button>`).join('')}\n\t\t\t</div>`;\n\n\t\tthis.$paging_area.find('.level-left').append(html);\n\n\t\t// change view mode asynchronously\n\t\tconst change_view_mode = (value) => setTimeout(() => this.gantt.change_view_mode(value), 0);\n\n\t\tthis.$paging_area.on('click', '.btn-view-mode', e => {\n\t\t\tconst $btn = $(e.currentTarget);\n\t\t\tthis.$paging_area.find('.btn-view-mode').removeClass('btn-info');\n\t\t\t$btn.addClass('btn-info');\n\n\t\t\tconst value = $btn.data().value;\n\t\t\tchange_view_mode(value);\n\t\t});\n\t}\n\n\tset_colors() {\n\t\tconst classes = this.tasks\n\t\t\t.map(t => t.custom_class)\n\t\t\t.filter(c => c && c.startsWith('color-'));\n\n\t\tlet style = classes.map(c => {\n\t\t\tconst class_name = c.replace('#', '');\n\t\t\tconst bar_color = '#' + c.substr(6);\n\t\t\tconst progress_color = frappe.ui.color.get_contrast_color(bar_color);\n\t\t\treturn `\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar {\n\t\t\t\t\tfill: ${bar_color};\n\t\t\t\t}\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar-progress {\n\t\t\t\t\tfill: ${progress_color};\n\t\t\t\t}\n\t\t\t`;\n\t\t}).join(\"\");\n\n\t\tstyle = `<style>${style}</style>`;\n\t\tthis.$result.prepend(style);\n\t}\n\n\tget_item(name) {\n\t\treturn this.data.find(item => item.name === name);\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.css\",\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.min.js\"\n\t\t];\n\t}\n};\n\n","// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.views.calendar\");\nfrappe.provide(\"frappe.views.calendars\");\n\nfrappe.views.CalendarView = class CalendarView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)['Calendar'] || {};\n\t\t\troute.push(user_settings.last_calendar || 'default');\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\ttoggle_result_area() {}\n\n\tget view_name() {\n\t\treturn 'Calendar';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = __('{0} Calendar', [this.page_title]);\n\t\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\t\t\t\tthis.calendar_name = frappe.get_route()[3];\n\t\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_page_form = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tthis.save_view_user_settings({\n\t\t\tlast_calendar: this.calendar_name\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.calendar) {\n\t\t\tthis.calendar.refresh();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.load_lib\n\t\t\t.then(() => this.get_calendar_preferences())\n\t\t\t.then(options => {\n\t\t\t\tthis.calendar = new frappe.views.Calendar(options);\n\t\t\t});\n\t}\n\n\tget_calendar_preferences() {\n\t\tconst options = {\n\t\t\tdoctype: this.doctype,\n\t\t\tparent: this.$result,\n\t\t\tpage: this.page,\n\t\t\tlist_view: this\n\t\t};\n\t\tconst calendar_name = this.calendar_name;\n\n\t\treturn new Promise(resolve => {\n\t\t\tif (calendar_name === 'default') {\n\t\t\t\tObject.assign(options, frappe.views.calendar[this.doctype]);\n\t\t\t\tresolve(options);\n\t\t\t} else {\n\t\t\t\tfrappe.model.with_doc('Calendar View', calendar_name, () => {\n\t\t\t\t\tconst doc = frappe.get_doc('Calendar View', calendar_name);\n\t\t\t\t\tif (!doc) {\n\t\t\t\t\t\tfrappe.show_alert(__(\"{0} is not a valid Calendar. Redirecting to default Calendar.\", [calendar_name.bold()]));\n\t\t\t\t\t\tfrappe.set_route(\"List\", this.doctype, \"Calendar\", \"default\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(options, {\n\t\t\t\t\t\tfield_map: {\n\t\t\t\t\t\t\tid: \"name\",\n\t\t\t\t\t\t\tstart: doc.start_date_field,\n\t\t\t\t\t\t\tend: doc.end_date_field,\n\t\t\t\t\t\t\ttitle: doc.subject_field,\n\t\t\t\t\t\t\tallDay: doc.all_day ? 1 : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve(options);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\tlet assets = [\n\t\t\t'assets/frappe/js/lib/fullcalendar/fullcalendar.min.css',\n\t\t\t'assets/frappe/js/lib/fullcalendar/fullcalendar.min.js',\n\t\t];\n\t\tlet user_language = frappe.boot.user.language;\n\t\tif (user_language && user_language !== 'en') {\n\t\t\tassets.push('assets/frappe/js/lib/fullcalendar/locale-all.js');\n\t\t}\n\t\treturn assets;\n\t}\n};\n\nfrappe.views.Calendar = Class.extend({\n\tinit: function(options) {\n\t\t$.extend(this, options);\n\t\tthis.get_default_options();\n\t},\n\tget_default_options: function() {\n\t\treturn new Promise ((resolve) => {\n\t\t\tlet defaultView = localStorage.getItem('cal_defaultView');\n\t\t\tlet weekends = localStorage.getItem('cal_weekends');\n\t\t\tlet defaults = {\n\t\t\t\t'defaultView': defaultView ? defaultView : \"month\",\n\t\t\t\t'weekends': weekends ? weekends : true\n\t\t\t};\n\t\t\tresolve(defaults);\n\t\t}).then(defaults => {\n\t\t\tthis.make_page();\n\t\t\tthis.setup_options(defaults);\n\t\t\tthis.make();\n\t\t\tthis.setup_view_mode_button(defaults);\n\t\t\tthis.bind();\n\t\t});\n\t},\n\tmake_page: function() {\n\t\tvar me = this;\n\n\t\t// add links to other calendars\n\t\tme.page.clear_user_actions();\n\t\t$.each(frappe.boot.calendars, function(i, doctype) {\n\t\t\tif(frappe.model.can_read(doctype)) {\n\t\t\t\tme.page.add_menu_item(__(doctype), function() {\n\t\t\t\t\tfrappe.set_route(\"List\", doctype, \"Calendar\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$(this.parent).on(\"show\", function() {\n\t\t\tme.$cal.fullCalendar(\"refetchEvents\");\n\t\t});\n\t},\n\n\tmake: function() {\n\t\tthis.$wrapper = this.parent;\n\t\tthis.$cal = $(\"<div>\").appendTo(this.$wrapper);\n\t\tthis.footnote_area = frappe.utils.set_footnote(this.footnote_area, this.$wrapper,\n\t\t\t__(\"Select or drag across time slots to create a new event.\"));\n\t\tthis.footnote_area.css({\"border-top\": \"0px\"});\n\n\t\tthis.$cal.fullCalendar(this.cal_options);\n\t\tthis.set_css();\n\t},\n\tsetup_view_mode_button: function(defaults) {\n\t\tvar me = this;\n\t\t$(me.footnote_area).find('.btn-weekend').detach();\n\t\tlet btnTitle = (defaults.weekends) ? __('Hide Weekends') : __('Show Weekends');\n\t\tconst btn = `<button class=\"btn btn-default btn-xs btn-weekend\">${btnTitle}</button>`;\n\t\tme.footnote_area.append(btn);\n\t},\n\tset_localStorage_option: function(option, value) {\n\t\tlocalStorage.removeItem(option);\n\t\tlocalStorage.setItem(option, value);\n\t},\n\tbind: function() {\n\t\tconst me = this;\n\t\tlet btn_group = me.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.on(\"click\", \".btn\", function() {\n\t\t\tlet value = ($(this).hasClass('fc-agendaWeek-button')) ? 'agendaWeek' : (($(this).hasClass('fc-agendaDay-button')) ? 'agendaDay' : 'month');\n\t\t\tme.set_localStorage_option(\"cal_defaultView\", value);\n\t\t});\n\n\t\tme.$wrapper.on(\"click\", \".btn-weekend\", function() {\n\t\t\tme.cal_options.weekends = !me.cal_options.weekends;\n\t\t\tme.$cal.fullCalendar('option', 'weekends', me.cal_options.weekends);\n\t\t\tme.set_localStorage_option(\"cal_weekends\", me.cal_options.weekends);\n\t\t\tme.set_css();\n\t\t\tme.setup_view_mode_button(me.cal_options);\n\t\t});\n\t},\n\tset_css: function() {\n\t\t// flatify buttons\n\t\tthis.$wrapper.find(\"button.fc-state-default\")\n\t\t\t.removeClass(\"fc-state-default\")\n\t\t\t.addClass(\"btn btn-default\");\n\n\t\tthis.$wrapper\n\t\t\t.find('.fc-month-button, .fc-agendaWeek-button, .fc-agendaDay-button')\n\t\t\t.wrapAll('<div class=\"btn-group\" />');\n\n\t\tthis.$wrapper.find('.fc-prev-button span')\n\t\t\t.attr('class', '').html(frappe.utils.icon('left'));\n\t\tthis.$wrapper.find('.fc-next-button span')\n\t\t\t.attr('class', '').html(frappe.utils.icon('right'));\n\n\t\tthis.$wrapper.find('.fc-today-button')\n\t\t\t.prepend(frappe.utils.icon('today'));\n\n\t\tthis.$wrapper.find('.fc-day-number').wrap('<div class=\"fc-day\"></div>');\n\n\t\tvar btn_group = this.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.find(\".fc-state-active\").addClass(\"active\");\n\n\t\tbtn_group.find(\".btn\").on(\"click\", function() {\n\t\t\tbtn_group.find(\".btn\").removeClass(\"active\");\n\t\t\t$(this).addClass(\"active\");\n\t\t});\n\t},\n\tfield_map: {\n\t\t\"id\": \"name\",\n\t\t\"start\": \"start\",\n\t\t\"end\": \"end\",\n\t\t\"allDay\": \"all_day\",\n\t},\n\tcolor_map: {\n\t\t\"danger\": \"red\",\n\t\t\"success\": \"green\",\n\t\t\"warning\": \"orange\",\n\t\t\"default\": \"blue\"\n\t},\n\tget_system_datetime: function(date) {\n\t\tdate._offset = (moment(date).tz(frappe.sys_defaults.time_zone)._offset);\n\t\treturn frappe.datetime.convert_to_system_tz(date);\n\t},\n\tsetup_options: function(defaults) {\n\t\tvar me = this;\n\t\tdefaults.meridiem = 'false';\n\t\tthis.cal_options = {\n\t\t\tlocale: frappe.boot.user.language || \"en\",\n\t\t\theader: {\n\t\t\t\tleft: 'prev, title, next',\n\t\t\t\tright: 'today, month, agendaWeek, agendaDay'\n\t\t\t},\n\t\t\teditable: true,\n\t\t\tselectable: true,\n\t\t\tselectHelper: true,\n\t\t\tforceEventDuration: true,\n\t\t\tdisplayEventTime: true,\n\t\t\tdefaultView: defaults.defaultView,\n\t\t\tweekends: defaults.weekends,\n\t\t\tnowIndicator: true,\n\t\t\tevents: function(start, end, timezone, callback) {\n\t\t\t\treturn frappe.call({\n\t\t\t\t\tmethod: me.get_events_method || \"frappe.desk.calendar.get_events\",\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\targs: me.get_args(start, end),\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tvar events = r.message || [];\n\t\t\t\t\t\tevents = me.prepare_events(events);\n\t\t\t\t\t\tcallback(events);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tdisplayEventEnd: true,\n\t\t\teventRender: function(event, element) {\n\t\t\t\telement.attr('title', event.tooltip);\n\t\t\t},\n\t\t\teventClick: function(event) {\n\t\t\t\t// edit event description or delete\n\t\t\t\tvar doctype = event.doctype || me.doctype;\n\t\t\t\tif(frappe.model.can_read(doctype)) {\n\t\t\t\t\tfrappe.set_route(\"Form\", doctype, event.name);\n\t\t\t\t}\n\t\t\t},\n\t\t\teventDrop: function(event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\teventResize: function(event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\tselect: function(startDate, endDate, jsEvent, view) {\n\t\t\t\tif (view.name===\"month\" && (endDate - startDate)===86400000) {\n\t\t\t\t\t// detect single day click in month view\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar event = frappe.model.get_new_doc(me.doctype);\n\n\t\t\t\tevent[me.field_map.start] = me.get_system_datetime(startDate);\n\n\t\t\t\tif(me.field_map.end)\n\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(endDate);\n\n\t\t\t\tif(me.field_map.allDay) {\n\t\t\t\t\tvar all_day = (startDate._ambigTime && endDate._ambigTime) ? 1 : 0;\n\n\t\t\t\t\tevent[me.field_map.allDay] = all_day;\n\n\t\t\t\t\tif (all_day)\n\t\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(moment(endDate).subtract(1, \"s\"));\n\t\t\t\t}\n\n\t\t\t\tfrappe.set_route(\"Form\", me.doctype, event.name);\n\t\t\t},\n\t\t\tdayClick: function(date, jsEvent, view) {\n\t\t\t\tif(view.name === 'month') {\n\t\t\t\t\tconst $date_cell = $('td[data-date=' + date.format('YYYY-MM-DD') + \"]\");\n\n\t\t\t\t\tif($date_cell.hasClass('date-clicked')) {\n\t\t\t\t\t\tme.$cal.fullCalendar('changeView', 'agendaDay');\n\t\t\t\t\t\tme.$cal.fullCalendar('gotoDate', date);\n\t\t\t\t\t\tme.$wrapper.find('.date-clicked').removeClass('date-clicked');\n\n\t\t\t\t\t\t// update \"active view\" btn\n\t\t\t\t\t\tme.$wrapper.find('.fc-month-button').removeClass('active');\n\t\t\t\t\t\tme.$wrapper.find('.fc-agendaDay-button').addClass('active');\n\t\t\t\t\t}\n\n\t\t\t\t\tme.$wrapper.find('.date-clicked').removeClass('date-clicked');\n\t\t\t\t\t$date_cell.addClass('date-clicked');\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tif(this.options) {\n\t\t\t$.extend(this.cal_options, this.options);\n\t\t}\n\t},\n\tget_args: function(start, end) {\n\t\tvar args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tstart: this.get_system_datetime(start),\n\t\t\tend: this.get_system_datetime(end),\n\t\t\tfields: this.fields,\n\t\t\tfilters: this.list_view.filter_area.get(),\n\t\t\tfield_map: this.field_map\n\t\t};\n\t\treturn args;\n\t},\n\trefresh: function() {\n\t\tthis.$cal.fullCalendar('refetchEvents');\n\t},\n\tprepare_events: function(events) {\n\t\tvar me = this;\n\n\t\treturn (events || []).map(d => {\n\t\t\td.id = d.name;\n\t\t\td.editable = frappe.model.can_write(d.doctype || me.doctype);\n\n\t\t\t// do not allow submitted/cancelled events to be moved / extended\n\t\t\tif(d.docstatus && d.docstatus > 0) {\n\t\t\t\td.editable = false;\n\t\t\t}\n\n\t\t\t$.each(me.field_map, function(target, source) {\n\t\t\t\td[target] = d[source];\n\t\t\t});\n\n\t\t\tif(!me.field_map.allDay)\n\t\t\t\td.allDay = 1;\n\n\t\t\t// convert to user tz\n\t\t\td.start = frappe.datetime.convert_to_user_tz(d.start);\n\t\t\td.end = frappe.datetime.convert_to_user_tz(d.end);\n\n\t\t\t// show event on single day if start or end date is invalid\n\t\t\tif (!frappe.datetime.validate(d.start) && d.end) {\n\t\t\t\td.start = frappe.datetime.add_days(d.end, -1);\n\t\t\t}\n\n\t\t\tif (d.start && !frappe.datetime.validate(d.end)) {\n\t\t\t\td.end = frappe.datetime.add_days(d.start, 1);\n\t\t\t}\n\n\t\t\tme.fix_end_date_for_event_render(d);\n\t\t\tme.prepare_colors(d);\n\n\t\t\td.title = frappe.utils.html2text(d.title);\n\n\t\t\treturn d;\n\t\t});\n\t},\n\tprepare_colors: function(d) {\n\t\tlet color, color_name;\n\t\tif(this.get_css_class) {\n\t\t\tcolor_name = this.color_map[this.get_css_class(d)] || 'blue';\n\n\t\t\tif (color_name.startsWith(\"#\")) {\n\t\t\t\tcolor_name = frappe.ui.color.validate_hex(color_name) ?\n\t\t\t\t\tcolor_name : 'blue';\n\t\t\t}\n\n\t\t\td.backgroundColor = frappe.ui.color.get(color_name, 'extra-light');\n\t\t\td.textColor = frappe.ui.color.get(color_name, 'dark');\n\t\t} else {\n\t\t\tcolor = d.color;\n\t\t\tif (!frappe.ui.color.validate_hex(color) || !color) {\n\t\t\t\tcolor = frappe.ui.color.get('blue', 'extra-light');\n\t\t\t}\n\t\t\td.backgroundColor = color;\n\t\t\td.textColor = frappe.ui.color.get_contrast_color(color);\n\t\t}\n\t\treturn d;\n\t},\n\tupdate_event: function(event, revertFunc) {\n\t\tvar me = this;\n\t\tfrappe.model.remove_from_locals(me.doctype, event.name);\n\t\treturn frappe.call({\n\t\t\tmethod: me.update_event_method || \"frappe.desk.calendar.update_event\",\n\t\t\targs: me.get_update_args(event),\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tfrappe.show_alert(__(\"Unable to update event\"));\n\t\t\t\t\trevertFunc();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function() {\n\t\t\t\trevertFunc();\n\t\t\t}\n\t\t});\n\t},\n\tget_update_args: function(event) {\n\t\tvar me = this;\n\t\tvar args = {\n\t\t\tname: event[this.field_map.id]\n\t\t};\n\n\t\targs[this.field_map.start] = me.get_system_datetime(event.start);\n\n\t\tif(this.field_map.allDay)\n\t\t\targs[this.field_map.allDay] = (event.start._ambigTime && event.end._ambigTime) ? 1 : 0;\n\n\t\tif(this.field_map.end) {\n\t\t\tif (!event.end) {\n\t\t\t\tevent.end = event.start.add(1, \"hour\");\n\t\t\t}\n\n\t\t\targs[this.field_map.end] = me.get_system_datetime(event.end);\n\n\t\t\tif (args[this.field_map.allDay]) {\n\t\t\t\targs[this.field_map.end] = me.get_system_datetime(moment(event.end).subtract(1, \"s\"));\n\t\t\t}\n\t\t}\n\n\t\targs.doctype = event.doctype || this.doctype;\n\n\t\treturn { args: args, field_map: this.field_map };\n\t},\n\n\tfix_end_date_for_event_render: function(event) {\n\t\tif (event.allDay) {\n\t\t\t// We use inclusive end dates. This workaround fixes the rendering of events\n\t\t\tevent.start = event.start ? $.fullCalendar.moment(event.start).stripTime() : null;\n\t\t\tevent.end = event.end ? $.fullCalendar.moment(event.end).add(1, \"day\").stripTime() : null;\n\t\t}\n\t}\n});\n","frappe.provide('frappe.views');\n\nfrappe.views.DashboardView = class DashboardView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Dashboard';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = __('{0} Dashboard', [__(this.doctype)]);\n\t\t\t\tthis.dashboard_settings = frappe.get_user_settings(this.doctype)['dashboard_settings'] || null;\n\t\t\t});\n\t}\n\n\trender() {\n\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_filters = true;\n\t\tthis.hide_sort_selector = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.chart_group || this.number_card_group) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup_dashboard_page();\n\t\tthis.setup_dashboard_customization();\n\t\tthis.make_dashboard();\n\t}\n\n\tsetup_dashboard_customization() {\n\t\tthis.page.add_menu_item(__('Customize Dashboard'), () => this.customize());\n\t\tthis.page.add_menu_item(__('Reset Dashboard Customizations'), () => this.reset_dashboard_customization());\n\t\tthis.add_customization_buttons();\n\t}\n\n\tsetup_dashboard_page() {\n\t\tconst chart_wrapper_html = `<div class=\"dashboard-view\"></div>`;\n\n\t\tthis.$frappe_list.html(chart_wrapper_html);\n\t\tthis.page.clear_secondary_action();\n\t\tthis.$dashboard_page = this.$page.find('.layout-main-section-wrapper').addClass('dashboard-page');\n\t\tthis.page.main.removeClass('frappe-card');\n\n\t\tthis.$dashboard_wrapper = this.$page.find('.dashboard-view');\n\t\tthis.$chart_header = this.$page.find('.dashboard-header');\n\n\t\tfrappe.utils.bind_actions_with_object(this.$dashboard_page, this);\n\t}\n\n\tadd_customization_buttons() {\n\t\tthis.save_customizations_button = this.page.add_button(\n\t\t\t__(\"Save Customizations\"),\n\t\t\t() => {\n\t\t\t\tthis.save_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t},\n\t\t\t{btn_class: 'btn-primary'}\n\t\t);\n\n\t\tthis.discard_customizations_button = this.page.add_button(\n\t\t\t__(\"Discard\"),\n\t\t\t() => {\n\t\t\t\tthis.discard_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t}\n\t\t);\n\n\t\tthis.toggle_customization_buttons(false);\n\t}\n\n\tset_primary_action() {\n\t\t// Don't render Add doc button for dashboard view\n\t}\n\n\ttoggle_customization_buttons(show) {\n\t\tthis.save_customizations_button.toggle(show);\n\t\tthis.discard_customizations_button.toggle(show);\n\t}\n\n\tmake_dashboard() {\n\t\tif (this.dashboard_settings) {\n\t\t\tthis.charts = this.dashboard_settings.charts;\n\t\t\tthis.number_cards = this.dashboard_settings.number_cards;\n\t\t\tthis.render_dashboard();\n\t\t} else {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => this.fetch_dashboard_items(\n\t\t\t\t\t'Dashboard Chart',\n\t\t\t\t\t{\n\t\t\t\t\t\tchart_type: ['in', ['Count', 'Sum', 'Group By']],\n\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t},\n\t\t\t\t\t'charts'\n\t\t\t\t),\n\t\t\t\t() => this.fetch_dashboard_items('Number Card',\n\t\t\t\t\t{\n\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t},\n\t\t\t\t\t'number_cards'\n\t\t\t\t),\n\t\t\t\t() => this.render_dashboard()\n\t\t\t]);\n\t\t}\n\t}\n\n\trender_dashboard() {\n\t\tthis.$dashboard_wrapper.empty();\n\n\t\tfrappe.dashboard_utils.get_dashboard_settings().then(settings => {\n\t\t\tthis.dashboard_chart_settings = settings.chart_config ? JSON.parse(settings.chart_config) : {};\n\t\t\tthis.charts.map(chart => {\n\t\t\t\tchart.label = chart.chart_name;\n\t\t\t\tchart.chart_settings = this.dashboard_chart_settings[chart.chart_name] || {};\n\t\t\t});\n\t\t\tthis.render_dashboard_charts();\n\t\t});\n\t\tthis.render_number_cards();\n\n\t\tif (!this.charts.length && !this.number_cards.length) {\n\t\t\tthis.render_empty_state();\n\t\t}\n\t}\n\n\tfetch_dashboard_items(doctype, filters, obj_name) {\n\t\treturn frappe.db.get_list(doctype, {\n\t\t\tfilters: filters,\n\t\t\tfields: ['*']\n\t\t}).then(items => {\n\t\t\tthis[obj_name] = items;\n\t\t});\n\t}\n\n\trender_number_cards() {\n\t\tthis.number_card_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"number_card\",\n\t\t\tcolumns: 3,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t},\n\t\t\tdefault_values: {doctype: this.doctype},\n\t\t\twidgets: this.number_cards || [],\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.number_card_group.customize();\n\t}\n\n\trender_dashboard_charts() {\n\t\tthis.chart_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"chart\",\n\t\t\tcolumns: 2,\n\t\t\theight: 240,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t\tallow_resize: true,\n\t\t\t},\n\t\t\tcustom_dialog: () => this.show_add_chart_dialog(),\n\t\t\twidgets: this.charts,\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.chart_group.customize();\n\t\tthis.chart_group.container.find('.widget-group-head').hide();\n\t}\n\n\trender_empty_state() {\n\t\tconst no_result_message_html =\n\t\t\t`<p>${__(\"You haven't added any Dashboard Charts or Number Cards yet.\")}\n\t\t\t<br>${__(\"Click On Customize to add your first widget\")}</p>`;\n\n\t\tconst customize_button =\n\t\t\t`<p><button class=\"btn btn-primary btn-sm\" data-action=\"customize\">\n\t\t\t\t${__('Customize')}\n\t\t\t</button></p>`;\n\n\t\tconst empty_state_image = '/assets/frappe/images/ui-states/list-empty-state.svg';\n\n\t\tconst empty_state_html = `<div class=\"msg-box no-border empty-dashboard\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t${no_result_message_html}\n\t\t\t${customize_button}\n\t\t</div>`;\n\n\t\tthis.$dashboard_wrapper.append(empty_state_html);\n\t\tthis.$empty_state = this.$dashboard_wrapper.find('.empty-dashboard');\n\t}\n\n\tcustomize() {\n\t\tif (this.in_customize_mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.page.standard_actions.hide();\n\n\t\tif (this.$empty_state) {\n\t\t\tthis.$empty_state.remove();\n\t\t}\n\n\t\tthis.toggle_customize(true);\n\t\tthis.in_customize_mode = true;\n\t\tthis.chart_group.customize();\n\t\tthis.number_card_group.customize();\n\t}\n\n\tget_widgets_to_save(widget_group) {\n\t\tconst config = widget_group.get_widget_config();\n\t\tlet widgets = [];\n\t\tconfig.order.map(widget_name => {\n\t\t\twidgets.push(config.widgets[widget_name]);\n\t\t});\n\t\treturn this.remove_duplicates(widgets);\n\t}\n\n\tsave_dashboard_customization() {\n\t\tthis.toggle_customize(false);\n\n\t\tconst charts = this.get_widgets_to_save(this.chart_group);\n\t\tconst number_cards = this.get_widgets_to_save(this.number_card_group);\n\n\t\tthis.dashboard_settings = {\n\t\t\tcharts: charts,\n\t\t\tnumber_cards: number_cards,\n\t\t};\n\n\t\tfrappe.model.user_settings.save(this.doctype, 'dashboard_settings', this.dashboard_settings);\n\t\tthis.make_dashboard();\n\t}\n\n\tdiscard_dashboard_customization() {\n\t\tthis.dashboard_settings = frappe.get_user_settings(this.doctype)['dashboard_settings'] || null;\n\t\tthis.toggle_customize(false);\n\t\tthis.render_dashboard();\n\t}\n\n\treset_dashboard_customization() {\n\t\tfrappe.confirm(__(\"Are you sure you want to reset all customizations?\"), () => {\n\t\t\tthis.dashboard_settings = null;\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype, 'dashboard_settings', this.dashboard_settings\n\t\t\t).then(() => this.make_dashboard());\n\n\t\t\tthis.toggle_customize(false);\n\t\t});\n\t}\n\n\ttoggle_customize(show) {\n\t\tthis.toggle_customization_buttons(show);\n\t\tthis.in_customize_mode = show;\n\t}\n\n\tshow_add_chart_dialog() {\n\t\tlet fields = this.get_field_options();\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add a {0} Chart\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'new_or_existing',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tlabel: 'Choose an existing chart or create a new chart',\n\t\t\t\t\toptions: ['New Chart', 'Existing Chart'],\n\t\t\t\t\treqd: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart',\n\t\t\t\t\tfieldname: 'chart',\n\t\t\t\t\tfieldtype: 'Link',\n\t\t\t\t\tget_query: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'query': 'frappe.desk.doctype.dashboard_chart.dashboard_chart.get_charts_for_user',\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\toptions: 'Dashboard Chart',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"Existing Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Label',\n\t\t\t\t\tfieldname: 'label',\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Type',\n\t\t\t\t\tfieldname: 'chart_type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Time Series', 'Group By'],\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Config',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Function',\n\t\t\t\t\tfieldname: 'chart_function',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Count', 'Sum', 'Average'],\n\t\t\t\t\tdefault: 'Count',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Timespan',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'timespan',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: ['Last Year', 'Last Quarter', 'Last Month', 'Last Week'],\n\t\t\t\t\tdefault: 'Last Year',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Value Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'based_on',\n\t\t\t\t\toptions: fields.value_fields,\n\t\t\t\t\tdepends_on: 'eval: doc.chart_function==\"Sum\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Series Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'based_on',\n\t\t\t\t\toptions: fields.date_fields,\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.chart_type == \"Time Series\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Interval',\n\t\t\t\t\tfieldname: 'time_interval',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: ['Yearly', 'Quarterly', 'Monthly', 'Weekly', 'Daily'],\n\t\t\t\t\tdefault: 'Monthly'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Config',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Group By\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Group By Type',\n\t\t\t\t\tfieldname: 'group_by_type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Count', 'Sum', 'Average'],\n\t\t\t\t\tdefault: 'Count',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Aggregate Function Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'aggregate_function_based_on',\n\t\t\t\t\toptions: fields.aggregate_function_fields,\n\t\t\t\t\tdepends_on: 'eval: [\"Sum\", \"Avergage\"].includes(doc.group_by_type)',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Group By Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'group_by_based_on',\n\t\t\t\t\toptions: fields.group_by_fields,\n\t\t\t\t\tdefault: 'Last Year',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Number of Groups',\n\t\t\t\t\tfieldtype: 'Int',\n\t\t\t\t\tfieldname: 'number_of_groups',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_3',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Type',\n\t\t\t\t\tfieldname: 'type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Line', 'Bar', 'Percentage', 'Pie'],\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Color',\n\t\t\t\t\tfieldname: 'color',\n\t\t\t\t\tfieldtype: 'Color',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __('Add'),\n\t\t\tprimary_action: (values) => {\n\t\t\t\tlet chart = values;\n\t\t\t\tif (chart.new_or_existing == 'New Chart') {\n\t\t\t\t\tchart.chart_name = chart.label;\n\t\t\t\t\tchart.chart_type = chart.chart_type == 'Time Series' ? chart.chart_function : chart.chart_type;\n\t\t\t\t\tchart.document_type = this.doctype;\n\t\t\t\t\tchart.filters_json = '[]';\n\t\t\t\t\tfrappe.xcall('frappe.desk.doctype.dashboard_chart.dashboard_chart.create_dashboard_chart', {'args': chart}).then((doc)=> {\n\t\t\t\t\t\tthis.chart_group.new_widget.on_create({'chart_name': doc.chart_name, 'name': doc.chart_name, 'label': chart.label});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.chart_group.new_widget.on_create({'chart_name': chart.chart, 'label': chart.chart, 'name': chart.chart});\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t}\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_field_options() {\n\t\tlet date_fields = [\n\t\t\t{label: __('Created On'), value: 'creation'},\n\t\t\t{label: __('Last Modified On'), value: 'modified'}\n\t\t];\n\t\tlet value_fields = [];\n\t\tlet group_by_fields = [];\n\t\tlet aggregate_function_fields = [];\n\n\t\tfrappe.get_meta(this.doctype).fields.map(df => {\n\t\t\tif (['Date', 'Datetime'].includes(df.fieldtype)) {\n\t\t\t\tdate_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t\tif (frappe.model.numeric_fieldtypes.includes(df.fieldtype)) {\n\t\t\t\tif (df.fieldtype == 'Currency') {\n\t\t\t\t\tif (!df.options || df.options !== 'Company:company:default_currency') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue_fields.push({label: df.label, value: df.fieldname});\n\t\t\t\taggregate_function_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t\tif (['Link', 'Select'].includes(df.fieldtype)) {\n\t\t\t\tgroup_by_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tdate_fields: date_fields,\n\t\t\tvalue_fields: value_fields,\n\t\t\tgroup_by_fields: group_by_fields,\n\t\t\taggregate_function_fields: aggregate_function_fields\n\t\t};\n\t}\n\n\tremove_duplicates(items) {\n\t\treturn items.filter((item, index) => items.indexOf(item) === index);\n\t}\n\n};\n","/**\n * frappe.views.ImageView\n */\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ImageView = class ImageView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Image\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = this.page_title + \" \" + __(\"Images\");\n\t\t});\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = [\n\t\t\t\"name\",\n\t\t\t...this.get_fields_in_list_view().map(el => el.fieldname),\n\t\t\tthis.meta.title_field,\n\t\t\tthis.meta.image_field,\n\t\t\t\"_liked_by\"\n\t\t];\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.items = this.data.map(d => {\n\t\t\t// absolute url if cordova, else relative\n\t\t\td._image_url = this.get_image_url(d);\n\t\t\treturn d;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.get_attached_images().then(() => {\n\t\t\tthis.render_image_view();\n\n\t\t\tif (!this.gallery) {\n\t\t\t\tthis.setup_gallery();\n\t\t\t} else {\n\t\t\t\tthis.gallery.prepare_pswp_items(this.items, this.images_map);\n\t\t\t}\n\t\t});\n\t}\n\n\trender_image_view() {\n\t\tvar html = this.items.map(this.item_html.bind(this)).join(\"\");\n\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"image-view\");\n\n\t\tthis.$result.html(`\n\t\t\t<div class=\"image-view-container\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.render_count();\n\t}\n\n\titem_details_html(item) {\n\t\t// TODO: Image view field in DocType\n\t\tlet info_fields =\n\t\t\tthis.get_fields_in_list_view().map(el => el.fieldname) || [];\n\t\tconst title_field = this.meta.title_field || \"name\";\n\t\tinfo_fields = info_fields.filter(field => field !== title_field);\n\t\tlet info_html = `<div><ul class=\"list-unstyled image-view-info\">`;\n\t\tlet set = false;\n\t\tinfo_fields.forEach((field, index) => {\n\t\t\tif (item[field] && !set) {\n\t\t\t\tif (index == 0) info_html += `<li>${item[field]}</li>`;\n\t\t\t\telse info_html += `<li class=\"text-muted\">${item[field]}</li>`;\n\t\t\t\tset = true;\n\t\t\t}\n\t\t});\n\t\tinfo_html += `</ul></div>`;\n\t\treturn info_html;\n\t}\n\n\titem_html(item) {\n\t\titem._name = encodeURI(item.name);\n\t\tconst encoded_name = item._name;\n\t\tconst title = strip_html(item[this.meta.title_field || \"name\"]);\n\t\tconst escaped_title = frappe.utils.escape_html(title);\n\t\tconst _class = !item._image_url ? \"no-image\" : \"\";\n\t\tconst _html = item._image_url\n\t\t\t? `<img data-name=\"${encoded_name}\" src=\"${item._image_url}\" alt=\"${title}\">`\n\t\t\t: `<span class=\"placeholder-text\">\n\t\t\t\t${frappe.get_abbr(title)}\n\t\t\t</span>`;\n\n\t\tlet details = this.item_details_html(item);\n\n\t\tconst expand_button_html = item._image_url\n\t\t\t? `<div class=\"zoom-view\" data-name=\"${encoded_name}\">\n\t\t\t\t${frappe.utils.icon(\"expand\", \"xs\")}\n\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\treturn `\n\t\t\t<div class=\"image-view-item ellipsis\">\n\t\t\t\t<div class=\"image-view-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\"\n\t\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${escape(item.name)}\">\n\t\t\t\t\t\t${this.get_like_html(item)}\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-body ${_class}\">\n\t\t\t\t\t<a data-name=\"${encoded_name}\"\n\t\t\t\t\t\ttitle=\"${encoded_name}\"\n\t\t\t\t\t\thref=\"${this.get_form_link(item)}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"image-field\"\n\t\t\t\t\t\t\tdata-name=\"${encoded_name}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t${_html}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t${expand_button_html}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-footer\">\n\t\t\t\t\t<div class=\"image-title\">\n\t\t\t\t\t\t<span class=\"ellipsis\" title=\"${escaped_title}\">\n\t\t\t\t\t\t\t<a class=\"ellipsis\" href=\"${this.get_form_link(item)}\"\n\t\t\t\t\t\t\t\ttitle=\"${escaped_title}\" data-doctype=\"${this.doctype}\" data-name=\"${item.name}\">\n\t\t\t\t\t\t\t\t${title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${details}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_attached_images() {\n\t\treturn frappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.core.doctype.file.file.get_attached_images\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tnames: this.items.map(i => i.name)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(r => {\n\t\t\t\tthis.images_map = Object.assign(\n\t\t\t\t\tthis.images_map || {},\n\t\t\t\t\tr.message\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tget_header_html() {\n\t\t// return this.get_header_html_skeleton(`\n\t\t// \t<div class=\"list-image-header\">\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"Select All\">\n\t\t// \t\t\t<div>${__(this.doctype)} &nbsp;</div>\n\t\t// \t\t\t(<span class=\"text-muted list-count\"></span>)\n\t\t// \t\t</div>\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<div class=\"level-item list-liked-by-me\">\n\t\t// \t\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t// \t\t\t</div>\n\t\t// \t\t\t<div>${__('Liked')}</div>\n\t\t// \t\t</div>\n\t\t// \t</div>\n\t\t// `);\n\t}\n\n\tsetup_gallery() {\n\t\tvar me = this;\n\t\tthis.gallery = new frappe.views.GalleryView({\n\t\t\tdoctype: this.doctype,\n\t\t\titems: this.items,\n\t\t\twrapper: this.$result,\n\t\t\timages_map: this.images_map\n\t\t});\n\t\tthis.$result.on(\"click\", \".zoom-view\", function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tvar name = $(this).data().name;\n\t\t\tname = decodeURIComponent(name);\n\t\t\tme.gallery.show(name);\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nfrappe.views.GalleryView = Class.extend({\n\tinit: function(opts) {\n\t\t$.extend(this, opts);\n\t\tvar me = this;\n\n\t\tthis.lib_ready = this.load_lib();\n\t\tthis.lib_ready.then(function() {\n\t\t\tme.prepare();\n\t\t});\n\t},\n\tprepare: function() {\n\t\t// keep only one pswp dom element\n\t\tthis.pswp_root = $(\"body > .pswp\");\n\t\tif (this.pswp_root.length === 0) {\n\t\t\tvar pswp = frappe.render_template(\"photoswipe_dom\");\n\t\t\tthis.pswp_root = $(pswp).appendTo(\"body\");\n\t\t}\n\t},\n\tprepare_pswp_items: function(_items, _images_map) {\n\t\tvar me = this;\n\n\t\tif (_items) {\n\t\t\t// passed when more button clicked\n\t\t\tthis.items = this.items.concat(_items);\n\t\t\tthis.images_map = _images_map;\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst items = this.items.map(function(i) {\n\t\t\t\tconst query = 'img[data-name=\"' + i._name + '\"]';\n\t\t\t\tlet el = me.wrapper.find(query).get(0);\n\n\t\t\t\tlet width, height;\n\t\t\t\tif (el) {\n\t\t\t\t\twidth = el.naturalWidth;\n\t\t\t\t\theight = el.naturalHeight;\n\t\t\t\t}\n\n\t\t\t\tif (!el) {\n\t\t\t\t\tel = me.wrapper\n\t\t\t\t\t\t.find('.image-field[data-name=\"' + i._name + '\"]')\n\t\t\t\t\t\t.get(0);\n\t\t\t\t\twidth = el.getBoundingClientRect().width;\n\t\t\t\t\theight = el.getBoundingClientRect().height;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsrc: i._image_url,\n\t\t\t\t\tmsrc: i._image_url,\n\t\t\t\t\tname: i.name,\n\t\t\t\t\tw: width,\n\t\t\t\t\th: height,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.pswp_items = items;\n\t\t\tresolve();\n\t\t});\n\t},\n\tshow: function(docname) {\n\t\tthis.lib_ready\n\t\t\t.then(() => this.prepare_pswp_items())\n\t\t\t.then(() => this._show(docname));\n\t},\n\t_show: function(docname) {\n\t\tconst me = this;\n\t\tconst items = this.pswp_items;\n\t\tconst item_index = items.findIndex(item => item.name === docname);\n\n\t\tvar options = {\n\t\t\tindex: item_index,\n\t\t\tgetThumbBoundsFn: function(index) {\n\t\t\t\tconst query = 'img[data-name=\"' + items[index]._name + '\"]';\n\t\t\t\tlet thumbnail = me.wrapper.find(query).get(0);\n\n\t\t\t\tif (!thumbnail) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pageYScroll =\n\t\t\t\t\t\twindow.pageYOffset ||\n\t\t\t\t\t\tdocument.documentElement.scrollTop,\n\t\t\t\t\trect = thumbnail.getBoundingClientRect();\n\n\t\t\t\treturn {\n\t\t\t\t\tx: rect.left,\n\t\t\t\t\ty: rect.top + pageYScroll,\n\t\t\t\t\tw: rect.width\n\t\t\t\t};\n\t\t\t},\n\t\t\thistory: false,\n\t\t\tshareEl: false,\n\t\t\tshowHideOpacity: true\n\t\t};\n\n\t\t// init\n\t\tthis.pswp = new PhotoSwipe(\n\t\t\tthis.pswp_root.get(0),\n\t\t\tPhotoSwipeUI_Default,\n\t\t\titems,\n\t\t\toptions\n\t\t);\n\t\tthis.browse_images();\n\t\tthis.pswp.init();\n\t},\n\tbrowse_images: function() {\n\t\tconst $more_items = this.pswp_root.find(\".pswp__more-items\");\n\t\tconst images_map = this.images_map;\n\t\tlet last_hide_timeout = null;\n\n\t\tthis.pswp.listen(\"afterChange\", function() {\n\t\t\tconst images = images_map[this.currItem.name];\n\t\t\tif (!images || images.length === 1) {\n\t\t\t\t$more_items.html(\"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thide_more_items_after_2s();\n\t\t\tconst html = images.map(img_html).join(\"\");\n\t\t\t$more_items.html(html);\n\t\t});\n\n\t\tthis.pswp.listen(\"beforeChange\", hide_more_items);\n\t\tthis.pswp.listen(\"initialZoomOut\", hide_more_items);\n\t\tthis.pswp.listen(\"destroy\", () => {\n\t\t\t$(document).off(\"mousemove\", hide_more_items_after_2s);\n\t\t});\n\n\t\t// Replace current image on click\n\t\t$more_items.on(\"click\", \".pswp__more-item\", e => {\n\t\t\tconst img_el = e.target;\n\t\t\tconst index = this.pswp.items.findIndex(\n\t\t\t\ti => i.name === this.pswp.currItem.name\n\t\t\t);\n\n\t\t\tthis.pswp.goTo(index);\n\t\t\tthis.pswp.items.splice(index, 1, {\n\t\t\t\tsrc: img_el.src,\n\t\t\t\tw: img_el.naturalWidth,\n\t\t\t\th: img_el.naturalHeight,\n\t\t\t\tname: this.pswp.currItem.name\n\t\t\t});\n\t\t\tthis.pswp.invalidateCurrItems();\n\t\t\tthis.pswp.updateSize(true);\n\t\t});\n\n\t\t// hide more-images 2s after mousemove\n\t\t$(document).on(\"mousemove\", hide_more_items_after_2s);\n\n\t\tfunction hide_more_items_after_2s() {\n\t\t\tclearTimeout(last_hide_timeout);\n\t\t\tshow_more_items();\n\t\t\tlast_hide_timeout = setTimeout(hide_more_items, 2000);\n\t\t}\n\n\t\tfunction show_more_items() {\n\t\t\t$more_items.show();\n\t\t}\n\n\t\tfunction hide_more_items() {\n\t\t\t$more_items.hide();\n\t\t}\n\n\t\tfunction img_html(src) {\n\t\t\treturn `<div class=\"pswp__more-item\">\n\t\t\t\t<img src=\"${src}\">\n\t\t\t</div>`;\n\t\t}\n\t},\n\tload_lib: function() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar asset_dir = \"assets/frappe/js/lib/photoswipe/\";\n\t\t\tfrappe.require(\n\t\t\t\t[\n\t\t\t\t\tasset_dir + \"photoswipe.css\",\n\t\t\t\t\tasset_dir + \"default-skin.css\",\n\t\t\t\t\tasset_dir + \"photoswipe.js\",\n\t\t\t\t\tasset_dir + \"photoswipe-ui-default.js\"\n\t\t\t\t],\n\t\t\t\tresolve\n\t\t\t);\n\t\t});\n\t}\n});\n","/**\n * frappe.views.MapView\n */\nfrappe.provide('frappe.utils.utils');\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.MapView = class MapView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Map';\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\t\tthis.page_title = __('{0} Map', [this.page_title]);\n\t}\n\n\tsetup_view() {\n\t}\n\n\ton_filter_change() {\n\t\tthis.get_coords();\n\t}\n\n\trender() {\n\t\tthis.get_coords()\n\t\t\t.then(() => {\n\t\t\t\tthis.render_map_view();\n\t\t\t});\n\t\tthis.$paging_area.find('.level-left').append('<div></div>');\n\t}\n\n\trender_map_view() {\n\t\tthis.map_id = frappe.dom.get_unique_id();\n\n\t\tthis.$result.html(`<div id=\"${this.map_id}\" class=\"map-view-container\"></div>`);\n\n\t\tL.Icon.Default.imagePath = '/assets/frappe/images/leaflet/';\n\t\tthis.map = L.map(this.map_id).setView(frappe.utils.map_defaults.center,\n\t\t\tfrappe.utils.map_defaults.zoom);\n\n\t\tL.tileLayer(frappe.utils.map_defaults.tiles,\n\t\t\tfrappe.utils.map_defaults.options).addTo(this.map);\n\n\t\tL.control.scale().addTo(this.map);\n\t\tif (this.coords.features && this.coords.features.length) {\n\t\t\tthis.coords.features.forEach(\n\t\t\t\tcoords => L.geoJSON(coords).bindPopup(coords.properties.name).addTo(this.map)\n\t\t\t);\n\t\t\tlet lastCoords = this.coords.features[0].geometry.coordinates.reverse();\n\t\t\tthis.map.panTo(lastCoords, 8);\n\t\t}\n\t}\n\n\tget_coords() {\n\t\tlet get_coords_method = this.settings && this.settings.get_coords_method || 'frappe.geo.utils.get_coords';\n\n\t\tif (cur_list.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype === 'Geolocation')) {\n\t\t\tthis.type = 'location_field';\n\t\t} else if  (cur_list.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\tcur_list.meta.fields.find(i => i.fieldname === \"longitude\")) {\n\t\t\tthis.type = 'coordinates';\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod: get_coords_method,\n\t\t\targs: {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tfilters: cur_list.filter_area.get(),\n\t\t\t\ttype: this.type\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tthis.coords = r.message;\n\n\t\t});\n\t}\n\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.css\",\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.js\"\n\t\t];\n\t}\n\n\n};\n","frappe.provide('frappe.views');\n\nfrappe.views.KanbanView = class KanbanView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)['Kanban'] || {};\n\t\t\tif (!user_settings.last_kanban_board) {\n\t\t\t\tfrappe.msgprint({\n\t\t\t\t\ttitle: __('Error'),\n\t\t\t\t\tindicator: 'red',\n\t\t\t\t\tmessage: __('Missing parameter Kanban Board Name')\n\t\t\t\t});\n\t\t\t\tfrappe.set_route('List', doctype, 'List');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\troute.push(user_settings.last_kanban_board);\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget view_name() {\n\t\treturn 'Kanban';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.board_name = frappe.get_route()[3];\n\t\t\t\tthis.page_title = __(this.board_name);\n\t\t\t\tthis.card_meta = this.get_card_meta();\n\t\t\t\tthis.page_length = 0;\n\n\t\t\t\tthis.menu_items.push({\n\t\t\t\t\tlabel: __('Save filters'),\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tthis.save_kanban_board_filters();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn this.get_board();\n\t\t\t});\n\t}\n\n\tsetup_paging_area() {\n\t\t// pass\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t}\n\n\tget_board() {\n\t\treturn frappe.db.get_doc('Kanban Board', this.board_name)\n\t\t\t.then(board => {\n\t\t\t\tthis.board = board;\n\t\t\t\tthis.board.filters_array = JSON.parse(this.board.filters || '[]');\n\t\t\t\tthis.filters = this.board.filters_array;\n\t\t\t});\n\t}\n\n\tbefore_refresh() {\n\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_card_layout = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.board.columns.length > 5) {\n\t\t\tthis.page.container.addClass('full-width');\n\t\t}\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tsuper.set_fields();\n\t\tthis._add_field(this.card_meta.title_field);\n\t}\n\n\tbefore_render() {\n\t\tfrappe.model.user_settings.save(this.doctype, 'last_view', this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_kanban_board: this.board_name\n\t\t});\n\t}\n\n\trender_list() {\n\n\t}\n\n\ton_filter_change() {\n\t\tif (JSON.stringify(this.board.filters_array) !== JSON.stringify(this.filter_area.get())) {\n\t\t\tthis.page.set_indicator(__('Not Saved'), 'orange');\n\t\t} else {\n\t\t\tthis.page.clear_indicator();\n\t\t}\n\t}\n\n\tsave_kanban_board_filters() {\n\t\tconst filters = this.filter_area.get();\n\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.desk.doctype.kanban_board.kanban_board.save_filters',\n\t\t\targs: {\n\t\t\t\tboard_name: this.board_name,\n\t\t\t\tfilters: filters\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tif (r.exc) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tindicator: 'red',\n\t\t\t\t\tmessage: __('There was an error saving filters')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfrappe.show_alert({\n\t\t\t\tindicator: 'green',\n\t\t\t\tmessage: __('Filters saved')\n\t\t\t});\n\n\t\t\tthis.board.filters_array = filters;\n\t\t\tthis.on_filter_change();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\tthis.fields.push([this.board.field_name, this.board.reference_doctype]);\n\t\treturn super.get_fields();\n\t}\n\n\trender() {\n\t\tconst board_name = this.board_name;\n\t\tif (this.kanban && board_name === this.kanban.board_name) {\n\t\t\tthis.kanban.update(this.data);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.kanban = new frappe.views.KanbanBoard({\n\t\t\tdoctype: this.doctype,\n\t\t\tboard: this.board,\n\t\t\tboard_name: board_name,\n\t\t\tcards: this.data,\n\t\t\tcard_meta: this.card_meta,\n\t\t\twrapper: this.$result,\n\t\t\tcur_list: this,\n\t\t\tuser_settings: this.view_user_settings\n\t\t});\n\t}\n\n\tget_card_meta() {\n\t\tvar meta = frappe.get_meta(this.doctype);\n\t\tvar doc = frappe.model.get_new_doc(this.doctype);\n\t\tvar title_field = null;\n\t\tvar quick_entry = false;\n\n\t\tif (this.meta.title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, this.meta.title_field);\n\t\t}\n\n\t\tthis.meta.fields.forEach((df) => {\n\t\t\tconst is_valid_field =\n\t\t\t\tin_list(['Data', 'Text', 'Small Text', 'Text Editor'], df.fieldtype)\n\t\t\t\t&& !df.hidden;\n\n\t\t\tif (is_valid_field && !title_field) {\n\t\t\t\t// can be mapped to textarea\n\t\t\t\ttitle_field = df;\n\t\t\t}\n\t\t});\n\n\t\t// quick entry\n\t\tvar mandatory = meta.fields.filter((df) => df.reqd && !doc[df.fieldname]);\n\n\t\tif (mandatory.some(df => frappe.model.table_fields.includes(df.fieldtype)) || mandatory.length > 1) {\n\t\t\tquick_entry = true;\n\t\t}\n\n\t\tif (!title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, 'name');\n\t\t}\n\n\t\treturn {\n\t\t\tquick_entry: quick_entry,\n\t\t\ttitle_field: title_field\n\t\t};\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t'assets/frappe/js/lib/fluxify.min.js',\n\t\t\t'assets/frappe/js/frappe/views/kanban/kanban_board.js'\n\t\t];\n\t}\n};\n\n\nfrappe.views.KanbanView.get_kanbans = function (doctype) {\n\tlet kanbans = [];\n\n\treturn get_kanban_boards()\n\t\t.then((kanban_boards) => {\n\t\t\tif (kanban_boards) {\n\t\t\t\tkanban_boards.forEach(board => {\n\t\t\t\t\tlet route = `/app/${frappe.router.slug(board.reference_doctype)}/view/kanban/${board.name}`;\n\t\t\t\t\tkanbans.push({ name: board.name, route: route });\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn kanbans;\n\t\t});\n\n\tfunction get_kanban_boards() {\n\t\treturn frappe.call('frappe.desk.doctype.kanban_board.kanban_board.get_kanban_boards', { doctype })\n\t\t\t.then(r => r.message);\n\t}\n};\n\n\nfrappe.views.KanbanView.show_kanban_dialog = function (doctype, show_existing) {\n\tlet dialog = null;\n\n\tfrappe.views.KanbanView.get_kanbans(doctype).then(kanbans => {\n\t\tdialog = new_kanban_dialog(kanbans, show_existing);\n\t\tdialog.show();\n\t});\n\n\tfunction make_kanban_board(board_name, field_name, project) {\n\t\treturn frappe.call({\n\t\t\tmethod: 'frappe.desk.doctype.kanban_board.kanban_board.quick_kanban_board',\n\t\t\targs: {\n\t\t\t\tdoctype,\n\t\t\t\tboard_name,\n\t\t\t\tfield_name,\n\t\t\t\tproject\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tvar kb = r.message;\n\t\t\t\tif (kb.filters) {\n\t\t\t\t\tfrappe.provide('frappe.kanban_filters');\n\t\t\t\t\tfrappe.kanban_filters[kb.kanban_board_name] = kb.filters;\n\t\t\t\t}\n\t\t\t\tfrappe.set_route('List', doctype, 'Kanban', kb.kanban_board_name);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction new_kanban_dialog(kanbans, show_existing) {\n\t\tif (dialog) return dialog;\n\n\t\tconst fields = get_fields_for_dialog(kanbans.map(kanban => kanban.name), show_existing);\n\n\t\tlet primary_action_label = __('Save');\n\n\t\tlet primary_action = () => {\n\t\t\tconst values = dialog.get_values();\n\t\t\tif (!values.selected_kanban || values.selected_kanban == 'Create New Board') {\n\t\t\t\tmake_kanban_board(values.board_name, values.field_name, values.project)\n\t\t\t\t\t.then(() => dialog.hide(), (err) => frappe.msgprint(err));\n\t\t\t} else {\n\t\t\t\tfrappe.set_route(kanbans.find(kanban => kanban.name == values.selected_kanban).route);\n\t\t\t}\n\t\t};\n\n\t\tdialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('New Kanban Board'),\n\t\t\tfields,\n\t\t\tprimary_action_label,\n\t\t\tprimary_action\n\t\t});\n\t\treturn dialog;\n\t}\n\n\tfunction get_fields_for_dialog(kanban_options, show_existing = false) {\n\t\tkanban_options.push('Create New Board');\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tfieldname: 'selected_kanban',\n\t\t\t\tlabel: __('Choose Kanban Board'),\n\t\t\t\treqd: 1,\n\t\t\t\tdepends_on: `eval: ${show_existing}`,\n\t\t\t\tmandatory_depends_on: `eval: ${show_existing}`,\n\t\t\t\toptions: kanban_options,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: 'new_kanban_board_sb',\n\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\tdepends_on: `eval: !${show_existing} || doc.selected_kanban == \"Create New Board\"`,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tfieldname: 'board_name',\n\t\t\t\tlabel: __('Kanban Board Name'),\n\t\t\t\tmandatory_depends_on: 'eval: doc.selected_kanban == \"Create New Board\"',\n\t\t\t\tdescription: ['Note', 'ToDo'].includes(doctype) ?\n\t\t\t\t\t__('This Kanban Board will be private') : ''\n\t\t\t}\n\t\t];\n\n\t\tif (doctype === 'Task') {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Link',\n\t\t\t\tfieldname: 'project',\n\t\t\t\tlabel: __('Project'),\n\t\t\t\toptions: 'Project'\n\t\t\t});\n\t\t}\n\n\t\tconst select_fields =\n\t\t\tfrappe.get_meta(doctype).fields\n\t\t\t\t.filter(df => {\n\t\t\t\t\treturn df.fieldtype === 'Select' &&\n\t\t\t\t\t\tdf.fieldname !== 'kanban_column';\n\t\t\t\t});\n\n\t\tif (select_fields.length > 0) {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tfieldname: 'field_name',\n\t\t\t\tlabel: __('Columns based on'),\n\t\t\t\toptions: select_fields.map(df => ({ label: df.label, value: df.fieldname })),\n\t\t\t\tdefault: select_fields[0],\n\t\t\t\tmandatory_depends_on: 'eval: doc.selected_kanban == \"Create New Board\"',\n\t\t\t});\n\t\t} else {\n\t\t\tfields = [{\n\t\t\t\tfieldtype: 'HTML',\n\t\t\t\toptions: `\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p class=\"text-medium\">\n\t\t\t\t\t\t${__('No fields found that can be used as a Kanban Column. Use the Customize Form to add a Custom Field of type \"Select\".')}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<a class=\"btn btn-xs btn-default\" href=\"/app/customize-form?doc_type=${doctype}\">\n\t\t\t\t\t\t\t${__('Customize Form')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t`\n\t\t\t}];\n\t\t}\n\n\t\treturn fields;\n\t}\n};\n","/**\n * frappe.views.InboxView\n */\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.InboxView = class InboxView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (!route[3] && frappe.boot.email_accounts.length) {\n\t\t\tlet email_account;\n\t\t\tif (frappe.boot.email_accounts[0].email_id == \"All Accounts\") {\n\t\t\t\temail_account = \"All Accounts\";\n\t\t\t} else {\n\t\t\t\temail_account = frappe.boot.email_accounts[0].email_account;\n\t\t\t}\n\t\t\tfrappe.set_route(\"List\", \"Communication\", \"Inbox\", email_account);\n\t\t\treturn true;\n\t\t} else if (!route[3] || (route[3] !== \"All Accounts\" && !is_valid(route[3]))) {\n\t\t\tfrappe.throw(__('No email account associated with the User. Please add an account under User > Email Inbox.'));\n\t\t}\n\t\treturn false;\n\n\t\tfunction is_valid(email_account) {\n\t\t\treturn frappe.boot.email_accounts.find(d => d.email_account === email_account);\n\t\t}\n\t}\n\n\tget view_name() {\n\t\treturn 'Inbox';\n\t}\n\n\tshow() {\n\t\tsuper.show();\n\t\t// save email account in user_settings\n\t\tthis.save_view_user_settings({\n\t\t\tlast_email_account: this.current_email_account\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || 'communication_date';\n\t\tthis.sort_order = this.view_user_settings.sort_order || 'desc';\n\n\t\tthis.email_account = frappe.get_route()[3];\n\t\tthis.page_title = this.email_account;\n\t\tthis.filters = this.get_inbox_filters();\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\t\tthis.columns.push({\n\t\t\ttype: 'Subject',\n\t\t\tdf: {\n\t\t\t\tlabel: __('Subject'),\n\t\t\t\tfieldname: 'subject'\n\t\t\t}\n\t\t});\n\t\tthis.columns.push({\n\t\t\ttype: 'Field',\n\t\t\tdf: {\n\t\t\t\tlabel: this.is_sent_emails ? __(\"To\") : __(\"From\"),\n\t\t\t\tfieldname: this.is_sent_emails ? 'recipients' : 'sender'\n\t\t\t}\n\t\t});\n\t}\n\n\tget_seen_class(doc) {\n\t\tconst seen =\n\t\t\tBoolean(doc.seen) || JSON.parse(doc._seen || '[]').includes(frappe.session.user)\n\t\t\t\t? ''\n\t\t\t\t: 'bold';\n\t\treturn seen;\n\t}\n\n\tget is_sent_emails() {\n\t\tconst f = this.filter_area.get()\n\t\t\t.find(filter => filter[1] === 'sent_or_received');\n\t\treturn f && f[3] === 'Sent';\n\t}\n\n\trender_header() {\n\t\tthis.$result.find('.list-row-head').remove();\n\t\tthis.$result.prepend(this.get_header_html());\n\t}\n\n\trender() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_list();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\tget_meta_html(email) {\n\t\tconst attachment = email.has_attachment ?\n\t\t\t`<span class=\"fa fa-paperclip fa-large\" title=\"${__('Has Attachments')}\"></span>` : '';\n\n\t\tlet link = \"\";\n\t\tif (email.reference_doctype && email.reference_doctype !== this.doctype) {\n\t\t\tlink = `<a class=\"text-muted grey\"\n\t\t\t\thref=\"${frappe.utils.get_form_link(email.reference_doctype, email.reference_name)}\"\n\t\t\t\ttitle=\"${__('Linked with {0}', [email.reference_doctype])}\">\n\t\t\t\t<i class=\"fa fa-link fa-large\"></i>\n\t\t\t</a>`;\n\t\t}\n\n\t\tconst communication_date = comment_when(email.communication_date, true);\n\t\tconst status =\n\t\t\temail.status == \"Closed\" ? `<span class=\"fa fa-check fa-large\" title=\"${__(email.status)}\"></span>` :\n\t\t\t\temail.status == \"Replied\" ? `<span class=\"fa fa-mail-reply fa-large\" title=\"${__(email.status)}\"></span>` :\n\t\t\t\t\t\"\";\n\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${link}\n\t\t\t\t${attachment}\n\t\t\t\t${status}\n\t\t\t\t${communication_date}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_inbox_filters() {\n\t\tvar email_account = this.email_account;\n\t\tvar default_filters = [\n\t\t\t[\"Communication\", \"communication_type\", \"=\", \"Communication\", true],\n\t\t\t[\"Communication\", \"communication_medium\", \"=\", \"Email\", true],\n\t\t];\n\t\tvar filters = [];\n\t\tif (email_account === \"Sent\") {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Sent\", true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t} else if (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"email_status\", \"=\", email_account, true],\n\t\t\t\t[\"Communication\", \"email_account\", \"in\", frappe.boot.all_accounts, true]\n\t\t\t]);\n\t\t} else {\n\t\t\tvar op = \"=\";\n\t\t\tif (email_account == \"All Accounts\") {\n\t\t\t\top = \"in\";\n\t\t\t\temail_account = frappe.boot.all_accounts;\n\t\t\t}\n\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Received\", true],\n\t\t\t\t[\"Communication\", \"status\", \"=\", \"Open\", true],\n\t\t\t\t[\"Communication\", \"email_account\", op, email_account, true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tget_no_result_message() {\n\t\tvar email_account = this.email_account;\n\t\tvar args;\n\t\tif (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\treturn __(\"No {0} mail\", [email_account]);\n\t\t} else if (!email_account && !frappe.boot.email_accounts.length) {\n\t\t\t// email account is not configured\n\t\t\targs = {\n\t\t\t\tdoctype: \"Email Account\",\n\t\t\t\tmsg: __(\"No Email Account\"),\n\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t};\n\t\t} else {\n\t\t\t// no sent mail\n\t\t\targs = {\n\t\t\t\tdoctype: \"Communication\",\n\t\t\t\tmsg: __(\"No Emails\"),\n\t\t\t\tlabel: __(\"Compose Email\")\n\t\t\t};\n\t\t}\n\n\t\tconst html = frappe.model.can_create(args.doctype) ?\n\t\t\t`<p>${args.msg}</p>\n\t\t\t<p>\n\t\t\t\t<button class=\"btn btn-primary btn-sm btn-new-doc\">\n\t\t\t\t\t${args.label}\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t` :\n\t\t\t`<p>${ __(\"No Email Accounts Assigned\") }</p>`;\n\n\t\treturn `\n\t\t\t<div class=\"msg-box no-border\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tmake_new_doc() {\n\t\tif (!this.email_account && !frappe.boot.email_accounts.length) {\n\t\t\tfrappe.route_options = {\n\t\t\t\t'email_id': frappe.session.user_email\n\t\t\t};\n\t\t\tfrappe.new_doc('Email Account');\n\t\t} else {\n\t\t\tnew frappe.views.CommunicationComposer();\n\t\t}\n\t}\n};\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.treeview_settings\");\nfrappe.provide('frappe.views.trees');\nwindow.cur_tree = null;\n\nfrappe.views.TreeFactory = class TreeFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tfrappe.model.with_doctype(route[1], function() {\n\t\t\tvar options = {\n\t\t\t\tdoctype: route[1],\n\t\t\t\tmeta: frappe.get_meta(route[1])\n\t\t\t};\n\n\t\t\tif (!frappe.treeview_settings[route[1]] && !frappe.meta.get_docfield(route[1], \"is_group\")) {\n\t\t\t\tfrappe.msgprint(__(\"Tree view is not available for {0}\", [route[1]] ));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$.extend(options, frappe.treeview_settings[route[1]] || {});\n\t\t\tfrappe.views.trees[options.doctype] = new frappe.views.TreeView(options);\n\t\t});\n\t}\n}\n\nfrappe.views.TreeView = Class.extend({\n\tinit: function(opts) {\n\t\tvar me = this;\n\n\t\tthis.opts = {};\n\t\tthis.opts.get_tree_root = true;\n\t\tthis.opts.show_expand_all = true;\n\t\t$.extend(this.opts, opts);\n\t\tthis.doctype = opts.doctype;\n\t\tthis.args = {doctype: me.doctype};\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.get_tree_nodes =  me.opts.get_tree_nodes || \"frappe.desk.treeview.get_children\";\n\n\t\tthis.get_permissions();\n\t\tthis.make_page();\n\t\tthis.make_filters();\n\t\tthis.root_value = null;\n\n\t\tif (me.opts.get_tree_root) {\n\t\t\tthis.get_root();\n\t\t}\n\n\t\tthis.onload();\n\t\tthis.set_menu_item();\n\t\tthis.set_primary_action();\n\t},\n\tget_permissions: function(){\n\t\tthis.can_read = frappe.model.can_read(this.doctype);\n\t\tthis.can_create = frappe.boot.user.can_create.indexOf(this.doctype) !== -1 ||\n\t\t\t\t\tfrappe.boot.user.in_create.indexOf(this.doctype) !== -1;\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\t\tthis.can_delete = frappe.model.can_delete(this.doctype);\n\t},\n\tmake_page: function() {\n\t\tvar me = this;\n\t\tthis.parent = frappe.container.add_page(this.page_name);\n\t\tfrappe.ui.make_app_page({parent:this.parent, single_column:true});\n\n\t\tthis.page = this.parent.page;\n\t\tfrappe.container.change_to(this.page_name);\n\t\tfrappe.breadcrumbs.add(me.opts.breadcrumb || locals.DocType[me.doctype].module, me.doctype);\n\n\t\tthis.set_title();\n\n\t\tthis.page.main.css({\n\t\t\t\"min-height\": \"300px\",\n\t\t});\n\n\t\tthis.page.main.addClass('frappe-card');\n\n\t\tif(this.opts.show_expand_all) {\n\t\t\tthis.page.add_inner_button(__('Expand All'), function() {\n\t\t\t\tme.tree.load_children(me.tree.root_node, true);\n\t\t\t});\n\t\t}\n\n\t\tif(this.opts.view_template) {\n\t\t\tvar row = $('<div class=\"row\"><div>').appendTo(this.page.main);\n\t\t\tthis.body = $('<div class=\"col-sm-6 col-xs-12\"></div>').appendTo(row);\n\t\t\tthis.node_view = $('<div class=\"col-sm-6 hidden-xs\"></div>').appendTo(row);\n\t\t} else {\n\t\t\tthis.body = this.page.main;\n\t\t}\n\t},\n\tset_title: function() {\n\t\tthis.page.set_title(this.opts.title || __('{0} Tree', [__(this.doctype)]));\n\t},\n\tonload: function() {\n\t\tvar me = this;\n\t\tthis.opts.onload && this.opts.onload(me);\n\t},\n\tmake_filters: function() {\n\t\tvar me = this;\n\t\tfrappe.treeview_settings.filters = []\n\t\t$.each(this.opts.filters || [], function(i, filter) {\n\t\t\tif (frappe.route_options && frappe.route_options[filter.fieldname]) {\n\t\t\t\tfilter.default = frappe.route_options[filter.fieldname];\n\t\t\t}\n\n\t\t\tif (!filter.disable_onchange) {\n\t\t\t\tfilter.change = function() {\n\t\t\t\t\tfilter.onchange && filter.onchange();\n\t\t\t\t\tvar val = this.get_value();\n\t\t\t\t\tme.args[filter.fieldname] = val;\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tme.root_label = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = me.opts.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.set_title();\n\t\t\t\t\tme.make_tree();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tme.page.add_field(filter);\n\n\t\t\tif (filter.default) {\n\t\t\t\t$(\"[data-fieldname='\"+filter.fieldname+\"']\").trigger(\"change\");\n\t\t\t}\n\t\t});\n\t},\n\tget_root: function() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: me.get_tree_nodes,\n\t\t\targs: me.args,\n\t\t\tcallback: function(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tif (r.message.length > 1) {\n\t\t\t\t\t\tme.root_label = me.doctype;\n\t\t\t\t\t\tme.root_value = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = r.message[0][\"value\"];\n\t\t\t\t\t\tme.root_value = me.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\tmake_tree: function() {\n\t\t$(this.parent).find(\".tree\").remove();\n\n\t\tvar use_label = this.args[this.opts.root_label] || this.root_label || this.opts.root_label;\n\t\tvar use_value = this.root_value;\n\t\tif (use_value == null) {\n\t\t\tuse_value = use_label;\n\t\t}\n\t\tthis.tree = new frappe.ui.Tree({\n\t\t\tparent: this.body,\n\t\t\tlabel: use_label,\n\t\t\troot_value: use_value,\n\t\t\texpandable: true,\n\n\t\t\targs: this.args,\n\t\t\tmethod: this.get_tree_nodes,\n\n\t\t\t// array of button props: {label, condition, click, btnClass}\n\t\t\ttoolbar: this.get_toolbar(),\n\n\t\t\tget_label: this.opts.get_label,\n\t\t\ton_render: this.opts.onrender,\n\t\t\ton_get_node: this.opts.on_get_node,\n\t\t\ton_click: (node) => { this.select_node(node); },\n\t\t});\n\n\t\tcur_tree = this.tree;\n\t\tthis.post_render();\n\t},\n\n\trebuild_tree: function() {\n\t\tlet me = this;\n\n\t\tfrappe.call({\n\t\t\t\"method\": \"frappe.utils.nestedset.rebuild_tree\",\n\t\t\t\"args\": {\n\t\t\t\t'doctype': me.doctype,\n\t\t\t\t'parent_field': \"parent_\"+me.doctype.toLowerCase().replace(/ /g, '_'),\n\t\t\t},\n\t\t\t\"callback\": function(r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tpost_render: function() {\n\t\tvar me = this;\n\t\tme.opts.post_render && me.opts.post_render(me);\n\t},\n\n\tselect_node: function(node) {\n\t\tvar me = this;\n\t\tif(this.opts.click) {\n\t\t\tthis.opts.click(node);\n\t\t}\n\t\tif(this.opts.view_template) {\n\t\t\tthis.node_view.empty();\n\t\t\t$(frappe.render_template(me.opts.view_template,\n\t\t\t\t{data:node.data, doctype:me.doctype})).appendTo(this.node_view);\n\t\t}\n\t},\n\tget_toolbar: function() {\n\t\tvar me = this;\n\n\t\tvar toolbar = [\n\t\t\t{\n\t\t\t\tlabel:__(me.can_write? \"Edit\": \"Details\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\treturn !node.is_root && me.can_read;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.set_route(\"Form\", me.doctype, node.label);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Add Child\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\treturn me.can_create && node.expandable && !node.hide_add;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tme.new_node();\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Rename\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\tlet allow_rename = true;\n\t\t\t\t\tif (me.doctype && frappe.get_meta(me.doctype)) {\n\t\t\t\t\t\tif(!frappe.get_meta(me.doctype).allow_rename) allow_rename = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn !node.is_root && me.can_write && allow_rename;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.model.rename_doc(me.doctype, node.label, function(new_name) {\n\t\t\t\t\t\tnode.$tree_link.find('a').text(new_name);\n\t\t\t\t\t\tnode.label = new_name;\n\t\t\t\t\t\tme.tree.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Delete\"),\n\t\t\t\tcondition: function(node) { return !node.is_root && me.can_delete; },\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.model.delete_doc(me.doctype, node.label, function() {\n\t\t\t\t\t\tnode.parent.remove();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t}\n\t\t]\n\n\t\tif(this.opts.toolbar && this.opts.extend_toolbar) {\n\t\t\ttoolbar = toolbar.filter(btn => {\n\t\t\t\treturn !me.opts.toolbar.find(d => d[\"label\"]==btn[\"label\"]);\n\t\t\t});\n\t\t\treturn toolbar.concat(this.opts.toolbar)\n\t\t} else if (this.opts.toolbar && !this.opts.extend_toolbar) {\n\t\t\treturn this.opts.toolbar\n\t\t} else {\n\t\t\treturn toolbar\n\t\t}\n\t},\n\tnew_node: function() {\n\t\tvar me = this;\n\t\tvar node = me.tree.get_selected_node();\n\n\t\tif(!(node && node.expandable)) {\n\t\t\tfrappe.msgprint(__(\"Select a group node first.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prepare_fields();\n\n\t\t// the dialog\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __('New {0}',[__(me.doctype)]),\n\t\t\tfields: me.fields\n\t\t});\n\n\t\tvar args = $.extend({}, me.args);\n\t\targs[\"parent_\"+me.doctype.toLowerCase().replace(/ /g,'_')] = me.args[\"parent\"];\n\n\t\td.set_value(\"is_group\", 0);\n\t\td.set_values(args);\n\n\t\t// create\n\t\td.set_primary_action(__(\"Create New\"), function() {\n\t\t\tvar btn = this;\n\t\t\tvar v = d.get_values();\n\t\t\tif(!v) return;\n\n\t\t\tv.parent = node.label;\n\t\t\tv.doctype = me.doctype;\n\n\t\t\tif(node.is_root){\n\t\t\t\tv['is_root'] = node.is_root;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tv['is_root'] = false;\n\t\t\t}\n\n\t\t\td.hide();\n\t\t\tfrappe.dom.freeze(__('Creating {0}', [me.doctype]));\n\n\t\t\t$.extend(args, v)\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: me.opts.add_tree_node || \"frappe.desk.treeview.add_node\",\n\t\t\t\targs: args,\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tme.tree.load_children(node);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tfrappe.dom.unfreeze();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\td.show();\n\t},\n\tprepare_fields: function(){\n\t\tvar me = this;\n\n\t\tthis.fields = [\n\t\t\t{fieldtype:'Check', fieldname:'is_group', label:__('Group Node'),\n\t\t\t\tdescription: __(\"Further nodes can be only created under 'Group' type nodes\")}\n\t\t]\n\n\t\tif (this.opts.fields) {\n\t\t\tthis.fields = this.opts.fields;\n\t\t}\n\n\t\tthis.ignore_fields = this.opts.ignore_fields || [];\n\n\t\tvar mandatory_fields = $.map(me.opts.meta.fields, function(d) {\n\t\t\treturn (d.reqd || d.bold && !d.read_only) ? d : null });\n\n\t\tvar opts_field_names = this.fields.map(function(d) {\n\t\t\treturn d.fieldname\n\t\t})\n\n\t\tmandatory_fields.map(function(d) {\n\t\t\tif($.inArray(d.fieldname, me.ignore_fields) === -1 && $.inArray(d.fieldname, opts_field_names) === -1) {\n\t\t\t\tme.fields.push(d)\n\t\t\t}\n\t\t})\n\t},\n\tprint_tree: function() {\n\t\tif(!frappe.model.can_print(this.doctype)) {\n\t\t\tfrappe.msgprint(__(\"You are not allowed to print this report\"));\n\t\t\treturn false;\n\t\t}\n\t\tvar tree = $(\".tree:visible\").html();\n\t\tvar me = this;\n\t\tfrappe.ui.get_print_settings(false, function(print_settings) {\n\t\t\tvar title =  __(me.docname || me.doctype);\n\t\t\tfrappe.render_tree({title: title, tree: tree, print_settings:print_settings});\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.core.doctype.access_log.access_log.make_access_log\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\treport_name: me.page_name,\n\t\t\t\t\tpage: tree,\n\t\t\t\t\tmethod: 'Print'\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\tset_primary_action: function() {\n\t\tvar me = this;\n\t\tif (!this.opts.disable_add_node && this.can_create) {\n\t\t\tme.page.set_primary_action(__(\"New\"), function() {\n\t\t\t\tme.new_node();\n\t\t\t}, \"add\");\n\t\t}\n\t},\n\tset_menu_item: function() {\n\t\tvar me = this;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __('View List'),\n\t\t\t\taction: function() {\n\t\t\t\t\tfrappe.set_route('List', me.doctype);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Print'),\n\t\t\t\taction: function() {\n\t\t\t\t\tme.print_tree();\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Refresh'),\n\t\t\t\taction: function() {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t},\n\t\t];\n\n\t\tif (frappe.user.has_role('System Manager') &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"lft\") &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"rgt\")) {\n\t\t\tthis.menu_items.push(\n\t\t\t\t{\n\t\t\t\t\tlabel: __('Rebuild Tree'),\n\t\t\t\t\taction: function() {\n\t\t\t\t\t\tme.rebuild_tree();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (me.opts.menu_items) {\n\t\t\tme.menu_items.push.apply(me.menu_items, me.opts.menu_items)\n\t\t}\n\n\t\t$.each(me.menu_items, function(i, menu_item){\n\t\t\tvar has_perm = true;\n\t\t\tif(menu_item[\"condition\"]) {\n\t\t\t\thas_perm = eval(menu_item[\"condition\"]);\n\t\t\t}\n\n\t\t\tif (has_perm) {\n\t\t\t\tme.page.add_menu_item(menu_item[\"label\"], menu_item[\"action\"]);\n\t\t\t}\n\t\t});\n\t}\n});\n\n\n\n\n\n\n\n\n"],"names":["frappe","has_indicator","doctype","model","is_submittable","listview_settings","get_indicator","workflow","get_state_fieldname","meta","has_field","doc","__unsaved","__","workflows","without_workflow","settings","workflow_fieldname","value","colour","locals","style","Success","Warning","Danger","Primary","Inverse","Info","docstatus","has_indicator_for_draft","has_indicator_for_cancelled","indicator","status","utils","guess_colour","enabled","disabled","ui","Filter","[object Object]","opts","$","extend","this","undefined","filter_utils","set_conditions","set_conditions_from_config","make","conditions","nested_set_conditions","push","ref","invalid_condition_map","Date","Datetime","Data","Select","Link","Currency","Color","Check","map","c","filter","boot","additional_filters_config","filters_config","Object","keys","let","key","label","fieldtype","valid_for_fieldtypes","includes","filter_edit_area","render_template","parent","appendTo","find","make_select","set_events","setup","fieldselect","FieldSelect","parent_doctype","_parent_doctype","filter_fields","input_class","select","fieldname","set_field","set_value","on","remove","on_change","change","field","condition","get_condition","add_condition_help","empty","df","const","set_values","is_new","promise","Promise","resolve","addClass","update_filter_tag","hidden","then","$filter_tag","hide","_filter_value_set","set_filter_button_text","make_tag","original_type","set_condition","Array","isArray","join","trim","cur","k","original_docfield","fields_by_name","console","warn","copy_dict","read_only","is_filter","hidden_due_to_dependency","get_default_condition","set_fieldtype","options","selected_doctype","selected_fieldname","args","depends_on","field_name","filter_value","filter_list","get_filter_value","xcall","get_field","make_field","old_fieldtype","old_text","get_value","hide_invalid_conditions","toggle_nested_set_conditions","field_area","get","f","form","make_control","only_input","refresh","bind_filter_field_events","$input","wrapper","keydown","e","which","get_selected_value","val","trigger_change","$condition_field","description","html","get_filter_tag_element","insertAfter","bind_tag","bind","filter_button","closest","show","toggle","get_filter_button_text","get_formatted_value","icon","invalid_conditions","show_condition","nested_set_doctypes","forEach","0","1","2","cint","format","only_value","strip","indexOf","startsWith","endsWith","in_list","split","v","reqd","ignore_link_validation","toLowerCase","get_timespan_options","periods","period_map","Last","This","Next","period","p","FilterGroup","filters","window","fltr","make_popover","append","get_filter_area_template","set_filter_events","init_filter_popover","set_popover_events","popover","content","template","trigger","container","placement","offset","document","body","is","in_datepicker","target","length","parents","hide_empty_filters","toggle_empty_filters","add_filters_to_popover","add_filter","apply","router","update_filters","filters_applied","button_label","toggleClass","clear_filters","promises","run_serially","validate_args","is_new_filter","arguments","push_new_filter","std_fields_list","msgprint","message","bold","filter_exists","_push_new_filter","index","update","filter_items","base_list","exists","f_value","equal","arrays_equal","slice","update_filter_button","get_filters","reduce","acc","assign","from","set_standard_filter","non_standard_filters","add_filters","list_view","Class","init","me","select_input","awesomplete","Awesomplete","minChars","maxItems","autoFirst","list","item","repl","data","originalEvent","text","get_item","i","add_field_option","build_options","clear","parts","each","table_fields","std_filters","std_fields","d","doctype_obj","istable","concat","with_blank","main_table_fields","docfield_list","sort","get_meta","perm","has_perm","permlevel","table_df","child_table_fields","link_field","get_docfields","table","no_value_type","Tags","tagsList","onTagAdd","onTagRemove","onTagClick","onChange","placeholder","$ul","$inputWrapper","get_list_element","$placeholder","deactivate","select_tag","tagValue","xss_sanitise","addTag","keypress","keyCode","focusout","activate","focus","addTags","$tag","get_tag","insertBefore","splice","labels","$element","class_name","$li","get_data_pill","pill_wrapper","removeTag","TagEditor","setup_tags","user_tags","initialized","tags","tag","refreshing","call","method","get_args","callback","r","fetch_tags","setup_awesomplete","setup_complete","input","attr","frm","txt","dt","dn","docname","clearTags","setTimeout","is_liked","get_liked_by","session","user","liked","_liked_by","JSON","parse","toggle_like","$btn","name","add","hasClass","css","quiet","exc","action_buttons","replace","removeClass","liked_by","idx","stringify","click_toggle_like","$count","siblings","not_liked","setup_like_popover","$parent","selector","check_not_liked","dom","is_touchscreen","target_element","animation","decodeURI","liked_by_list","avatar","full_name","children","click","ev","currentTarget","dataset","set_route","provide","views","BaseList","before_refresh","init_promise","tasks","setup_defaults","set_stats","setup_fields","setup_page","setup_side_bar","setup_main_section","setup_view","setup_view_menu","fn","page_name","get_route_str","page_title","doctype_layout","user_settings","get_user_settings","start","page_length","can_create","can_write","fields","sort_by","sort_order","primary_action","secondary_action","menu_items","action","class","set_fields","build_fields","title_field","_add_field","is_value_type","in_list_view","Boolean","uniqBy","stats","workflow_state_fieldname","page","$page","hide_card_layout","main","page_form","hide_page_form","hide_sidebar","setup_page_head","set_title","set_menu_items","set_breadcrumbs","icon_map","Image","List","Report","Calendar","Gantt","Kanban","Dashboard","Map","desk_settings","view_switcher","views_menu","add_custom_button_group","view_name","views_list","ListViewSelect","sidebar","list_sidebar","$secondary_action","set_secondary_action","refresh_button","add_action_icon","set_default_secondary_action","$item","add_menu_item","standard","shortcut","breadcrumbs","module","ListSidebar","show_sidebar","localStorage","show_or_hide_sidebar","setup_list_wrapper","setup_filter_area","setup_sort_selector","setup_result_area","setup_no_result_area","setup_freeze_area","setup_paging_area","$frappe_list","hide_filters","filter_area","FilterArea","set","hide_sort_selector","sort_selector","SortSelector","$filter_section","onchange","on_sort_change","$result","$no_result","get_no_result_message","$freeze","$paging_area","$this","selected_page_count","get_full_column_name","name_field","get_filters_for_args","like","not set","get_fields","order_by","get_sql_string","view","group_by","get_group_by","freeze","freeze_on_refresh","freeze_message","get_call_args","prepare_data","toggle_result_area","before_render","render","after_render","reset_defaults","dict","values","show_more","names","get_checked_items","custom_actions","$filter_list_wrapper","trigger_refresh","make_standard_filters","make_filter_list","standard_filters","get_standard_filters","on_filter_change","fields_dict","out","get_filter","standard_filters_wrapper","refresh_list_view","custom_filter_configs","config","doctype_fields","in_standard_filter","unshift","default_value","defaults","get_user_default","default","add_field","default_filters","view_modes","is_valid","view_mode","BulkOperations","throw","docs","print_settings","get_doc","allow_print_for_draft","allow_print_for_cancelled","valid_docs","has_role","dialog","Dialog","title","get_letterhead_options","get_print_formats","get_print_sizes","pdf_page_size","pdf_page_height","pdf_page_width","set_primary_action","pdf_options","default_print_format","with_letterhead","letter_sel","print_format","print_sel","json_string","letterhead","page_size","page_height","page_width","page-height","page-width","page-size","open","encodeURIComponent","letterhead_options","limit_page_length","async","docnames","done","items","failed","_server_messages","play_sound","assign_to","AssignToDialog","obj","bulk_assign","re_assign","field_mappings","field_options","status_regex","default_field","test","set_value_field","disable_primary_action","enable_primary_action","show_alert","primary_action_label","dialogObj","new_df","match","replace_field","get_data","db","get_link_options","get_values","set_message","ListSettings","listview","subject_field","with_doctype","get_listview_fields","setup_remove_fields","add_new_fields","show_dialog","list_view_settings","removed_listview_fields","removed_fields","refresh_columns","update_fields","field_count","fields_html","$wrapper","total_fields","parseInt","is_sortable","show_sortable_handle","can_remove","Sortable","getElementsByClassName","handle","draggable","onUpdate","onclick","column_selector","remove_fields","getAttribute","existing_fields","set_removed_fields","get_removed_listview_fields","fields_order","reset_listview_fields","get_doctype_fields","columns","set_subject_field","set_status_field","get_docfield","set_list_view_fields","type","multiselect_fields","checked","new_fields","column","ListView","route","get_route","last_view","super","disable_scroll_to_top","has_permissions","view_user_settings","saved_filters","validate_filters","get_menu_items","toggle_paging","patch_refresh_and_load_lib","get_list_view_settings","valid_fields","set_actions_menu_items","actions_menu_items","get_actions_menu_items","workflow_action_menu_items","get_workflow_action_menu_items","workflow_action_items","add_actions_menu_item","is_workflow_action","match_rules_list","get_match_rules","restricted_list","show_restrictions","condition_list","get_fields_in_list_view","image_field","add_fields","track_seen","throttle","load_lib","required_libs","require","setInterval","doctype_name","make_new_doc","clear_primary_action","is_non_std_field","new_doc","setup_columns","render_header","render_skeleton","setup_events","onload","show_restricted_list_indicator_if_applicable","refresh_header","update_checkbox","$checkbox_actions","$check_all_checkbox","prop","$checks","get_df","fields_in_list_view","reorder_listview_fields","innerWidth","hide_name_column","fld","col","documentation","help_link","get_documentation_link","no_result_message","new_button_label","empty_state_image","disable_count","with_comment_count","route_options","parse_filters_from_route_options","toggle_actions_menu_button","show_actions_menu","toggle_workflow_actions","hide_actions_menu","prepend","get_header_html","$row","get_list_row_html_skeleton","save","save_view_user_settings","setup_new_doc_event","reload_stats","render_list","set_rows_as_checked","on_row_checked","render_count","_idx","get_list_row_html","get_count_str","str","subject_html","$columns","is_numeric_field","get_header_html_skeleton","left","right","get_column_html","get_meta_html","get_left_html","get_right_html","get_indicator_html","tags_shown","_user_tags","get_tags_html","_value","css_class","Subject","Field","column_html","get_subject_html","fetch_from","strip_html","escape_html","Math","round","formatters","limit","colored","color","get_palette","settings_button","button","get_description","get_label","modified","comment_when","assigned_to","assigned_users","_assign","avatar_group","filterable","_comment_count","get_indicator_dot","current_count","count_without_children","count","total_count","get_form_link","slug","_seen","encodeURI","u","user_info","fullname","formatter","subject","toString","escaped_subject","seen","get_seen_class","escape","get_like_html","url","image","cordova","is_url","base_url","setup_filterable","setup_list_click","setup_tag_event","setup_check_events","setup_like","setup_realtime_updates","setup_action_handler","setup_keyboard_navigation","focus_next","activeElement","next","focus_prev","prev","check_row","get_list_row_if_focused","is_current_page","is_input_focused","handle_navigation","direction","add_shortcut","$list_row","metaKey","ctrlKey","stopPropagation","filters_to_apply","datetime","get_today","$target","$check","preventDefault","link","pathname","$button","shiftKey","$checkbox_cursor","name_1","name_2","findIndex","min_index","max_index","toggle_tags","disable_auto_refresh","realtime","is_being_edited","call_args","datum","a","b","a_value","b_value","return_value","el","$list_head_subject","preview_label","only_docnames","check","cstr","unescape","query_params","full_url","location","href","get_share_url","copy_to_clipboard","can_import","reference_doctype","can_set_user_permissions","allow","user_roles","custom","doc_type","toggle_side_bar","share_url","developer_mode","show_list_settings","workflow_actions","has_workflow","get_all_transition_actions","checked_items","actions","bulk_operations","is_field_editable","field_doc","some","has_editable_fields","edit","apply_assignment_rule","add_tags","can_print","print","has_submit_permission","confirm","submit_or_cancel","can_cancel","can_delete","delete","value_array","get_doctype_for_field","j","on_update","event","trigger_list_update","get_list_view","cur_list","ListFactory","Factory","issingle","set_re_route","to_title_case","view_class","load_last_view","change_to","make_page","set_cur_list","re_route_to_view","set_module_breadcrumb","last_route","route_history","history","go","prev_route","module_links","set_doctype_module","set_current_view","setup_views","add_custom_menu_item","current_view","kanban_board","email_account","calendar_name","current_view_handler","reports","get_reports","default_action","setup_dropdown_in_sidebar","calendar","get_calendars","calendars","Inbox","email_accounts","accounts","get_email_accounts","has_common","Tree","treeview_settings","is_tree","setup_kanban_boards","KanbanView","get_kanbans","kanbans","setup_kanban_switcher","get_coords_method","add_view_to_menu","views_wrapper","$dropdown","get_page_name","kanban_switcher","show_kanban_dialog","added","reports_to_add","add_reports","ref_doctype","report_type","all_reports","localeCompare","last_opened_kanban","last_kanban_board","get_list","result","accounts_to_add","account","email_id","display_name","ListFilter","can_add_global","$input_area","$list_filters","$saved_filters","$saved_filters_preview","saved_filters_hidden","filter_input","render_input","is_global_input","bind_save_filter","bind_toggle_saved_filters","bind_click_filter","bind_remove_filter","get_list_filters","filter_template","set_description","toggle_saved_filters","$filter","set_applied_filter","get_filters_values","applied_filters","remove_filter","remove_filters","debounce","has_value","filter_name_exists","save_filter","help_text","filter_name","insert","for_user","get_current_filters","delete_doc","or_filters","redirect_to_home_if_invalid_route","get_doc_mappings","Event","field_map","interaction_type","summary","category","due_date","public","reqd_fields","hidden_fields","ToDo","reference_document","sidebar_content","setup_list_filter","setup_list_group_by","disable_sidebar_stats","show_list_link","dropdown","divider","get_divider","list_filter","get_shortcut_group","list_group_by","ListGroupBy","render_stat","stats_dropdown","setup_search","tag_list","existing","get_stats","make_wrapper","group_by_fields","render_group_by_items","make_group_by_fields_modal","setup_dropdown","setup_filter_by","get_group_by_dropdown_fields","$body","docfield","set_loading_state","get_group_by_count","field_count_list","applied_filter","render_dropdown_items","set_empty_state","current_filters","f_arr","field_counts","current_user","standard_html","applied_filter_html","dropdown_items_html","get_dropdown_html","dropdown_html","applied","is_selected","decodeURIComponent","apply_filter","operator","GanttView","calendar_settings","gantt","prepare_tasks","progress","isFunction","end","id","dependencies","depends_on_tasks","validate_hex","substr","is_milestone","render_gantt","gantt_view_mode","bar_height","bar_corner_radius","resize_handle_width","resize_handle_height","resize_handle_corner_radius","resize_handle_offset","date_format","on_click","task","on_date_change","moment","on_progress_change","progress_fieldname","on_view_change","mode","custom_popup_html","_start","_end","gantt_custom_popup_html","setup_view_mode_buttons","set_colors","view_is","change_view_mode","t","custom_class","bar_color","get_contrast_color","CalendarView","last_calendar","get_calendar_preferences","with_doc","start_date_field","end_date_field","allDay","all_day","assets","user_language","language","get_default_options","defaultView","getItem","weekends","setup_options","setup_view_mode_button","clear_user_actions","can_read","$cal","fullCalendar","footnote_area","set_footnote","border-top","cal_options","set_css","detach","btn","set_localStorage_option","option","removeItem","setItem","wrapAll","wrap","btn_group","color_map","danger","success","warning","get_system_datetime","date","_offset","tz","sys_defaults","time_zone","convert_to_system_tz","meridiem","locale","header","editable","selectable","selectHelper","forceEventDuration","displayEventTime","nowIndicator","events","timezone","get_events_method","prepare_events","displayEventEnd","eventRender","element","tooltip","eventClick","eventDrop","delta","revertFunc","update_event","eventResize","startDate","endDate","jsEvent","get_new_doc","_ambigTime","subtract","dayClick","$date_cell","source","convert_to_user_tz","validate","add_days","fix_end_date_for_event_render","prepare_colors","html2text","color_name","get_css_class","backgroundColor","textColor","remove_from_locals","update_event_method","get_update_args","error","stripTime","DashboardView","dashboard_settings","chart_group","number_card_group","setup_dashboard_page","setup_dashboard_customization","make_dashboard","customize","reset_dashboard_customization","add_customization_buttons","clear_secondary_action","$dashboard_page","$dashboard_wrapper","$chart_header","bind_actions_with_object","save_customizations_button","add_button","save_dashboard_customization","standard_actions","btn_class","discard_customizations_button","discard_dashboard_customization","toggle_customization_buttons","charts","number_cards","render_dashboard","fetch_dashboard_items","chart_type","document_type","is_public","dashboard_utils","get_dashboard_settings","dashboard_chart_settings","chart_config","chart","chart_name","chart_settings","render_dashboard_charts","render_number_cards","render_empty_state","obj_name","widget","WidgetGroup","allow_sorting","allow_create","allow_delete","allow_hiding","default_values","widgets","in_customize_mode","height","allow_resize","custom_dialog","show_add_chart_dialog","empty_state_html","$empty_state","toggle_customize","widget_group","get_widget_config","order","widget_name","remove_duplicates","get_widgets_to_save","get_field_options","get_query","query","mandatory_depends_on","value_fields","date_fields","aggregate_function_fields","new_or_existing","chart_function","filters_json","new_widget","on_create","numeric_fieldtypes","ImageView","_image_url","get_image_url","get_attached_images","render_image_view","gallery","prepare_pswp_items","images_map","setup_gallery","item_html","info_fields","info_html","_name","encoded_name","escaped_title","_class","_html","get_abbr","details","item_details_html","expand_button_html","GalleryView","lib_ready","prepare","pswp_root","pswp","_items","_images_map","width","naturalWidth","naturalHeight","getBoundingClientRect","src","msrc","w","h","pswp_items","_show","getThumbBoundsFn","thumbnail","pageYScroll","pageYOffset","documentElement","scrollTop","rect","x","y","top","shareEl","showHideOpacity","PhotoSwipe","PhotoSwipeUI_Default","browse_images","$more_items","last_hide_timeout","hide_more_items_after_2s","clearTimeout","hide_more_items","img_html","listen","images","currItem","off","img_el","goTo","invalidateCurrItems","updateSize","asset_dir","MapView","get_coords","render_map_view","map_id","get_unique_id","L","Icon","Default","imagePath","setView","map_defaults","center","zoom","tileLayer","tiles","addTo","control","scale","coords","features","geoJSON","bindPopup","properties","lastCoords","geometry","coordinates","reverse","panTo","board_name","card_meta","get_card_meta","save_kanban_board_filters","get_board","board","filters_array","set_indicator","clear_indicator","kanban","KanbanBoard","cards","quick_entry","mandatory","kanban_boards","show_existing","kanban_options","select_fields","get_fields_for_dialog","project","selected_kanban","kb","kanban_filters","kanban_board_name","err","new_kanban_dialog","InboxView","last_email_account","current_email_account","get_inbox_filters","is_sent_emails","email","attachment","has_attachment","reference_name","communication_date","all_accounts","op","msg","CommunicationComposer","user_email","FileView","last_folder","home_folder","add_file_action_buttons","grid_view","get_breadcrumbs_html","current_folder","file_menu_items","prompt","file_name","folder","FileUploader","restrictions","allowed_file_types","on_success","file","$cut_button","file_manager","cut","$paste_btn","paste","prepare_datum","is_folder","icon_class","is_image_file","file_url","_title","_type","is_private","render_grid_view","file_body_html","get_route_url","get_creation_date","folders","curr","breadcrumbs_html","creation","now_date","str_to_user","file_size","FileSize","route_url","setup_drag_events","dataTransfer","setData","opacity","$el","files","getData","folder_name","toggle_cut_paste_buttons","hide_paste_btn","can_paste","old_folder","hide_cut_btn","cur_tree","TreeFactory","trees","TreeView","get_tree_root","show_expand_all","get_tree_nodes","get_permissions","make_filters","root_value","get_root","set_menu_item","in_create","add_page","make_app_page","single_column","breadcrumb","DocType","min-height","add_inner_button","tree","load_children","root_node","view_template","row","node_view","disable_onchange","root_label","make_tree","use_label","use_value","expandable","toolbar","get_toolbar","on_render","onrender","on_get_node","node","select_node","post_render","rebuild_tree","parent_field","is_root","hide_add","new_node","btnClass","allow_rename","rename_doc","new_name","$tree_link","extend_toolbar","get_selected_node","prepare_fields","add_tree_node","always","unfreeze","ignore_fields","mandatory_fields","opts_field_names","inArray","print_tree","get_print_settings","render_tree","report_name","disable_add_node","menu_item","eval","InteractionComposer","no_submit_on_enter","create_action","display","select_attachments","render_attach","filename","interaction_docs","set_df_property","set_reqd_hidden_fields","get_event_categories","categories","get_input","add_options","setup_attach","doc_mapping","attach","attachments","attachment_uploaded","cur_frm","get_files","urllib","get_full_url","get_primary_btn","form_values","selected_attachments","create_interaction","interaction_values","reference_docname","assign_document","add_attachments","reload_doc","assignee"],"mappings":"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"}